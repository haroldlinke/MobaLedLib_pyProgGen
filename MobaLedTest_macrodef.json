{
    "ARDUINO-port": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "ARDUINO port",
        "Name": "ARDUINO port",
        "Kurzbeschreibung": "ARDUINO port ",
        "Ausführliche Beschreibung": "ARDUINO port",
        "MacroStr": "",
        "Params": [
            "S_Description",
            "ARDUINO port"
        ]
    },
    "ARDUINOConfigPage": {
        "Typ": "ARDUINOConfigPage",
        "Name": "ARDUINOConfigPage",
        "MTabName": "ARDUINO Einstellungen",
        "Title": "ARDUINO Einstellungen",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "Individuellen Pfad zur ARDUINO IDE verwenden",
        "Button_3": "Pfad zur ARDUINO IDE auswählen",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "Hier können Sie die Einstellungen für den ARDUINO vornehmen.\nSchliessen Sie den ARDUINO an einen USB Port an. Der ARDUINO wird automatisch in der Liste der gefundenen Geräte angezeigt.\nWenn nur ein ARDUINO gefunden wurde, wird er automatisch auch als Anschluss eingetragen. Sie könnnen dies aber auch von Hand ändern.\nDer Boardtyp wird auch automatisch übernommen.\nWenn mehrer ARDUINOs angeschlossen sind, können Sie den ausgewählten ARDUINO blinken lassen.",
        "Params": [
            "ARDUINOConnected",
            "ARDUINOMessage",
            "ARDUINODetect",
            "ARDUINOParams",
            "ARDUINOMobaLedLib"
        ]
    },
    "ARDUINOMonitorPage": {
        "Typ": "ARDUINOMonitorPage",
        "Name": "ARDUINOMonitorPage",
        "MTabName": "ARDUINO Monitor",
        "Title": "ARDUINO Monitor",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Message_1": "Kompilieren und Hochladen gestartet. Dies kann einige Minuten dauern. Holen Sie sich einen Kaffee :)",
        "Message_2": "Kompilieren und Hochladen erfolgreich beendet",
        "Message_3": "FEHLER beim Kompilieren und Hochladen",
        "Message_4": "Fehler: Die Arduino Entwicklungsumgebung wurde nicht gefunden. Hier wurde gesucht:",
        "suppressLinesList": [
            "Set log4j store directory",
            " StatusLogger ",
            "serial.SerialDiscovery"
        ],
        "Win_ARDUINOIDE": [
            "C:\\Program Files (x86)\\Arduino\\arduino_debug.exe",
            "C:\\Program Files\\Arduino\\arduino_debug.exe"
        ],
        "ARDUINOIDE": "arduino",
        "Kurzbeschreibung": "ARDUINO Monitor",
        "Ausführliche Beschreibung": "Diese Seite zeigt die Meldungen der ARDUINO-Tools beim Erzeugen des Programms und beim Hochladen an",
        "Params": []
    },
    "AmpelX": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-6",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "6",
        "Macro": "AmpelX(        LED,InCh)",
        "Find Name for detection of actual macro": "AmpelX(",
        "Name": "AmpelX",
        "Kurzbeschreibung": "Damit wird das Muster zweier Ampeln für eine Kreuzung erzeugt.",
        "Ausführliche Beschreibung": "Damit wird das Muster zweier Ampeln für eine Kreuzung erzeugt. Die einzelnen LEDs werden über ein WS2811 Modul angesteuert.",
        "MacroStr": "AmpelX({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "AndreaskrRGB": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "AndreaskrRGB(  LED,InCh)",
        "Find Name for detection of actual macro": "AndreaskrRGB(",
        "Name": "AndreaskrRGB",
        "Kurzbeschreibung": "Generiert das abwechselnd Blinken der Lampen in Andreaskreuzen  zu Demonstrationszwecken mit einer RGB LED.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "AndreaskrRGB({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Andreaskreuz": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Andreaskreuz(  LED,Cx,InCh)",
        "Find Name for detection of actual macro": "Andreaskreuz(",
        "Name": "Andreaskreuz",
        "Kurzbeschreibung": "Generiert das abwechselnd Blinkenden Lampen in Andreaskreuzen.",
        "Ausführliche Beschreibung": "Zur Ansteuerung der abwechselnd Blinkenden Lampen in Andreaskreuzen kann diese Funktion benutzt werden. 'Cx' bestimmt den ersten verwendeten Kanal (1, 2 oder 3). Dieser Blinkt im Wechsel zu dem folgenden Kanal. Die Helligkeit der LEDs ändert sich langsam so dass das Typische 'Weiche' Blinken entsteht.",
        "MacroStr": "Andreaskreuz({LED},{Cx},{InCh})",
        "Params": [
            "LED",
            "InCh",
            "Cx"
        ]
    },
    "Bin_InCh_to_TmpVar": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "Bin_InCh_to_TmpVar(InCh, InCh_Cnt)",
        "Find Name for detection of actual macro": "Bin_InCh_to_TmpVar(",
        "Name": "Bin_InCh_to_TmpVar",
        "Kurzbeschreibung": "Mit diesem Befehl wird eine temporäre 8 Bit Variable mit den binären Werten aus mehreren logischen Variablen gefüllt. ",
        "Ausführliche Beschreibung": "Dieser Befehl kombiniert mehrere logische Variablen binär zu einer 8 Bit Variable. Wenn zwei Eingangsvariablen benutzt werden dann ergeben sich 4 mögliche Kombinationen:\n  Var 1   Var 0   Ausgang\n      0       0            0\n      0       1            1\n      1       0            2\n      1       1            3\nBei InCh_Cnt = 3 ergeben sich entsprechend 8 verschiedene Kombinationen.\n Diese Funktion wird z.B. zur Ansteuerung von Signalen bei Selectrix verwendet.",
        "MacroStr": "Bin_InCh_to_TmpVar({InCh},{InCh_Cnt})",
        "Params": [
            "InCh",
            "InCh_Cnt"
        ]
    },
    "Blink2": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Blink2(        LED,Cx,InCh,Pause,Act,Val0,Val1)",
        "Find Name for detection of actual macro": "Blink2(",
        "Name": "Blink2",
        "Kurzbeschreibung": "Blinker mit einstellbaren Zeiten und Helligkeitswerten.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Blink2({LED},{Cx},{InCh},{Pause},{Act},{Val0},{Val1})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Pause",
            "Act",
            "Val0",
            "Val1"
        ]
    },
    "Blink3": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Blink3(        LED,Cx,InCh,Pause,Act,Val0,Val1,Off)",
        "Find Name for detection of actual macro": "Blink3(",
        "Name": "Blink3",
        "Kurzbeschreibung": "Blinker mit einstellbaren Zeiten und Helligkeitswerten. Zusätzlich kann die Helligkeit im deaktivierten Zustand bestimmt werden.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Blink3({LED},{Cx},{InCh},{Pause},{Act},{Val0},{Val1},{Off})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Pause",
            "Act",
            "Val0",
            "Val1",
            "Off"
        ]
    },
    "Blinker": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Blinker(       LED,Cx,InCh,Period)",
        "Find Name for detection of actual macro": "Blinker(",
        "Name": "Blinker",
        "Kurzbeschreibung": "Blinker mit einstellbarer Periode.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Blinker({LED},{Cx},{InCh},{Period})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Period"
        ]
    },
    "BlinkerHD": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "BlinkerHD(     LED,Cx,InCh,Period)",
        "Find Name for detection of actual macro": "BlinkerHD(",
        "Name": "BlinkerHD",
        "Kurzbeschreibung": "Blinker mit einstellbarer Periode bei dem der Ausgang abwechselnd Hell und Dunkel aber nicht ganz aus geht.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "BlinkerHD({LED},{Cx},{InCh},{Period})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Period"
        ]
    },
    "BlinkerInvInp": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "BlinkerInvInp( LED,Cx,InCh,Period)",
        "Find Name for detection of actual macro": "BlinkerInvInp(",
        "Name": "BlinkerInvInp",
        "Kurzbeschreibung": "Blinker mit inversem Ausgang und einstellbarer Periode.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "BlinkerInvInp({LED},{Cx},{InCh},{Period})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Period"
        ]
    },
    "BlueLight1": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "BlueLight1(    LED,Cx,InCh)",
        "Find Name for detection of actual macro": "BlueLight1(",
        "Name": "BlueLight1",
        "Kurzbeschreibung": "Diese Funktion generiert das typische doppelte Blitzen eines Blaulichts bei Einsatzfahrzeugen.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "BlueLight1({LED},{Cx},{InCh})",
        "Params": [
            "LED",
            "InCh",
            "Cx"
        ]
    },
    "BlueLight2": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "BlueLight2(    LED,Cx,InCh)",
        "Find Name for detection of actual macro": "BlueLight2(",
        "Name": "BlueLight2",
        "Kurzbeschreibung": "Diese Funktion generiert das typische doppelte Blitzen eines Blaulichts mit geringfügig anderer Frequenz als BlueLight1.",
        "Ausführliche Beschreibung": "Diese Funktion generiert das typische doppelte Blitzen eines Blaulichts bei Einsatzfahrzeugen mit einer geringfügig anderen Frequenz als BlueLight1. Dadurch verschieben sich die Blitzlichter zueinander.",
        "MacroStr": "BlueLight2({LED},{Cx},{InCh})",
        "Params": [
            "LED",
            "InCh",
            "Cx"
        ]
    },
    "Button": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Button(        LED,Cx,InCh,Duration,Val0, Val1)",
        "Find Name for detection of actual macro": "Button(",
        "Name": "Button",
        "Kurzbeschreibung": "Dieses Makro speichert ein Ereignis (z.B. Tastendruck) für eine bestimmte Zeit mit Abbruchmöglichkeit.",
        "Ausführliche Beschreibung": "Dieses Makro speichert ein Ereignis (z.B. Tastendruck) für eine bestimmte Zeit. Damit kann Beispielsweise der Rauchgenerator in einem 'Brennenden' Haus aktiviert werden. Der Ausgang kann vor dem Ablauf der Zeit deaktiviert werden, wenn die Taste ein zweites Mal gedrückt wird.",
        "MacroStr": "Button({LED},{Cx},{InCh},{Duration},{Val0},{Val1})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Duration",
            "Val0",
            "Val1"
        ]
    },
    "ButtonFunc": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "ButtonFunc(                DstVar, InCh, Duration)",
        "Find Name for detection of actual macro": "ButtonFunc(",
        "Name": "ButtonFunc",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "ButtonFunc({DstVar},{InCh},{Duration})",
        "Params": [
            "DstVar",
            "InCh",
            "Duration"
        ]
    },
    "ButtonNOff": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "ButtonNOff(    LED,Cx,InCh,Duration,Val0, Val1)",
        "Find Name for detection of actual macro": "ButtonNOff(",
        "Name": "ButtonNOff",
        "Kurzbeschreibung": "Dieses Makro speichert ein Ereignis (z.B. Tastendruck) für eine bestimmte Zeit ohne Abbruchmöglichkeit.",
        "Ausführliche Beschreibung": "Dieses Makro speichert ein Ereignis (z.B. Tastendruck) für eine bestimmte Zeit. Damit kann Beispielsweise der Rauchgenerator in einem 'Brennenden' Haus aktiviert werden. Der Ausgang kann NICHT vor dem Ablauf der Zeit deaktiviert werden.",
        "MacroStr": "ButtonNOff({LED},{Cx},{InCh},{Duration},{Val0},{Val1})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Duration",
            "Val0",
            "Val1"
        ]
    },
    "CAN-switch": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "CAN_switch",
        "Name": "DCC_switch",
        "Kurzbeschreibung": "CAN_switch ",
        "Ausführliche Beschreibung": "CAN_switch",
        "ProgmemStr": "{{ {S_Address}  + {S_Type}, 1 }},",
        "DefineStr": "#define {VariableName}      {VariableNumber}",
        "SwitchTypeStr": "#define USE_CAN_AS_INPUT",
        "SetStartValueStr": "  MobaLedLib.Set_Input({VariableNumber}, {S_Start});",
        "VariableNameStr": "INCH_CAN_{S_Address}_{S_Type}",
        "Params": [
            "S_Description",
            "S_Address",
            "S_Type"
        ]
    },
    "Charlie_Binary": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "C2-3",
        "InCnt": "BinStates",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "2",
        "Macro": "Charlie_Binary(LED, InCh, BinStates)",
        "Find Name for detection of actual macro": "Charlie_Binary(",
        "Name": "Charlie_Binary",
        "Kurzbeschreibung": "Steuert die Zustände eines Charlieplexing Moduls binär an.",
        "Ausführliche Beschreibung": "Mit dem Charlieplexing Modul können bis zu 12 LEDs über 4 Kabel angesteuert werden. Das wird z.B. bei Signalen oder Ampeln verwendet damit die Kabel in den Mast passen. Die binäre ansteuerung wird bei vielen Zentralen benutzt. Dabei werden weniger Kanäle belegt als bei der Ansteuerung per Taster.",
        "MacroStr": "Charlie_Binary({LED},{InCh},{BinStates})",
        "Params": [
            "LED",
            "InCh",
            "BinStates"
        ]
    },
    "Charlie_Buttons": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "C2-3",
        "InCnt": "States",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "2",
        "Macro": "Charlie_Buttons(LED, InCh, States)",
        "Find Name for detection of actual macro": "Charlie_Buttons(",
        "Name": "Charlie_Buttons",
        "Kurzbeschreibung": "Steuert die Zustände eines Charlieplexing Moduls per Taster an.",
        "Ausführliche Beschreibung": "Mit dem Charlieplexing Modul können bis zu 12 LEDs über 4 Kabel angesteuert werden. Das wird z.B. bei Signalen oder Ampeln verwendet damit die Kabel in den Mast passen. Die Ansteuerung per Taster eignet sich z.B. für die MS2. Es können bis zu 11 Taster benutzt werden.",
        "MacroStr": "Charlie_Buttons({LED},{InCh},{States})",
        "Params": [
            "LED",
            "InCh",
            "States"
        ]
    },
    "ColorCheckPage": {
        "Typ": "ColorCheckPage",
        "Name": "ColorCheckPage",
        "MTabName": "Farb Test",
        "Title": "Farben Test",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Farbtestseite",
        "Ausführliche Beschreibung": "Die Farben Testseite ermöglicht das Austesten der verschiedenen Farbkombinationen und das Erstellen einer farbtabelle für den <SetColTab>-Macro. Die Farben können über verschiedene Weg definiert werden: Einen Farbkreis, durch direkte Eingabe der Rot-Grün-Blau-Werte, des Farbtons, Helligkeit und Sättigung oder der Farbtemperatur.",
        "Params": [
            "ColorCheckButton_ok"
        ]
    },
    "ConfigurationPage": {
        "Typ": "ConfigurationPage",
        "Name": "ConfigurationPage",
        "MTabName": "Einstellungen",
        "Title": "Einstellungen",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "n",
        "Button_3": "",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "pyProgramGenerator Einstellungen\n\r\n\rHier können Sie die Grundeinstellungen für das Programm an Ihre Wünsche anpassen.",
        "Params": [
            "Farbauswahl",
            "ShowProgramGenerator",
            "Startseite",
            "LEDchannel",
            "MaxLEDcnt",
            "LEDColourCorrection",
            "RMbusTimer",
            "UseZ21Data",
            "Z21Data",
            "FontConfig"
        ]
    },
    "Const": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "ButtonText": [
            "Ein1",
            "Aus1"
        ],
        "ButtonColor": [
            "green",
            "red"
        ],
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Const(LED, Cx, InCh, Val0, Val1)",
        "Find Name for detection of actual macro": "Const(",
        "Name": "Const",
        "Kurzbeschreibung": "LED welche, gesteuert von 'InCh', dauerhaft An oder Aus ist.",
        "Ausführliche Beschreibung": "LED welche, gesteuert von 'InCh', dauerhaft An oder Aus ist.\nMit der Funktion können einzelne RGB-LEDs oder bis zu drei einzel LEDs geschaltet werden.\nDie Helligkeit im Zustand \"Aus\" und \"An\" kann separat eingestellt werden. ",
        "MacroStr": "Const({LED},{Cx},{InCh},{Val0},{Val1})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "Val0",
            "Val1"
        ]
    },
    "ConstrWarnLight": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "LEDcntCWL",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "n",
        "Macro": "ConstrWarnLight(LED,InCh, LEDcnt, MinBrightness, MaxBrightness, OnT, WaitT, WaitE)",
        "Find Name for detection of actual macro": "ConstrWarnLight(",
        "Name": "ConstrWarnLight",
        "Kurzbeschreibung": "Baustellenlicht mit 3 bis 15 einzelnen LEDs (WS2811)",
        "Ausführliche Beschreibung": "Baustellenlicht bei dem die Geschwindigkeit, die Pause zwischen zwei Lichtern, die Helligkeiten im Aus- und Angeschalteten Zustand und eine Pausendauer am Ende angegeben werden kann. Die LEDs werden mit WS2811 Modulen einzeln angesteuert.",
        "MacroStr": "ConstrWarnLight{LEDcntCWL}({LED},{InCh},{MinBrightness},{MaxBrightness},{OnT},{WaitE})",
        "Params": [
            "LED",
            "InCh",
            "LEDcntCWL",
            "MinBrightness",
            "MaxBrightness",
            "OnT",
            "WaitE"
        ]
    },
    "ConstrWarnLightRGB6": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "6",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "ConstrWarnLightRGB6(LED,InCh, MinBrightness, MaxBrightness, OnT, WaitT, WaitE)",
        "Find Name for detection of actual macro": "ConstrWarnLightRGB6(",
        "Name": "ConstrWarnLightRGB6",
        "Kurzbeschreibung": "Baustellenlicht mit 6 einzelnen LEDs (WS2811)",
        "Ausführliche Beschreibung": "Baustellenlicht bei dem die Geschwindigkeit, die Pause zwischen zwei Lichtern, die Helligkeiten im Aus- und Angeschalteten Zustand und eine Pasendauer am Ende angegeben werden kann. Die LEDs werden mit WS2811 Modulen einzeln angesteuert.",
        "MacroStr": "ConstrWarnLightRGB6({LED},{InCh},{MinBrightness},{MaxBrightness},{OnT},{WaitT},{WaitE})",
        "Params": [
            "LED",
            "InCh",
            "MinBrightness",
            "MaxBrightness",
            "OnT",
            "WaitT",
            "WaitE"
        ]
    },
    "CopyLED": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "CopyLED(       LED, InCh, SrcLED)",
        "Find Name for detection of actual macro": "CopyLED(",
        "Name": "CopyLED",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "CopyLED({LED},{InCh},{SrcLED})",
        "Params": [
            "LED",
            "InCh",
            "SrcLED"
        ]
    },
    "Counter": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "n",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Counter(       CtrMode, InCh, Enable, TimeOut, ...)",
        "Find Name for detection of actual macro": "Counter(",
        "Name": "Counter",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Counter({CtrMode},{InCh},{Enable},{TimeOut},{...})",
        "Params": [
            "CtrMode",
            "InCh",
            "Enable",
            "TimeOut",
            "..."
        ]
    },
    "DCC-switch": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "DCC-switch",
        "Name": "DCC-switch",
        "Kurzbeschreibung": "DCC-switch ",
        "Ausführliche Beschreibung": "DCC-switch xxxx",
        "MacroStr": "",
        "ProgmemStr": "{{ {S_Address}  + {S_Type}, 1 }},",
        "DefineStr": "#define {VariableName}      {VariableNumber}",
        "SwitchTypeStr": "#define USE_RS232_OR_SPI_AS_INPUT",
        "SetStartValueStr": "  MobaLedLib.Set_Input({VariableNumber}, {S_Start});",
        "VariableNameStr": "INCH_DCC_{S_Address}_{S_Type}",
        "Params": [
            "S_Description",
            "S_Address",
            "S_Type"
        ]
    },
    "DCCKeyboardPage": {
        "Typ": "DCCKeyboardPage",
        "Name": "DCCKeyboardPage",
        "MTabName": "DCC Keyboard",
        "Title": "DCC Keyboard",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "DCC Keyboard Simulator",
        "Ausführliche Beschreibung": "Der DCC Keyboard Simulator schickt an den ARDUINO direkt Kommandos, die den Kommandos entsprechen, die der DCC-ARDUINO an den LED-ARDUINO schicken würde. damt kann man die Funktion der DCC Schalter austesten.\nACHTUNG: Beim ersten Tastendruck kann es etwas dauern, da der ARDUINO den Modus umschalten muss und eventuell neu verbunden wird. Manchmal reagiert der ARDUINO auch erst auf den 2ten Tastendruck",
        "Params": [
            "DCC BaseAddress"
        ]
    },
    "Def_Neon_Misha": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "1",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Def_Neon_Misha(LED, InCh, LocInCh, Min_Delay, Max_Delay)",
        "Find Name for detection of actual macro": "Def_Neon_Misha(",
        "Name": "Def_Neon_Misha",
        "Kurzbeschreibung": "Simmulation eines defekten Neonlicht von Misha",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Def_Neon_Misha({LED},{InCh},{LocInCh},{Min_Delay},{Max_Delay})",
        "Params": [
            "LED",
            "InCh",
            "LocInCh",
            "Min_Delay",
            "Max_Delay"
        ]
    },
    "DepSignal4": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-6",
        "LEDChannels": "6",
        "InCnt": "4",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "6",
        "Macro": "DepSignal4(LED, InCh)      ",
        "Find Name for detection of actual macro": "DepSignal4(",
        "Name": "DepSignal4",
        "Kurzbeschreibung": "Ausfahrtssignal mit 6 einzelnem LEDs welche über zwei WS2811 Module angesteuert werden. (HP0, HP1, HP2, HP0+SH1). Es wird über vier Taster gesteuert.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "DepSignal4({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "DepSignal4Bin": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-6",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "6",
        "Macro": "DepSignal4Bin(LED, InCh)      ",
        "Find Name for detection of actual macro": "DepSignal4Bin(",
        "Name": "DepSignal4Bin",
        "Kurzbeschreibung": "Ausfahrtssignal mit 6 einzelnem LEDs welche über zwei WS2811 Module angesteuert werden. (HP0, HP1, HP2, HP0+SH1). Es wird über zwei binäre Eingänge gesteuert. Damit eignet es sich besonders für Selectrix.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "DepSignal4Bin({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "DepSignal4Bin_RGB": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "6",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "DepSignal4Bin_RGB(LED, InCh)  ",
        "Find Name for detection of actual macro": "DepSignal4Bin_RGB(",
        "Name": "DepSignal4Bin_RGB",
        "Kurzbeschreibung": "Ausfahrtssignal mit 6 RGB LEDs zu Testzwecken (HP0, HP1, HP2, HP0+SH1). Es wird über zwei binäre Eingänge gesteuert. Damit eignet es sich besonders für Selectrix.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "DepSignal4Bin_RGB({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "DepSignal4_RGB": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "6",
        "LEDChannels": "18",
        "InCnt": "4",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "DepSignal4_RGB(LED, InCh)  ",
        "Find Name for detection of actual macro": "DepSignal4_RGB(",
        "Name": "DepSignal4_RGB",
        "Kurzbeschreibung": "Ausfahrtssignal mit 6 RGB LEDs zu Testzwecken (HP0, HP1, HP2, HP0+SH1). Es wird über vier Taster gesteuert.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "DepSignal4_RGB({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "EffectMacroPage": {
        "Typ": "EffectMacroPage",
        "Name": "EffectMacroPage",
        "MTabName": "Programmvorschau",
        "Title": "MLL Programmvorschau",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "MLL Programmvorschau",
        "Ausführliche Beschreibung": "In der MLL Programmvorschau wird das erstellte Programm angezeigt. Diese Seite ist mehr für die Experten gedacht, um zu überprüfen, ob der richtige Code erzeugt wurde.",
        "Params": []
    },
    "EffectTestPage": {
        "Typ": "EffectTestPage",
        "Name": "EffectTestPage",
        "MTabName": "Programmgenerator",
        "Title": "MLL Programmgenerator",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "MLL Programmgenerator",
        "Ausführliche Beschreibung": "MLL Programmgenerator ....",
        "Params": []
    },
    "EntrySignal3": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-3",
        "InCnt": "3",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "3",
        "Macro": "EntrySignal3(LED, InCh)    ",
        "Find Name for detection of actual macro": "EntrySignal3(",
        "Name": "EntrySignal3",
        "Kurzbeschreibung": "Einfahrtssignal mit 3 einzelnem LEDs welche über ein WS2811 Modul angesteuert werden.  (HP0, HP1, HP2). Es wird über drei Taster gesteuert.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "EntrySignal3({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "EntrySignal3Bin": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-3",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "3",
        "Macro": "EntrySignal3Bin(LED, InCh)    ",
        "Find Name for detection of actual macro": "EntrySignal3Bin(",
        "Name": "EntrySignal3Bin",
        "Kurzbeschreibung": "Einfahrtssignal mit 3 einzelnem LEDs welche über ein WS2811 Modul angesteuert werden.  (HP0, HP1, HP2). Es wird über zwei binäre Eingänge gesteuert. Damit eignet es sich besonders für Selectrix.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "EntrySignal3Bin({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "EntrySignal3Bin_RGB": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "3",
        "LEDChannels": "9",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "EntrySignal3Bin_RGB(LED, InCh)",
        "Find Name for detection of actual macro": "EntrySignal3Bin_RGB(",
        "Name": "EntrySignal3Bin_RGB",
        "Kurzbeschreibung": "Einfahrtssignal mit 3 RGB LEDs zu Testzwecken (HP0, HP1, HP2). Es wird über zwei binäre Eingänge gesteuert. Damit eignet es sich besonders für Selectrix.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "EntrySignal3Bin_RGB({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "EntrySignal3_RGB": {
        "Typ": "",
        "TabName": "Signal Macros",
        "Mode": "",
        "LEDs or LED Channel": "3",
        "InCnt": "3",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "EntrySignal3_RGB(LED, InCh)",
        "Find Name for detection of actual macro": "EntrySignal3_RGB(",
        "Name": "EntrySignal3_RGB",
        "Kurzbeschreibung": "Einfahrtssignal mit 3 RGB LEDs zu Testzwecken (HP0, HP1, HP2). Es wird über drei Taster gesteuert.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "EntrySignal3_RGB({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Fire": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "LedCntRGB",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Fire(          LED,InCh, LedCnt, Brightness)",
        "Find Name for detection of actual macro": "Fire(",
        "Name": "Fire",
        "Kurzbeschreibung": "Mit der 'Fire()' Funktion können größere Feuer simuliert werden.",
        "Ausführliche Beschreibung": "Mit der 'Fire()' Funktion können größere Feuer simuliert werden. Dazu werden mehrere RGB LEDs verwendet welche an unterschiedlichen Stellen des 'Feuers' leuchten. ",
        "MacroStr": "Fire({LED},{InCh},{LedCntRGB},{Brightness})",
        "Params": [
            "LED",
            "InCh",
            "LedCntRGB",
            "Brightness"
        ]
    },
    "Flash": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "1",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Flash(         LED, Cx, InCh, LocInCh, MinTime, MaxTime)",
        "Find Name for detection of actual macro": "Flash(",
        "Name": "Flash",
        "Kurzbeschreibung": "Die 'Flash()' Funktion erzeugt ein zufälliges Blitzen eines Fotografen.",
        "Ausführliche Beschreibung": "Die 'Flash()' Funktion erzeugt ein zufälliges Blitzen eines Fotografen. Über die Parameter 'MinTime' und 'MaxTime' wird bestimmt wie häufig der Blitz ausgelöst wird. Der Erste Parameter bestimmt wie lange mindestens bis zum nächsten Blitz gewartet werden. Entsprechend beschreibt 'MaxTime' die Maximale Zeit. Zwischen diesen beiden Zeiten bestimmt die Bibliothek einen zufälligen Zeitpunkt.\nDas Makro besteht aus zwei anderen Makros. Dem 'Const()' und dem 'Random()' Makro. Dabei wird die 'Const()' Funktion von der 'Random()' Funktion gesteuert. Dazu wird eine Zwischenvariable benötigt deren Nummer als Parameter 'Var' eingetragen wird. Achtung diese Zwischenvariable darf nirgend wo anders benutzt werden.",
        "MacroStr": "Flash({LED},{Cx},{InCh},{LocInCh},{MinTime},{MaxTime})",
        "Params": [
            "LED",
            "InCh",
            "Cx",
            "LocInCh",
            "MinTime",
            "MaxTime"
        ]
    },
    "GasLights": {
        "Typ": "House",
        "Effects": [
            "NEON_LIGHT",
            "NEON_LIGHT1",
            "NEON_LIGHT2",
            "NEON_LIGHT3",
            "NEON_LIGHTD",
            "NEON_LIGHT1D",
            "NEON_LIGHT2D",
            "NEON_LIGHT3D",
            "NEON_LIGHTM",
            "NEON_LIGHT1M",
            "NEON_LIGHT2M",
            "NEON_LIGHT3M",
            "NEON_LIGHTL",
            "NEON_LIGHT1L",
            "NEON_LIGHT2L",
            "NEON_LIGHT3L",
            "NEON_DEF_D",
            "NEON_DEF1D",
            "NEON_DEF2D",
            "NEON_DEF3D",
            "GAS_LIGHT",
            "GAS_LIGHT1",
            "GAS_LIGHT2",
            "GAS_LIGHT3",
            "GAS_LIGHTD",
            "GAS_LIGHT1D",
            "GAS_LIGHT2D",
            "GAS_LIGHT3D"
        ],
        "TabName": "GasLights",
        "Group": "True",
        "Mode": "",
        "LEDs or LED Channel": "n",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Allow_SetMacro" : "True",
        "Macro": "GasLights(     LED,InCh, ...)",
        "Find Name for detection of actual macro": "GasLights(",
        "Name": "GasLights",
        "Kurzbeschreibung": "Diesen Button anklicken, um die GasLights Parameter zu speichern",
        "Ausführliche Beschreibung": "Die Laternen gehen nicht gleichzeitig sondern zufällig nacheinander an und werden dann langsam heller bis sie die volle Helligkeit erreichen. Außerdem ist ein zufälliges Flackern implementiert.\nAngesteuert werden die Lampen von WS2811 Chips. Bei Glühbirnen wird sind alle drei Ausgänge parallelgeschaltet, bei LED Lampen steuert ein IC drei Lampen. In der Konfiguration muss die Reihenfolge ..1., ..2., ..3. verwendet werden. Das sorgt dafür, dass das Programm nacheinander die Ausgänge eines WS2811 Chips benutzt und nicht zum nächsten Kanal wechselt. Das angehängte 'D' an den Lampenbezeichnungen bedeutet 'Dunkel'. Diese Lampen leuchten dunkler als die Anderen.",
        "MacroStr": "GasLights{S_Invert}({LED},{InCh},{EffectStr})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Group": {
        "Typ": "Group",
        "Name": "Group",
        "Kurzbeschreibung": "Gruppenparameter",
        "Ausführliche Beschreibung": "Parameter einer Gruppe",
        "Params": [
            "Group_Colour",
            "Group_Name",
            "Group_Distributor",
            "Group_Connector",
            "Group_Comment"
        ]
    },
    "HelpPage": {
        "Typ": "HelpPage",
        "Name": "HelpPage",
        "MTabName": "",
        "Title": "Hilfe Seite",
        "Kurzbeschreibung": "Hilfe Seite",
        "Ausführliche Beschreibung": "Hilfe Seite",
        "HelpPageURL": "https://wiki.mobaledlib.de/anleitungen/spezial/testseite"
    },
    "House": {
        "Typ": "House",
        "TabName": "House",
        "Group": "True",
        "Mode": "",
        "LEDs or LED Channel": "n",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Allow_SetMacro" : "True",
        "Macro": "House(         LED,InCh, On_Min,On_Limit, ...)",
        "Find Name for detection of actual macro": "House",
        "Name": "House",
        "Kurzbeschreibung": "Diesen Button anklicken, um die House Parameter zu speichern",
        "Ausführliche Beschreibung": "Mit dieser Funktion wird ein 'belebtes' Haus nachgebildet. In diesem Haus sind zufällig nur einige der Räume beleuchtet. Die Farbe und die Helligkeit der Beleuchtungen können individuell vorgegeben werden. Es lassen sich auch bestimmte Effekte wie Fernseher flackern oder ein offener Kamin für einzelne Räume konfigurieren. Außerdem kann das Einschaltverhalten angepasst werden (Neonröhrenflackern oder langsam heller werdende Gaslampen).",
        "Effects": [
            "ROOM_DARK",
            "ROOM_BRIGHT",
            "ROOM_WARM_W",
            "ROOM_RED",
            "ROOM_D_RED",
            "ROOM_COL0",
            "ROOM_COL1",
            "ROOM_COL2",
            "ROOM_COL3",
            "ROOM_COL4",
            "ROOM_COL5",
            "ROOM_COL345",
            "FIRE",
            "FIRED",
            "FIREB",
            "ROOM_CHIMNEY",
            "ROOM_CHIMNEYD",
            "ROOM_CHIMNEYB",
            "ROOM_TV0",
            "ROOM_TV0_CHIMNEY",
            "ROOM_TV0_CHIMNEYD",
            "ROOM_TV0_CHIMNEYB",
            "ROOM_TV1",
            "ROOM_TV1_CHIMNEY",
            "ROOM_TV1_CHIMNEYD",
            "ROOM_TV1_CHIMNEYB",
            "NEON_LIGHT",
            "NEON_LIGHT1",
            "NEON_LIGHT2",
            "NEON_LIGHT3",
            "NEON_LIGHTD",
            "NEON_LIGHT1D",
            "NEON_LIGHT2D",
            "NEON_LIGHT3D",
            "NEON_LIGHTM",
            "NEON_LIGHT1M",
            "NEON_LIGHT2M",
            "NEON_LIGHT3M",
            "NEON_LIGHTL",
            "NEON_LIGHT1L",
            "NEON_LIGHT2L",
            "NEON_LIGHT3L",
            "NEON_DEF_D",
            "NEON_DEF1D",
            "NEON_DEF2D",
            "NEON_DEF3D",
            "SINGLE_LED1",
            "SINGLE_LED2",
            "SINGLE_LED3",
            "SINGLE_LED1D",
            "SINGLE_LED2D",
            "SINGLE_LED3D",
            "GAS_LIGHT",
            "GAS_LIGHT1",
            "GAS_LIGHT2",
            "GAS_LIGHT3",
            "GAS_LIGHTD",
            "GAS_LIGHT1D",
            "GAS_LIGHT2D",
            "GAS_LIGHT3D"
        ],
        "MacroStr": "HouseT{S_Invert}({LED},{InCh},{On_Min},{On_Max},{T_Min}, {T_Max}, {EffectStr})",
        "Params": [
            "LED",
            "InCh",
            "On_Min",
            "On_Max",
            "T_Min",
            "T_Max"
        ]
    },
    "ImportMacro": {
        "Typ": "ImportMacro",
        "TabName": "Import",
        "Mode": "",
        "LEDs or LED Channel": "ImportLEDcnt",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": " ",
        "Find Name for detection of actual macro": "PatternConfig",
        "Name": "PatternConfig",
        "Kurzbeschreibung": "Patternkonfigurator Makro",
        "Ausführliche Beschreibung": "Mit dieser Funktion kann man ein Macro aus dem ProgKonfigurator übernehmen\nDer Makor wird aus der Excel Spalte kopiert. \nBeispiel: PatternT1(#LED,128,#InCh,2,0,128,0,PM_NORMAL,1 Sek,9)\nACHTUNG: Noch in der Testphase",
        "MacroStr": "{ImportString}",
        "Replace_in_MacroStr": {
            "#LED": "{LED}",
            "#InCh": "{InCh}"
        },
        "Params": [
            "LED",
            "InCh",
            "ImportLEDcnt",
            "ImportString",
            "TemplateString"
        ]
    },
    "InCh_to_TmpVar": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "InCh_to_TmpVar(InCh, InCh_Cnt)",
        "Find Name for detection of actual macro": "InCh_to_TmpVar(",
        "Name": "InCh_to_TmpVar",
        "Kurzbeschreibung": "Mit diesem Befehl wird eine temporäre 8 Bit Variable mit den Werten aus mehreren Logischen Variablen gefüllt. ",
        "Ausführliche Beschreibung": "Mit diesem Befehl wird eine temporäre 8 Bit Variable mit den Werten aus mehreren logischen Variablen gefüllt. Die Variable wird auf 0 gesetzt, wenn die erste logische Variable aktiv ist. Sie wird auf 1 gesetzt, wenn die zweite logische Variable aktiviert wurde...\nDas wird z.B. zum steuern eines Signals über mehrere DCC Adressen benötigt.\nIm Gegensatz zur 'New_Local_Var()' Funktion und zur 'Use_GlobalVar()' Funktion wird hier kein zusätzlicher Speicher benötigt. Das ist möglich, weil derselbe Speicher mehrfach benutzt werden kann. In den beiden anderen Fällen muss gespeichert werden ob sich der Eingang verändert denn nur dann soll eine Aktion ausgelöst. Bei dieser Funktion wird die Änderung der Eingangsvariablen benutzt.",
        "MacroStr": "InCh_to_TmpVar({InCh},{InCh_Cnt})",
        "Params": [
            "InCh",
            "InCh_Cnt"
        ]
    },
    "Leuchtfeuer": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Leuchtfeuer(   LED,Cx,InCh)",
        "Find Name for detection of actual macro": "Leuchtfeuer(",
        "Name": "Leuchtfeuer",
        "Kurzbeschreibung": "Dieses Makro generiert das Blinkmuster eines Windrads. ",
        "Ausführliche Beschreibung": "Dieses Makro generiert das Blinkmuster eines Windrads. Das Licht ist eine Sekunde lang an, dann eine halbe Sekunde aus und anschließend wieder eine Sekunde lang an. Darauf folgt eine Pause von 1.5 Sekunden. ",
        "MacroStr": "Leuchtfeuer({LED},{Cx},{InCh})",
        "Params": [
            "LED",
            "InCh",
            "Cx"
        ]
    },
    "Logic": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Logic(         DstVar, ...)",
        "Find Name for detection of actual macro": "Logic(",
        "Name": "Logic",
        "Kurzbeschreibung": "Logische Verknüpfungen mehrerer Eingangsvariablen zu einer Ausgangsvariable",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Logic({DstVar},{...})",
        "Params": [
            "DstVar",
            "..."
        ]
    },
    "MacroStartPageData": {
        "Typ": "MacroStartPageData",
        "Name": "MacroStartPageData",
        "TabName": " Start",
        "Title": "Macro und Effekte Einführung",
        "Kurzbeschreibung": "",
        "Content": {
            "Die Programmgenerator Seite": "Auf dieser Seite können alle Daten für die Konfiguration der MobaLEDLib eingegeben werden.\n Das Fenster ist in 4 Teile geteilt\n* ARDUINO - zur Steuerung des ARDUINOs\n* LED Liste - zur Auswahl der zu bearbeitenden LED oder LED-Bereichs\n  (Erste LED anklicken und die letzten LED des Bereichs mit SHIFT-Click)\n* Gruppenparameter - zur Eingabe der Daten einer Gruppe z.B. eines Hauses\n* Macros und Effekte - zur Auswahl des gewünschten Effektes\n",
            "Auswahl eines Effektes": "Den gewünschten Macrotyp auswählen durch anklicken eines Reiters:\n* GasLights - für Strassenlampen (Neon, Gaslicht)\n* House - für Hausbeleuchtung\n* Light Macros - für Blinker, Schweisslicht, etc\n* Set Macros - für spezielle Macro Parameter, wie Farbtabelle, TV Eigenschaften etc\n* Sound Macros - für Tonwiedergabe mit dem Soundmodul\n",
            "Kurzbeschreibug der Vorgehensweise:": "1. Gruppenparameter einstellen - Farbe, Name der Gruppe, Verteiler, Anschluss etc\n2. Auf <Übernehmen> klicken\n3.In LED Liste den oder die LED auswählen\n4.Zum <House>-Tab wechseln\n5.Mit gedrückter SHIFT-Taste, den gewünschten Effekt auswählen (z.B. ROOM_DARK)\n6.die nächste LED wird automtiasch ausgewählt\n7.nächsten Effekt anklicken (SHIFT gedrückt halten)\n8.Bis alle Effekte definiert sind\n9. Schalterart auf <DCC-Adresse> ändern - Adresse auf <105> ändern\n10. Taster - <House Daten übernehmen> anklicken\n11.Die Änderungen werden übernommen\n12.<Zum ARDUINO schicken> anklicken. Das Programm wird erstellt und zum ARDUINO geschickt.\n13. Zum <DCC-Keyboard> wechseln.\n14. Grüne Taste mit Adresse 105 anklicken.\n16. Die Haus LEDs starten"
        },
        "Params": [
            "MacroStartPageText"
        ]
    },
    "MonoFlop": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlop(                  DstVar, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlop(",
        "Name": "MonoFlop",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "MonoFlop",
        "MacroStr": "MonoFlop({DstVar},{InCh},{Duration})",
        "Params": [
            "DstVar",
            "InCh",
            "Duration"
        ]
    },
    "MonoFlop2": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlop2(                 DstVar0, DstVar1, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlop2(",
        "Name": "MonoFlop2",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "MonoFlop2({DstVar0},{DstVar1},{InCh},{Duration})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "InCh",
            "Duration"
        ]
    },
    "MonoFlop2LongReset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlop2LongReset(        DstVar0, DstVar1, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlop2LongReset(",
        "Name": "MonoFlop2LongReset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "MonoFlop2LongReset({DstVar0},{DstVar1},{InCh},{Duration})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "InCh",
            "Duration"
        ]
    },
    "MonoFlopInv": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlopInv(               DstVar, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlopInv(",
        "Name": "MonoFlopInv",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "MonoFlopInv({DstVar},{InCh},{Duration})",
        "Params": [
            "DstVar",
            "InCh",
            "Duration"
        ]
    },
    "MonoFlopInvLongReset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlopInvLongReset(      DstVar, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlopInvLongReset(",
        "Name": "MonoFlopInvLongReset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "MonoFlopInvLongReset({DstVar},{InCh},{Duration})",
        "Params": [
            "DstVar",
            "InCh",
            "Duration"
        ]
    },
    "MonoFlopLongReset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "MonoFlopLongReset(         DstVar, InCh, Duration)",
        "Find Name for detection of actual macro": "MonoFlopLongReset(",
        "Name": "MonoFlopLongReset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "MonoFlopLongReset({DstVar},{InCh},{Duration})",
        "Params": [
            "DstVar",
            "InCh",
            "Duration"
        ]
    },
    "New_HSV_Group": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "New_HSV_Group()",
        "Find Name for detection of actual macro": "New_HSV_Group(",
        "Name": "New_HSV_Group",
        "Kurzbeschreibung": "Speicher reservieren für eine neuen HSV Gruppe.",
        "Ausführliche Beschreibung": "Effekte welche HSV Farben und nicht RGB Farben benutzen benötigen Speicherplatz für die HSV Werte. Da u.U. mehrere Zeilen benötigt werden zur Steuerung einer LED muss dieser Befehl vor jeder Gruppe zusammnengehöriger HSV Zeilen stehen.",
        "MacroStr": "New_HSV_Group({})",
        "Params": [
            ""
        ]
    },
    "New_Local_Var": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "New_Local_Var()",
        "Find Name for detection of actual macro": "New_Local_Var(",
        "Name": "New_Local_Var",
        "Kurzbeschreibung": "Erzeugt eine Variable in der 256 verschiedene Zustände gespeichert werden können.",
        "Ausführliche Beschreibung": "Mit dem Makro 'New_Local_Var()' wird eine Variable vom Typ 'ControlVar_t' angelegt. Sie kann Werte zwischen 0 und 255 annehmen und besitzt zusätzliche Flags mit denen Änderungen erkannt werden können. ",
        "MacroStr": "New_Local_Var({})",
        "Params": [
            ""
        ]
    },
    "Next LEDs": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "LedCnt_Nxt",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "// Next_LED(LedCnt_Nxt)",
        "Find Name for detection of actual macro": "// Next_LED(",
        "Name": "Next LEDs",
        "Kurzbeschreibung": "Manipulation der LED Nummer",
        "Ausführliche Beschreibung": "Damit kann die StartLedNr für den folgenden Befehl verändert werden. Es sind positive und negative Werte möglich. ",
        "MacroStr": "//Next_LED({LedCnt_Nxt})",
        "Params": [
            "LedCnt_Nxt"
        ]
    },
    "PushButton_w_LED_0_2": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "3",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "PushButton_w_LED_0_2(B_LED, B_LED_Cx, InCh, LocInCh, Rotate, Timeout)",
        "Find Name for detection of actual macro": "PushButton_w_LED_0_2(",
        "Name": "PushButton_w_LED_0_2",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "Nur ein Dialog für alle ?",
        "MacroStr": "PushButton_w_LED_0_2({B_LED},{B_LED_Cx},{InCh},{LocInCh},{Rotate},{Timeout})",
        "Params": [
            "B_LED",
            "B_LED_Cx",
            "InCh",
            "LocInCh",
            "Rotate",
            "Timeout"
        ]
    },
    "ProgGeneratorPage": {
        "Typ": "ProgGeneratorPage",
        "Name": "ProgGeneratorPage",
        "MTabName": "ProgGeneratorPage",
        "Title": "ProgGeneratorPage",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "DCC Keyboard Simulator",
        "Ausführliche Beschreibung": "Der DCC Keyboard Simulator schickt an den ARDUINO direkt Kommandos, die den Kommandos entsprechen, die der DCC-ARDUINO an den LED-ARDUINO schicken würde. damt kann man die Funktion der DCC Schalter austesten.\nACHTUNG: Beim ersten Tastendruck kann es etwas dauern, da der ARDUINO den Modus umschalten muss und eventuell neu verbunden wird. Manchmal reagiert der ARDUINO auch erst auf den 2ten Tastendruck",
        "Params": [
            "DCC BaseAddress"
        ]
    },
    
    "PushButton_w_LED_0_3": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "4",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "PushButton_w_LED_0_3(B_LED, B_LED_Cx, InCh, LocInCh, Rotate, Timeout)",
        "Find Name for detection of actual macro": "PushButton_w_LED_0_3(",
        "Name": "PushButton_w_LED_0_3",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "PushButton_w_LED_0_3({B_LED},{B_LED_Cx},{InCh},{LocInCh},{Rotate},{Timeout})",
        "Params": [
            "B_LED",
            "B_LED_Cx",
            "InCh",
            "LocInCh",
            "Rotate",
            "Timeout"
        ]
    },
    "PushButton_w_LED_0_4": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "5",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "PushButton_w_LED_0_4(B_LED, B_LED_Cx, InCh, LocInCh, Rotate, Timeout)",
        "Find Name for detection of actual macro": "PushButton_w_LED_0_4(",
        "Name": "PushButton_w_LED_0_4",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "PushButton_w_LED_0_4({B_LED},{B_LED_Cx},{InCh},{LocInCh},{Rotate},{Timeout})",
        "Params": [
            "B_LED",
            "B_LED_Cx",
            "InCh",
            "LocInCh",
            "Rotate",
            "Timeout"
        ]
    },
    "PushButton_w_LED_0_5": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "6",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "PushButton_w_LED_0_5(B_LED, B_LED_Cx, InCh, LocInCh, Rotate, Timeout)",
        "Find Name for detection of actual macro": "PushButton_w_LED_0_5(",
        "Name": "PushButton_w_LED_0_5",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "PushButton_w_LED_0_5({B_LED},{B_LED_Cx},{InCh},{LocInCh},{Rotate},{Timeout})",
        "Params": [
            "B_LED",
            "B_LED_Cx",
            "InCh",
            "LocInCh",
            "Rotate",
            "Timeout"
        ]
    },
    "RGB_AmpelX": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "6",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RGB_AmpelX(    LED,InCh)",
        "Find Name for detection of actual macro": "RGB_AmpelX(",
        "Name": "RGB_AmpelX",
        "Kurzbeschreibung": "Damit wird das Muster zweier Ampeln für eine Kreuzung mit 6 RGB LEDs erzeugt.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RGB_AmpelX({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "RGB_AmpelXFade": {
        "Typ": "",
        "Mode": "",
        "TabName": "Light Macros",
        "LEDs or LED Channel": "6",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RGB_AmpelXFade(LED,InCh)",
        "Find Name for detection of actual macro": "RGB_AmpelXFade(",
        "Name": "RGB_AmpelXFade",
        "Kurzbeschreibung": "Damit wird das Muster zweier Ampeln für eine Kreuzung mit 6 RGB LEDs erzeugt. Die Lichter werden langsam übergeblendet.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RGB_AmpelXFade({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "RGB_Heartbeat": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "1",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RGB_Heartbeat(LED)",
        "Find Name for detection of actual macro": "RGB_Heartbeat(",
        "Name": "RGB_Heartbeat",
        "Kurzbeschreibung": "RGB LED welche als Funktionsindikator in wechselnden Regenbogenfarben blinkt.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RGB_Heartbeat({LED})",
        "Params": [
            "LED"
        ]
    },
    "RGB_Heartbeat2": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "1",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RGB_Heartbeat2(LED, MinBrightness, MaxBrightness)",
        "Find Name for detection of actual macro": "RGB_Heartbeat2(",
        "Name": "RGB_Heartbeat2",
        "Kurzbeschreibung": "RGB LED welche als Funktionsindikator in wechselnden Regenbogenfarben blinkt. Minimale und maximale Helligkeit kann angegeben werden. ",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RGB_Heartbeat2({LED},{MinBrightness},{MaxBrightness})",
        "Params": [
            "LED",
            "MinBrightness",
            "MaxBrightness"
        ]
    },
    "RS_FlipFlop": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlop(               DstVar, S_InCh, R_InCh)",
        "Find Name for detection of actual macro": "RS_FlipFlop(",
        "Name": "RS_FlipFlop",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlop({DstVar},{S_InCh},{R_InCh})",
        "Params": [
            "DstVar",
            "S_InCh",
            "R_InCh"
        ]
    },
    "RS_FlipFlop2": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlop2(              DstVar0, DstVar1, S_InCh, R_InCh)",
        "Find Name for detection of actual macro": "RS_FlipFlop2(",
        "Name": "RS_FlipFlop2",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlop2({DstVar0},{DstVar1},{S_InCh},{R_InCh})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "S_InCh",
            "R_InCh"
        ]
    },
    "RS_FlipFlop2Timeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlop2Timeout(       DstVar0, DstVar1, S_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "RS_FlipFlop2Timeout(",
        "Name": "RS_FlipFlop2Timeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlop2Timeout({DstVar0},{DstVar1},{S_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "S_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "RS_FlipFlopInv": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlopInv(            DstVar, S_InCh, R_InCh)",
        "Find Name for detection of actual macro": "RS_FlipFlopInv(",
        "Name": "RS_FlipFlopInv",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlopInv({DstVar},{S_InCh},{R_InCh})",
        "Params": [
            "DstVar",
            "S_InCh",
            "R_InCh"
        ]
    },
    "RS_FlipFlopInvTimeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlopInvTimeout(     DstVar, S_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "RS_FlipFlopInvTimeout(",
        "Name": "RS_FlipFlopInvTimeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlopInvTimeout({DstVar},{S_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar",
            "S_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "RS_FlipFlopTimeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RS_FlipFlopTimeout(        DstVar, S_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "RS_FlipFlopTimeout(",
        "Name": "RS_FlipFlopTimeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RS_FlipFlopTimeout({DstVar},{S_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar",
            "S_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "RandCntMux": {
        "Typ": "",
        "xTabName": "Random Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RandCntMux(    DstVar1, DstVarN, InCh, Mode, MinTime, MaxTime)",
        "Find Name for detection of actual macro": "RandCntMux(",
        "Name": "RandCntMux",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RandCntMux({DstVar1},{DstVarN},{InCh},{Mode},{MinTime},{MaxTime})",
        "Params": [
            "DstVar1",
            "DstVarN",
            "InCh",
            "Mode",
            "MinTime",
            "MaxTime"
        ]
    },
    "RandMux": {
        "Typ": "",
        "xTabName": "Random Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "n",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RandMux(       DstVar1, DstVarN, InCh, RandMode, MinTime, MaxTime)",
        "Find Name for detection of actual macro": "RandMux(",
        "Name": "RandMux",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "RandMux({DstVar1},{DstVarN},{InCh},{RandMode},{MinTime},{MaxTime})",
        "Params": [
            "DstVar1",
            "DstVarN",
            "InCh",
            "RandMode",
            "MinTime",
            "MaxTime"
        ]
    },
    "RandWelding": {
        "Typ": "",
        "xTabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "1",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "RandWelding(   LED, InCh, LocInCh, MinTime, MaxTime, MinOn, MaxOn)",
        "Find Name for detection of actual macro": "RandWelding(",
        "Name": "RandWelding",
        "Kurzbeschreibung": "Mit der 'RandWelding()' Funktion kann ein zufällig aktives Schweißlicht simuliert werden.",
        "Ausführliche Beschreibung": "Mit dieser Funktion wird das Schweißlicht zufällig gesteuert. Die Zeiten 'MinTime' und 'MaxTime' bestimmen den Zufälligen Startzeitpunkt. Über 'MinOn' und 'MaxOn' wird angegeben wie lange eine die Arbeit an einem Werkstück dauert.",
        "MacroStr": "RandWelding({LED},{InCh},{LocInCh},{MinTime},{MaxTime},{MinOn},{MaxOn})",
        "Params": [
            "LED",
            "InCh",
            "LocInCh",
            "MinTime",
            "MaxTime",
            "MinOn",
            "MaxOn"
        ]
    },
    "Random": {
        "Typ": "",
        "xTabName": "Random Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Random(        DstVar, InCh, RandMode, MinTime, MaxTime, MinOn, MaxOn)",
        "Find Name for detection of actual macro": "Random(",
        "Name": "Random",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Random({DstVar},{InCh},{RandMode},{MinTime},{MaxTime},{MinOn},{MaxOn})",
        "Params": [
            "DstVar",
            "InCh",
            "RandMode",
            "MinTime",
            "MaxTime",
            "MinOn",
            "MaxOn"
        ]
    },
    "Reserve LEDs": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "LedCnt_Res",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "// Reserve LEDs(LedCnt_Res)",
        "Find Name for detection of actual macro": "// Reserve LEDs(",
        "Name": "Reserve LEDs",
        "Kurzbeschreibung": "Mit diesem Eintrag können LEDs reserviert werden.",
        "Ausführliche Beschreibung": "LEDs welche momentan noch keine Funktion haben, aber bereits in der LED Kette vorhanden sind können mit dieser Zeile übersprungen werden.",
        "MacroStr": "//ReserveLEDs({LedCnt_Res})",
        "Params": [
            "LedCnt_Res"
        ]
    },
    "SX-switch": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "SX_switch",
        "Name": "DCC_switch",
        "Kurzbeschreibung": "SX_switch ",
        "Ausführliche Beschreibung": "SX_switch",
        "ProgmemStr": "{{ {SX_Address}  + {S_Type}, 1 }},",
        "DefineStr": "#define {VariableName}      {VariableNumber}",
        "SwitchTypeStr": "#define USE_RS232_AS_INPUT",
        "SetStartValueStr": "  MobaLedLib.Set_Input({VariableNumber}, {S_Start});",
        "VariableNameStr": "INCH_SX_{SX_Address}_{S_Type}",
        "Params": [
            "S_Description",
            "S_Address",
            "S_Type"
        ]
    },
    "Schedule": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "n",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Schedule(      DstVar1, DstVarN, EnableCh, Start, End)",
        "Find Name for detection of actual macro": "Schedule(",
        "Name": "Schedule",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "Test des Schedule Macros. Noch nicht vollfunktionsfähig!!!!",
        "MacroStr": "Schedule({DstVar1},{DstVarN},{EnableCh},{Start},{End})",
        "Params": [
            "DstVar1",
            "DstVarN",
            "EnableCh",
            "Start",
            "End"
        ]
    },
    "SerialMonitorPage": {
        "Typ": "SerialMonitorPage",
        "Name": "SerialMonitorPage",
        "MTabName": "Serial Monitor",
        "Title": "Serial Monitor",
        "Button_1": "Senden",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Serial Monitor",
        "Ausführliche Beschreibung": "Der Serial Monitor protokolliert die Kommunikation des Programms mit dem ARDUINO. Dies ist mehr für die Fehlerbehebung gedacht und für Experten.",
        "Params": [
            "SerialMonitorInput"
        ]
    },
    "ServoTestPage": {
        "Typ": "ServoTestPage",
        "Name": "ServoTestPage",
        "MTabName": "Servo Test",
        "Title": "MobaLedLib LED Servotester",
        "Button_1": "",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Testen und Konfigurieren von Servos",
        "Ausführliche Beschreibung": "Mit der Servoplatine von Hardi können über die MLL auch Servos angesteuert werden. Auf dieser Seite können Sie den Servo testen und konfigurieren.\nMit dem Schieberegler kann die Position des Servos eingestellt werden. Die Konfiguration des Servos erfolgt mit den Funktionen  <Min und Max Position programmieren> und <Servo Geschwindigkeit programmieren>",
        "Params": [
            "ServoAddress",
            "ServoChannel"
        ]
    },
    "Set_ColTab": {
        "Typ": "ColTab",
        "TabName": "Set Macros",
        "Group": "True",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_ColTab(    r0,g0,b0,r1,g1,b1,r2,g2,b2,r3,g3,b3,r4,g4,b4,r5,g5,b5,r6,g6,b6,r7,g7,b7,r8,g8,b8,r9,g9,b9,r10,g10,b10,r11,g11,b11,r12,g12,b12,r13,g13,b13,r14,g14,b14,r15,g15,b15,r16,g16,b16)",
        "Find Name for detection of actual macro": "Set_ColTab(",
        "Name": "Set_ColTab",
        "Kurzbeschreibung": "Apssung der Farbpalette, die im House und GasLights Macro verwendet wird.",
        "Ausführliche Beschreibung": "Mit dem Makro 'Set_ColTab()' kann man die Farbpalette, die im House und GasLights Macro verwendet wird, individuell anpassen.\nDie aktuelle Farbpalette wird rechts angezeigt\nMit dem Klick auf <Farben ändern> gelangt man zur <Farb Test-Seite>. Auf dieser Seite kann die Wirkung der Farben direkt getestet werden und die gewünschte Farbe in der Farbpalette geändert werden.",
        "MacroStr": "Set_ColTab({r0},{g0},{b0},{r1},{g1},{b1},{r2},{g2},{b2},{r3},{g3},{b3},{r4},{g4},{b4},{r5},{g5},{b5},{r6},{g6},{b6},{r7},{g7},{b7},{r8},{g8},{b8},{r9},{g9},{b9},{r10},{g10},{b10},{r11},{g11},{b11},{r12},{g12},{b12},{r13},{g13},{b13},{r14},{g14},{b14},{r15},{g15},{b15},{r16},{g16},{b16})",
        "Params": [
            "r0",
            "g0",
            "b0",
            "r1",
            "g1",
            "b1",
            "r2",
            "g2",
            "b2",
            "r3",
            "g3",
            "b3",
            "r4",
            "g4",
            "b4",
            "r5",
            "g5",
            "b5",
            "r6",
            "g6",
            "b6",
            "r7",
            "g7",
            "b7",
            "r8",
            "g8",
            "b8",
            "r9",
            "g9",
            "b9",
            "r10",
            "g10",
            "b10",
            "r11",
            "g11",
            "b11",
            "r12",
            "g12",
            "b12",
            "r13",
            "g13",
            "b13",
            "r14",
            "g14",
            "b14",
            "r15",
            "g15",
            "b15",
            "r16",
            "g16",
            "b16"
        ]
    },
    "Set_Def_Neon": {
        "Typ": "",
        "TabName": "Set Macros",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_Def_Neon(  InCh, Rand_On, RandOff, Min_Def)",
        "Find Name for detection of actual macro": "Set_Def_Neon(",
        "Name": "Set_Def_Neon",
        "Kurzbeschreibung": "Definiert die Simulation der defekten Leuchtstoffröhre",
        "Ausführliche Beschreibung": "Eine defekte Leuchtstoffröhre kann ganz unterschiedliches Flackern zeigen. Mit diesem Makro kann das Flackern beeinfusst werden. Mit den Raumtypen \"NEON_DEF_D\", \"NEON_DEF1D\" - \"NEON_DEF3D\" wird die Lampe in einem Haus benutzt. Die Parameter können vor jeder \"House()\" Zeile verändert werden. Falls in einem Haus mehrere verschiedene defekte Lampen vorkommen sollen, dann muss das Haus geteilt werden.",
        "MacroStr": "Set_Def_Neon({InCh},{Rand_On},{RandOff},{Min_Def})",
        "Params": [
            "InCh",
            "Rand_On",
            "RandOff",
            "Min_Def"
        ]
    },
    "Set_TV_BW1": {
        "Typ": "",
        "TabName": "Set Macros",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_TV_BW1(    InCh, Update_t_Min, Update_t_Max, Min_Brightness, Max_Brightness, BW_R, BW_G, BW_B)",
        "Find Name for detection of actual macro": "Set_TV_BW1(",
        "Name": "Set_TV_BW1",
        "Kurzbeschreibung": "Definiert die Simulation des Schwarz-Weiß TV Kanals 1",
        "Ausführliche Beschreibung": "Definiert die Simulation des Schwarz-Weiß TV Kanals. Damit können die Häufigkeiten der Bildwechsel, die Helligkeitswechsel und Anteile der verwendeten Farben  eingestellt werden. Damit kann das typisch bläuliche Licht eines alten Fernsehers erzeugt werden. Es ist auch möglich, das die Einstellungen per DCC Kommandos ausgewählt werden. So kann auch zwischen Farb- und SW Sendungen gewechselt werden.",
        "MacroStr": "Set_TV_BW1({InCh},{Update_t_Min},{Update_t_Max},{Min_Brightness},{Max_Brightness},{BW_R},{BW_G},{BW_B})",
        "Params": [
            "InCh",
            "Update_t_Min",
            "Update_t_Max",
            "Min_Brightness",
            "Max_Brightness",
            "BW_R",
            "BW_G",
            "BW_B"
        ]
    },
    "Set_TV_BW2": {
        "Typ": "",
        "TabName": "Set Macros",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_TV_BW2(    InCh, Update_t_Min, Update_t_Max, Min_Brightness, Max_Brightness, BW_R, BW_G, BW_B)",
        "Find Name for detection of actual macro": "Set_TV_BW2(",
        "Name": "Set_TV_BW2",
        "Kurzbeschreibung": "Definiert die Simulation des Schwarz-Weiß TV Kanals 2",
        "Ausführliche Beschreibung": "Definiert die Simulation des Schwarz-Weiß TV Kanals. Damit können die Häufigkeiten der Bildwechsel, die Helligkeitswechsel und Anteile der verwendeten Farben  eingestellt werden. Damit kann das typisch bläuliche Licht eines alten Fernsehers erzeugt werden. Es ist auch möglich, das die Einstellungen per DCC Kommandos ausgewählt werden. So kann auch zwischen Farb- und SW Sendungen gewechselt werden.",
        "MacroStr": "Set_TV_BW2({InCh},{Update_t_Min},{Update_t_Max},{Min_Brightness},{Max_Brightness},{BW_R},{BW_G},{BW_B})",
        "Params": [
            "InCh",
            "Update_t_Min",
            "Update_t_Max",
            "Min_Brightness",
            "Max_Brightness",
            "BW_R",
            "BW_G",
            "BW_B"
        ]
    },
    "Set_TV_COL1": {
        "Typ": "",
        "TabName": "Set Macros",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_TV_COL1(   InCh, Update_t_Min, Update_t_Max, Min_Brightness, Max_Brightness, R_Min, R_Max, G_Min, G_Max, B_Min, B_Max)",
        "Find Name for detection of actual macro": "Set_TV_COL1(",
        "Name": "Set_TV_COL1",
        "Kurzbeschreibung": "Definiert die Simulation des Farb TV Kanals 1",
        "Ausführliche Beschreibung": "Definiert die Simulation des Farb TV Kanals. Damit können die Häufigkeiten der Bildwechsel, die Helligkeitswechsel und die Farbwechsel eingestellt werden. Damit können Action Filme, statische Inhalte, Fußball Übertragungen, … simuliert werden. Es ist auch möglich, das die Einstellungen per DCC Kommandos ausgewählt werden.",
        "MacroStr": "Set_TV_COL1({InCh},{Update_t_Min},{Update_t_Max},{Min_Brightness},{Max_Brightness},{R_Min},{R_Max},{G_Min},{G_Max},{B_Min},{B_Max})",
        "Params": [
            "InCh",
            "Update_t_Min",
            "Update_t_Max",
            "Min_Brightness",
            "Max_Brightness",
            "R_Min",
            "R_Max",
            "G_Min",
            "G_Max",
            "B_Min",
            "B_Max"
        ]
    },
    "Set_TV_COL2": {
        "Typ": "",
        "TabName": "Set Macros",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Set_TV_COL2(   InCh, Update_t_Min, Update_t_Max, Min_Brightness, Max_Brightness, R_Min, R_Max, G_Min, G_Max, B_Min, B_Max)",
        "Find Name for detection of actual macro": "Set_TV_COL2(",
        "Name": "Set_TV_COL2",
        "Kurzbeschreibung": "Definiert die Simulation des Farb TV Kanals 2",
        "Ausführliche Beschreibung": "Definiert die Simulation des Farb TV Kanals. Damit können die Häufigkeiten der Bildwechsel, die Helligkeitswechsel und die Farbwechsel eingestellt werden. Damit können Action Filme, statische Inhalte, Fußball Übertragungen, … simuliert werden. Es ist auch möglich, das die Einstellungen per DCC Kommandos ausgewählt werden.",
        "MacroStr": "Set_TV_COL2({InCh},{Update_t_Min},{Update_t_Max},{Min_Brightness},{Max_Brightness},{R_Min},{R_Max},{G_Min},{G_Max},{B_Min},{B_Max})",
        "Params": [
            "InCh",
            "Update_t_Min",
            "Update_t_Max",
            "Min_Brightness",
            "Max_Brightness",
            "R_Min",
            "R_Max",
            "G_Min",
            "G_Max",
            "B_Min",
            "B_Max"
        ]
    },
    "SoundCheckPage": {
        "Typ": "SoundCheckPage",
        "Name": "SoundCheckPage",
        "MTabName": "Sound Test",
        "Title": "Sound Test",
        "Button_1": "Sound an ARDUINO\nschicken",
        "Button_2": "",
        "Button_3": "",
        "Kurzbeschreibung": "Testen des MLL-Sound Gerätes",
        "Ausführliche Beschreibung": "Auf dieser Seite können Sie die MLL-Sound Geräte testen. Die MLL-Soundplatine mit dem <MP3-TF-16> Modul ermöglicht die Erzeugung von verschiedenen selbst erzeugten Geräuschen. Leider kommt es immer wider vor, dass die wiedergegebenen Sounds nicht richtig stimmen. Es kommt nicht immer die gewünschte Sound Datei. Das liegt an bauteiltoleranzen. Auf der Sound test Seite können die Werte für die verschiedenen Geräusche ausprobiert werden. Einfach die Soundmoduladresse angeben und in den Felder R/G/B die verschiedenen Werte durchprobieren, bis der richtige Sound kommt.",
        "Params": [
            "SoundAddress",
            "SoundImpulsLength",
            "Sound_LED"
        ]
    },
    "Sound_ADKey": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "E",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_ADKey(    LED, InCh, ADKey1, ADKey2)",
        "Find Name for detection of actual macro": "Sound_ADKey(",
        "Name": "Sound_ADKey",
        "Kurzbeschreibung": "Manuelles Abrufen einer Sound Funktion anhand individueller Helligkeitswerte.",
        "Ausführliche Beschreibung": "Manuelles Abrufen einer Sound Funktion anhand individueller Helligkeitswerte. Bei manchen Sound Modulen sind aufgrund von Toleranzen individuelle Werte zur Ansteuerung der Funktionen nötig. Die Werte können mit dem Farbtest Programm ermittelt werden.",
        "MacroStr": "Sound_ADKey({LED},{InCh},{ADKey1},{ADKey2})",
        "Params": [
            "LED",
            "InCh",
            "ADKey1",
            "ADKey2"
        ]
    },
    "Sound_DecVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_DecVol(    LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_DecVol(",
        "Name": "Sound_DecVol",
        "Kurzbeschreibung": "Lautstärke reduzieren",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_DecVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_IncVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_IncVol(    LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_IncVol(",
        "Name": "Sound_IncVol",
        "Kurzbeschreibung": "Lautstärke erhöhen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_IncVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_JQ6500_ADKey": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "E",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_ADKey(     LED, InCh, ADKey)",
        "Find Name for detection of actual macro": "Sound_JQ6500_ADKey(",
        "Name": "Sound_JQ6500_ADKey",
        "Kurzbeschreibung": "Manuelles Abrufen einer Sound Funktion für das JQ6500 Modul anhand individueller Helligkeitswerte.",
        "Ausführliche Beschreibung": "Manuelles Abrufen einer Sound Funktion für das JQ6500 Modul anhand individueller Helligkeitswerte. Bei manchen Sound Modulen sind aufgrund von Toleranzen individuelle Werte zur Ansteuerung der Funktionen nötig.  Die Werte können mit dem Farbtest Programm ermittelt werden.",
        "MacroStr": "Sound_JQ6500_ADKey({LED},{InCh},{ADKey})",
        "Params": [
            "LED",
            "InCh",
            "ADKey"
        ]
    },
    "Sound_JQ6500_BG_DecVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_DecVol(LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_DecVol(",
        "Name": "Sound_JQ6500_BG_DecVol",
        "Kurzbeschreibung": "Lautstärke reduzieren",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_DecVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_JQ6500_BG_IncVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_IncVol(LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_IncVol(",
        "Name": "Sound_JQ6500_BG_IncVol",
        "Kurzbeschreibung": "Lautstärke erhöhen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_IncVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_JQ6500_BG_Next": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Next(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Next(",
        "Name": "Sound_JQ6500_BG_Next",
        "Kurzbeschreibung": "Wiedergabe der nächsten Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Next({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Next_of_N": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Next_of_N(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Next_of_N(",
        "Name": "Sound_JQ6500_BG_Next_of_N",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Next_of_N({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_BG_Next_of_N_Reset": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Next_of_N_Reset(LED, InCh, InReset, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Next_of_N_Reset(",
        "Name": "Sound_JQ6500_BG_Next_of_N_Reset",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Next_of_N_Reset({LED},{InCh},{InReset},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "InReset",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_BG_PlayRandom": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_PlayRandom(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_PlayRandom(",
        "Name": "Sound_JQ6500_BG_PlayRandom",
        "Kurzbeschreibung": "Zufällige Sounddatei abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_PlayRandom({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_BG_Prev": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Prev(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Prev(",
        "Name": "Sound_JQ6500_BG_Prev",
        "Kurzbeschreibung": "Wiedergabe der vorherigen Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Prev({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Seq1": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Seq1(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Seq1(",
        "Name": "Sound_JQ6500_BG_Seq1",
        "Kurzbeschreibung": "Sounddatei 1 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Seq1({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Seq2": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Seq2(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Seq2(",
        "Name": "Sound_JQ6500_BG_Seq2",
        "Kurzbeschreibung": "Sounddatei 2 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Seq2({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Seq3": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Seq3(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Seq3(",
        "Name": "Sound_JQ6500_BG_Seq3",
        "Kurzbeschreibung": "Sounddatei 3 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Seq3({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Seq4": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Seq4(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Seq4(",
        "Name": "Sound_JQ6500_BG_Seq4",
        "Kurzbeschreibung": "Sounddatei 4 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Seq4({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_BG_Seq5": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_BG_Seq5(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_BG_Seq5(",
        "Name": "Sound_JQ6500_BG_Seq5",
        "Kurzbeschreibung": "Sounddatei 5 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_BG_Seq5({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_DecVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_DecVol(LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_JQ6500_DecVol(",
        "Name": "Sound_JQ6500_DecVol",
        "Kurzbeschreibung": "Lautstärke reduzieren",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_DecVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_JQ6500_IncVol": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_IncVol(LED, InCh, Steps)",
        "Find Name for detection of actual macro": "Sound_JQ6500_IncVol(",
        "Name": "Sound_JQ6500_IncVol",
        "Kurzbeschreibung": "Lautstärke erhöhen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_IncVol({LED},{InCh},{Steps})",
        "Params": [
            "LED",
            "InCh",
            "Steps"
        ]
    },
    "Sound_JQ6500_Next": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Next(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Next(",
        "Name": "Sound_JQ6500_Next",
        "Kurzbeschreibung": "Wiedergabe der nächsten Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Next({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Next_of_N": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Next_of_N(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Next_of_N(",
        "Name": "Sound_JQ6500_Next_of_N",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Next_of_N({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_Next_of_N_Reset": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Next_of_N_Reset(LED, InCh, InReset, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Next_of_N_Reset(",
        "Name": "Sound_JQ6500_Next_of_N_Reset",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Next_of_N_Reset({LED},{InCh},{InReset},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "InReset",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_PlayRandom": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_PlayRandom(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_JQ6500_PlayRandom(",
        "Name": "Sound_JQ6500_PlayRandom",
        "Kurzbeschreibung": "Zufällige Sounddatei abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_PlayRandom({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_JQ6500_Prev": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Prev(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Prev(",
        "Name": "Sound_JQ6500_Prev",
        "Kurzbeschreibung": "Wiedergabe der vorherigen Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Prev({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Seq1": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Seq1(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Seq1(",
        "Name": "Sound_JQ6500_Seq1",
        "Kurzbeschreibung": "Sounddatei 1 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Seq1({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Seq2": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Seq2(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Seq2(",
        "Name": "Sound_JQ6500_Seq2",
        "Kurzbeschreibung": "Sounddatei 2 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Seq2({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Seq3": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Seq3(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Seq3(",
        "Name": "Sound_JQ6500_Seq3",
        "Kurzbeschreibung": "Sounddatei 3 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Seq3({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Seq4": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Seq4(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Seq4(",
        "Name": "Sound_JQ6500_Seq4",
        "Kurzbeschreibung": "Sounddatei 4 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Seq4({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_JQ6500_Seq5": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "1",
        "Macro": "Sound_JQ6500_Seq5(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_JQ6500_Seq5(",
        "Name": "Sound_JQ6500_Seq5",
        "Kurzbeschreibung": "Sounddatei 5 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_JQ6500_Seq5({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Loop": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Loop(      LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Loop(",
        "Name": "Sound_Loop",
        "Kurzbeschreibung": "Sound Wiedergabe in einer Schleife",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Loop({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Next": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Next(      LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Next(",
        "Name": "Sound_Next",
        "Kurzbeschreibung": "Wiedergabe der nächsten Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Next({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Next_of_N": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Next_of_N(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_Next_of_N(",
        "Name": "Sound_Next_of_N",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Next_of_N({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_Next_of_N_Reset": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "2",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Next_of_N_Reset(LED, InCh, InReset, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_Next_of_N_Reset(",
        "Name": "Sound_Next_of_N_Reset",
        "Kurzbeschreibung": "Nächste Sounddatei von N abspielen mit Reset Eingang",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Next_of_N_Reset({LED},{InCh},{InReset},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "InReset",
            "MaxSoundNr"
        ]
    },
    "Sound_PausePlay": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_PausePlay( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_PausePlay(",
        "Name": "Sound_PausePlay",
        "Kurzbeschreibung": "Hält die Sound Widergabe an",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_PausePlay({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_PlayMode": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_PlayMode(  LED, InCh)",
        "Find Name for detection of actual macro": "Sound_PlayMode(",
        "Name": "Sound_PlayMode",
        "Kurzbeschreibung": "Abspielmode Umschalten",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_PlayMode({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_PlayRandom": {
        "Typ": "",
        "xTabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_PlayRandom(LED, InCh, MaxSoundNr)",
        "Find Name for detection of actual macro": "Sound_PlayRandom(",
        "Name": "Sound_PlayRandom",
        "Kurzbeschreibung": "Zufällige Sounddatei abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_PlayRandom({LED},{InCh},{MaxSoundNr})",
        "Params": [
            "LED",
            "InCh",
            "MaxSoundNr"
        ]
    },
    "Sound_Prev": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Prev(      LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Prev(",
        "Name": "Sound_Prev",
        "Kurzbeschreibung": "Wiedergabe der vorherigen Sound Datei",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Prev({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq1": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq1( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq1(",
        "Name": "Sound_Seq1",
        "Kurzbeschreibung": "Sounddatei 1 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq1({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq10": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq10(LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq10(",
        "Name": "Sound_Seq10",
        "Kurzbeschreibung": "Sounddatei 10 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq10({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq11": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq11(LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq11(",
        "Name": "Sound_Seq11",
        "Kurzbeschreibung": "Sounddatei 11 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq11({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq12": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq12(LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq12(",
        "Name": "Sound_Seq12",
        "Kurzbeschreibung": "Sounddatei 12 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq12({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq13": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq13(LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq13(",
        "Name": "Sound_Seq13",
        "Kurzbeschreibung": "Sounddatei 13 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq13({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq14": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq14(LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq14(",
        "Name": "Sound_Seq14",
        "Kurzbeschreibung": "Sounddatei 14 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq14({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq2": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq2( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq2(",
        "Name": "Sound_Seq2",
        "Kurzbeschreibung": "Sounddatei 2 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq2({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq3": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq3( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq3(",
        "Name": "Sound_Seq3",
        "Kurzbeschreibung": "Sounddatei 3 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq3({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq4": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq4( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq4(",
        "Name": "Sound_Seq4",
        "Kurzbeschreibung": "Sounddatei 4 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq4({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq5": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq5( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq5(",
        "Name": "Sound_Seq5",
        "Kurzbeschreibung": "Sounddatei 5 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq5({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq6": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq6( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq6(",
        "Name": "Sound_Seq6",
        "Kurzbeschreibung": "Sounddatei 6 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq6({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq7": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq7( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq7(",
        "Name": "Sound_Seq7",
        "Kurzbeschreibung": "Sounddatei 7 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq7({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq8": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq8( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq8(",
        "Name": "Sound_Seq8",
        "Kurzbeschreibung": "Sounddatei 8 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq8({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_Seq9": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_Seq9( LED, InCh)",
        "Find Name for detection of actual macro": "Sound_Seq9(",
        "Name": "Sound_Seq9",
        "Kurzbeschreibung": "Sounddatei 9 abspielen",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_Seq9({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Sound_USDSPI": {
        "Typ": "",
        "TabName": "Sound Macros",
        "Mode": "",
        "LEDs or LED Channel": "C1-2",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "2",
        "Macro": "Sound_USDSPI(    LED, InCh)",
        "Find Name for detection of actual macro": "Sound_USDSPI(",
        "Name": "Sound_USDSPI",
        "Kurzbeschreibung": "Umschalten der Quelle",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Sound_USDSPI({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "StartPage": {
        "Typ": "StartPage",
        "Name": "StartPage",
        "MTabName": "Start",
        "DISCONNECT_FILENAME": "MobaLedTest_disconnect.txt",
        "CLOSE_FILENAME": "MobaLedTest_close.txt",
        "TEMP_LEDEFFECTTABLE_FILENAME": "../temp_ledeffect_table.json",
        "TEMP_WORKBOOK_FILENAME": "../temp_workbook.table",
        "InoName_DCC": "../../../examples/23_A.DCC_Interface/23_A.DCC_Interface.ino",
        "InoName_SX": "../../../examples/23_A.Selectrix_Interface/23_A.Selectrix_Interface.ino",
        "Ino_Dir_LED": "../../LEDs_AutoProg/",
        "InoName_LED": "../LEDs_AutoProg.ino",
        "FINISH_FILE": "Finished.txt",
        "Title": "Start Seite",
        "Kurzbeschreibung": "Start Seite",
        "Photo": "Mobaled_ARDUINOs.png",
        "Ausführliche Beschreibung": "Mit MobaLedLib lassen sich auf jeder Modellbahn-Anlage Lichteffekte, animierte Figuren, Servo- Motoren und Sound-Module ansteuern. Das System basiert auf den kostengünstigen und millionenfach bewährten Arduino-Microcontrollern. Bis zu 768 Effekte können über nur eine einzige Platine angesteuert werden. Auf jeder Anlage können beliebig viele MobaLedLib-Platinen kombiniert werden. Per DCC oder CAN-BUS kann das System mit vorhandenen Steuerzentralen oder dem PC verbunden werden. Die Programmierung der Effekte erfolgt über den Programmgenerator. Weitere Details finden Sie in der Hilfe.\n\r",
        "MSG_NO_DEVICE_title": "Verbindung mit ARDUINO",
        "MSG_NO_DEVICE": "Das Program arbeitet am besten, wenn es mit dem ARDUINO verbunden ist. \nEs wurde noch keine Verbindung zum ARDUINO eingestellt.\n\nWollen Sie dies jetzt tun?",
        "msg_connect_open_error_title": "Verbindung mit ARDUINO",
        "msg_connect_open_error": "Das Program arbeitet am besten, wenn es mit dem ARDUINO verbunden ist. \nDer Verbindungsaufbau zum Port {} war nicht möglich.\n\nWollen Sie zur ARDUINO Einstellungsseite wechseln und die Verbindung überprüfen?",
        "Content": {
            "MobaLedLib": "Beleuchtungskonfiguration der MobaLedLib für Dummis\nEinfach zu Bedienende Oberfläche zur Konfiguration von Beleuchtungen und anderen Effekten für eine Modeleisenbahn.\nMit diesem Programm können die Beleuchtungs- und andere Effekte für eine Modelleisenbahn ganz einfach erstellt werden. Es können bis zu 256 RGB LEDs oder 768 einzelne LEDs verwaltet werden.\nÜber eine einfach zu bedienende Benutzeroberfläche kann man die gewünschten Funktionen Auswählen und Konfigurieren. Es steht eine Vielzahl von Befehlen zur Verfügung. Der Wichtigste ist sicherlich das <Belebte Haus>. Man kann aber auch Andreaskreuze, Signale, Ampeln, Sounds, Servos und vieles mehr mit einem Klick auswählen.\nDie Effekte können automatisch gestartet oder über eine Zentrale aktiviert werden. Dazu werden momentan folgenden Protokolle/Busse unterstützt: DCC, Selectrix und der Märklin CAN Bus oder direkt über eine Steuerungssoftware (z.B. RocRail,iTrain, Traincontroller, WinDigiPet).\nDas alles wird in einer übersichtlichen Tabelle verwaltet. \nDie Konfiguration kann ganz einfach direkt zum Arduino geschickt und ausprobiert werden. Die Programmerzeugung geschieht komplett im Hintergrund. Der Benutzer muss keinerlei Programmiererfahrung haben. Die Eingabe der Daten erfolgt durch Auswahl der gewünschten LED und anklicken des gewünschten Macros bzw Effekts. Zu den Effekten kommt man mit einem Klick auf <Programmgenerator> in dem Reiter oben.\nAusserdem werden noch einige Hilfmittel zur Verfügung gestellt:\n\n- Programmvorschau: zeigt für Experten das erstellte ARDUINO-Programm an.\n- Farbtest: Erlaubt das Testen von verschiedenen Farben für die RGB Leds \n  und das Erstellen der Farbtabelle für den ColTab-Macro\n- Soundtest: ermöglicht das einfache Austesten des Soundmoduls\n- Servo Tester: ermöglicht das einfache Testen und Einstellen von Servos\n- Z21 Simulator: Ermöglicht die Steuerung der Effekt direkt von einer Modellbahnsteuerung,\n  die die Roco Z21 unterstützt.\n- Serial Monitor: Eralubt die Überwachung der Seriellen Schnittstelle zum ARDUINO\n- Einstellungen: Programmeinstellungen vornehmen. z.B. Anschluss des ARDUINO, Startseite usw."
        }
    },
    "Status_Button_0_2": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "Cx",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "Status_Button_0_2(LED,B_LED_Cx, Val1)",
        "Find Name for detection of actual macro": "Status_Button_0_2(",
        "Name": "Status_Button_0_2",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "Sollen diese Makros per Menu auswählbar sein ?",
        "MacroStr": "Status_Button_0_2({LED},{B_LED_Cx},{Val1})",
        "Params": [
            "LED",
            "B_LED_Cx",
            "Val1"
        ]
    },
    "Status_Button_0_3": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "Status_Button_0_3(LED,B_LED_Cx, Val1)",
        "Find Name for detection of actual macro": "Status_Button_0_3(",
        "Name": "Status_Button_0_3",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Status_Button_0_3({LED},{B_LED_Cx},{Val1})",
        "Params": [
            "LED",
            "B_LED_Cx",
            "Val1"
        ]
    },
    "Status_Button_0_4": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "Status_Button_0_4(LED,B_LED_Cx, Val1)",
        "Find Name for detection of actual macro": "Status_Button_0_4(",
        "Name": "Status_Button_0_4",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Status_Button_0_4({LED},{B_LED_Cx},{Val1})",
        "Params": [
            "LED",
            "B_LED_Cx",
            "Val1"
        ]
    },
    "Status_Button_0_5": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "B_LED_Cx",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "1",
        "Macro": "Status_Button_0_5(LED,B_LED_Cx, Val1)",
        "Find Name for detection of actual macro": "Status_Button_0_5(",
        "Name": "Status_Button_0_5",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Status_Button_0_5({LED},{B_LED_Cx},{Val1})",
        "Params": [
            "LED",
            "B_LED_Cx",
            "Val1"
        ]
    },
    "TEST_BUTTONS_INCH": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "#define TEST_BUTTONS_INCH(Test_But_InCh)",
        "Find Name for detection of actual macro": "#define TEST_BUTTONS_INCH",
        "Name": "TEST_BUTTONS_INCH",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "#defineTEST_BUTTONS_INCH{Test_But_InCh}",
        "Params": [
            "Test_But_InCh"
        ]
    },
    "TEST_PUSH_BUTTONS": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "",
        "InCnt": "",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "#define TEST_PUSH_BUTTONS()",
        "Find Name for detection of actual macro": "#define TEST_PUSH_BUTTONS",
        "Name": "TEST_PUSH_BUTTONS",
        "Kurzbeschreibung": "Test Schalter: Mit den drei Tasten des Mainboards können DCC/Selectrix, … Befehle simmuliert werden. Die Taster werden als Ein-/Ausschalter betrieben.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "#defineTEST_PUSH_BUTTONS{}",
        "Params": [
            ""
        ]
    },
    "TEST_TOGGLE_BUTTONS": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "",
        "InCnt": "",
        "OutCnt": "",
        "Loc InCh": "",
        "Tmp8Bit": "",
        "SingleLEDCnt": "",
        "Macro": "#define TEST_TOGGLE_BUTTONS()",
        "Find Name for detection of actual macro": "#define TEST_TOGGLE_BUTTONS",
        "Name": "TEST_TOGGLE_BUTTONS",
        "Kurzbeschreibung": "Test Taster: Mit den drei Tasten des Mainboards können DCC/Selectrix, … Befehle simmuliert werden. Die Taster werden als Tater betrieben.",
        "Ausführliche Beschreibung": "",
        "MacroStr": "#defineTEST_TOGGLE_BUTTONS{}",
        "Params": [
            ""
        ]
    },
    "T_FlipFlop2Reset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlop2Reset(          DstVar0, DstVar1, T_InCh, R_InCh)",
        "Find Name for detection of actual macro": "T_FlipFlop2Reset(",
        "Name": "T_FlipFlop2Reset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlop2Reset({DstVar0},{DstVar1},{T_InCh},{R_InCh})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "T_InCh",
            "R_InCh"
        ]
    },
    "T_FlipFlop2ResetTimeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "2",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlop2ResetTimeout(   DstVar0, DstVar1, T_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "T_FlipFlop2ResetTimeout(",
        "Name": "T_FlipFlop2ResetTimeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlop2ResetTimeout({DstVar0},{DstVar1},{T_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar0",
            "DstVar1",
            "T_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "T_FlipFlopInvReset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlopInvReset(        DstVar, T_InCh, R_InCh)",
        "Find Name for detection of actual macro": "T_FlipFlopInvReset(",
        "Name": "T_FlipFlopInvReset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlopInvReset({DstVar},{T_InCh},{R_InCh})",
        "Params": [
            "DstVar",
            "T_InCh",
            "R_InCh"
        ]
    },
    "T_FlipFlopInvResetTimeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlopInvResetTimeout( DstVar, T_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "T_FlipFlopInvResetTimeout(",
        "Name": "T_FlipFlopInvResetTimeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlopInvResetTimeout({DstVar},{T_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar",
            "T_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "T_FlipFlopReset": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlopReset(           DstVar, T_InCh, R_InCh)",
        "Find Name for detection of actual macro": "T_FlipFlopReset(",
        "Name": "T_FlipFlopReset",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlopReset({DstVar},{T_InCh},{R_InCh})",
        "Params": [
            "DstVar",
            "T_InCh",
            "R_InCh"
        ]
    },
    "T_FlipFlopResetTimeout": {
        "Typ": "",
        "xTabName": "Logic Macros",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "2",
        "OutCnt": "1",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "T_FlipFlopResetTimeout(    DstVar, T_InCh, R_InCh, Timeout)",
        "Find Name for detection of actual macro": "T_FlipFlopResetTimeout(",
        "Name": "T_FlipFlopResetTimeout",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "T_FlipFlopResetTimeout({DstVar},{T_InCh},{R_InCh},{Timeout})",
        "Params": [
            "DstVar",
            "T_InCh",
            "R_InCh",
            "Timeout"
        ]
    },
    "Use_GlobalVar": {
        "Typ": "",
        "Mode": "E",
        "LEDs or LED Channel": "0",
        "InCnt": "0",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Use_GlobalVar( GlobVarNr)",
        "Find Name for detection of actual macro": "Use_GlobalVar(",
        "Name": "Use_GlobalVar",
        "Kurzbeschreibung": "",
        "Ausführliche Beschreibung": "",
        "MacroStr": "Use_GlobalVar({GlobVarNr})",
        "Params": [
            "GlobVarNr"
        ]
    },
    "Variable": {
        "Typ": "",
        "Mode": "",
        "LEDs or LED Channel": "0",
        "InCnt": "n",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "1",
        "SingleLEDCnt": "",
        "Macro": "xxx",
        "Find Name for detection of actual macro": "Variable",
        "Name": "Variable",
        "Kurzbeschreibung": "Variable",
        "Ausführliche Beschreibung": "Variable",
        "ProgmemStr": "{{  0 , 1 }},",
        "DefineStr": "#define {VariableName}      {VariableNumber}",
        "SwitchTypeStr": "",
        "SetStartValueStr": "",
        "VariableNameStr": "{S_Address}",
        "MacroStr": "",
        "Params": [
            "S_Description",
            "S_Address"
        ]
    },
    "Welding": {
        "Typ": "",
        "TabName": "Light Macros",
        "Mode": "",
        "LEDs or LED Channel": "1",
        "InCnt": "1",
        "OutCnt": "0",
        "Loc InCh": "0",
        "Tmp8Bit": "0",
        "SingleLEDCnt": "",
        "Macro": "Welding(       LED, InCh)",
        "Find Name for detection of actual macro": "Welding(",
        "Name": "Welding",
        "Kurzbeschreibung": "Mit der 'Welding()' Funktion kann ein Schweißlicht simuliert werden. ",
        "Ausführliche Beschreibung": "Mit der 'Welding()' Funktion kann ein Schweißlicht simuliert werden. Dieses Licht flackert eine gewisse Zeit hell Weiß und verlischt dann für eine Weile. Nach dem Schweißvorgang glüht die 'Schweißstelle' kurz rot nach. Diese Funktion sollte von einer übergeordneten Funktion gesteuert werden ('Der Arbeiter will ja auch mal eine Pause').",
        "MacroStr": "Welding({LED},{InCh})",
        "Params": [
            "LED",
            "InCh"
        ]
    },
    "Z21MonitorPage": {
        "Typ": "Z21MonitorPage",
        "Name": "Z21MonitorPage",
        "MTabName": "Z21 Simulator",
        "Title": "Z21 Simulator",
        "Button_1": "Start Simulator",
        "Button_2": "Stop Simulator",
        "Button_3": "Zeige Taster-Adressen",
        "Kurzbeschreibung": "Z21 Simulation",
        "Ausführliche Beschreibung": "Die Z21 Simulation ermöglicht die direkte Steuerung des ARDUINOS von Modellbahnsteuerungsprogrammen aus (z.B. Rocrail, iTrain, Traincontroller, WinDigiPet). Die Simulation verhält sich gegenüber dem Steuerprogramm wie eine Roco Z21 Zentrale. Wenn das Steuerproramm auf demselben Rechner läuft, findet das Steuerprogramm die Z21 Simulation unter der IP Adresse 127.0.0.1. Das Textfeld zeigt alle gesendeten und empfangenen Kommmandos an.",
        "Params": [
            "Z21KeyTestInput"
            ]
    },
    "xConfigurationPage": {
        "Typ": "ConfigurationPage",
        "Name": "ConfigurationPage",
        "MTabName": "Einstellungen",
        "Title": "Einstellungen",
        "Button_1": "Geänderte Einstellungen übernehmen",
        "Button_2": "Individuellen Pfad zur ARDUINO IDE verwenden",
        "Button_3": "Pfad zur ARDUINO IDE auswählen",
        "Kurzbeschreibung": "Einstellungsparameter",
        "Ausführliche Beschreibung": "Hier können Sie die Grundeinstellungen für das Programm an Ihre Wünsche anpassen.\nSchliessen Sie den ARDUINO an einen USB Port an. Der ARDUINO wird automatisch in der Liste der gefundenen Geräte angezeigt.\nWenn nur ein ARDUINO gefunden wurde, wird er automatisch auch als Anschluss eingetragen. Sie könnne dies aber auch von Hand ändern.",
        "Params": [
            "ARDUINOConnected",
            "ARDUINOMessage",
            "ARDUINODetect",
            "ARDUINOParams",
            "ARDUINOMobaLedLib",
            "Farbauswahl",
            "Startseite",
            "MaxLEDcnt",
            "LEDColourCorrection",
            "UseZ21Data",
            "Z21Data"
        ]
    }
}