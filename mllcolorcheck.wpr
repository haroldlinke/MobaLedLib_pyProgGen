#!wing
#!version=7.0
##################################################################
# Wing project file                                              #
##################################################################
[project attributes]
debug.launch-configs = (2,
                        {'launch-0NbezTetZB1mAdAo': ({},
        {'buildcmd': ('project',
                      None),
         'env': ('project',
                 [u'']),
         'name': 'Error in Args',
         'pyexec': ('project',
                    u''),
         'pypath': ('project',
                    []),
         'pyrunargs': ('project',
                       '-u'),
         'runargs': u'--Startpage xx',
         'rundir': ('project',
                    u'')}),
                         'launch-61Ys7XhN41fDGUy5': ({},
        {'buildcmd': ('project',
                      None),
         'env': ('project',
                 [u'']),
         'name': 'Normal',
         'pyexec': ('project',
                    u''),
         'pypath': ('project',
                    []),
         'pyrunargs': ('project',
                       '-u'),
         'runargs': u'--port COM3 --startpage StartPage',
         'rundir': ('project',
                    u'')}),
                         'launch-VqTB21EOJIx0r0S9': ({'shared': True},
        {'buildcmd': ('project',
                      None),
         'env': ('project',
                 [u'']),
         'name': u'Debug2',
         'pyexec': ('project',
                    u''),
         'pypath': ('project',
                    []),
         'pyrunargs': ('project',
                       '-u'),
         'runargs': u'--loglevel DEBUG --logfile stdout --startpage=ColorCheckPage',
         'rundir': ('project',
                    u'')}),
                         'launch-ZDlZfh6oU5Lb1Qdh': ({'shared': True},
        {'buildcmd': ('project',
                      None),
         'env': ('project',
                 [u'']),
         'name': 'Debug',
         'pyexec': ('project',
                    u''),
         'pypath': ('project',
                    []),
         'pyrunargs': ('project',
                       '-u'),
         'runargs': u'--loglevel DEBUG --logfile stdout',
         'rundir': ('project',
                    u'')})})
proj.directory-list = [{'dirloc': loc('.'),
                        'excludes': (),
                        'filter': u'*',
                        'include_hidden': False,
                        'recursive': True,
                        'watch_for_changes': True}]
proj.file-type = 'normal'
proj.launch-config = {loc('pyProg_Generator_MobaLedLib.py'): ('custom',
        (u'',
         'launch-VqTB21EOJIx0r0S9'))}
proj.main-file = loc('pyProg_Generator_MobaLedLib.py')
[user attributes]
cache.last-mime-type = {loc('MobaLedTest_macrodef.json'): 'text/plain'}
debug.breakpoints = {loc('../../../../MobaLedCheckColors/mlcolorcheck/ToolTips.py'): {169L: (0,
        None,
        1,
        0)},
                     loc('../../../../MobaLedCheckColors/mlcolorcheck/colorwheel.py'): {238L: (0,
        None,
        1,
        0)},
                     loc('../../../../MobaLedCheckColors/mlcolorcheck/lightgradientbar.py'): {153L: (0,
        None,
        1,
        0)},
                     loc('../../../../MobaLedCheckColors/mlcolorcheck/tooltip.py'): {37L: (0,
        None,
        1,
        0)},
                     loc('../../../../MobaLedCheckColors/popup.py'): {21L: (0,
        None,
        1,
        0)},
                     loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'): {341L: (0,
        None,
        1,
        0)},
                     loc('../../../../Program Files/OpenShot Video Editor/launch.py'): {104L: (0,
        None,
        1,
        0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'): {30L: (0,
        None,
        1,
        0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap_after_Selected_Events.py'): {27L: (0,
        None,
        1,
        0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_At_Interval_UI.py'): {96: (0,
        None,
        1,
        0),
        102L: (0,
               None,
               1,
               0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/abc\xc3\x9c\xc3\xa4\xc3\xb6abcd_imp.py'): {25L: (0,
        None,
        1,
        0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/abc\xc3\x9c\xc3\xa4\xc3\xb6abcd_ui.py'): {105: (0,
        None,
        1,
        0),
        126L: (0,
               None,
               1,
               0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/wingdbstub.py'): {118L: (0,
        None,
        1,
        0),
        136: (0,
              None,
              1,
              0),
        172L: (0,
               None,
               1,
               0),
        314L: (0,
               None,
               1,
               0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\x9c\xba\xe6\x99\xaf\xe6\xa3\x80\xe6\xb5\x8b\xe5\x8f\x8a\xe5\x88\x86\xe5\x89\xb2.py'): {391L: (0,
        None,
        1,
        0)},
                     loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe6\x8c\x89\xe5\x9b\xba\xe5\xae\x9a\xe9\x97\xb4\xe9\x9a\x94\xe6\xb7\xbb\xe5\x8a\xa0\xe6\xa0\x87\xe8\xae\xb0_ui.py'): {97: (0,
        None,
        1,
        0)},
                     loc('../CheckColors/MobaLedCheckColors.py'): {811L: (0,
        None,
        1,
        0)},

                     loc('mlpyproggen/ColorCheckPage.py'): {1029L: (0,
        None,
        1,
        0)},
                     loc('mlpyproggen/EffectTestPage.py'): {459L: (0,
        None,
        1,
        0),
        471L: (0,
               None,
               1,
               0),
        1245L: (0,
                None,
                1,
                0),
        1499L: (0,
                None,
                1,
                0)},
                     loc('mlpyproggen/LedEffectTable.py'): {127L: (0,
        None,
        1,
        0),
        620L: (0,
               None,
               1,
               0),
        1324L: (0,
                None,
                1,
                0)},

                     loc('pyProg_Generator_MobaLedLib.py'): {2263L: (0,
        None,
        1,
        0),
        2301L: (0,
                None,
                1,
                0)},
                     loc('tkcolorpicker/spinbox.py'): {118L: (0,
        None,
        1,
        0),
        122L: (0,
               None,
               1,
               0)},
                     loc('../../../../mobaledlib.py'): {86L: (0,
        None,
        1,
        0),
        154L: (0,
               None,
               1,
               0),
        163L: (0,
               None,
               1,
               0)},
                     loc('../../../../mp4metadata/example.py'): {25L: (0,
        None,
        1,
        0),
        26L: (0,
              None,
              1,
              0),
        28L: (0,
              None,
              1,
              0)},
                     loc('../../../../mp4metadata/mp4file/atom.py'): {120L: (0,
        None,
        1,
        0),
        131L: (0,
               None,
               1,
               0),
        141L: (0,
               None,
               1,
               0),
        145L: (0,
               None,
               1,
               0),
        150L: (0,
               None,
               1,
               0),
        153L: (0,
               None,
               1,
               0),
        156L: (0,
               None,
               1,
               0),
        159L: (0,
               None,
               1,
               0)},
                     loc('../../../../mp4metadata/mp4file/mp4file.py'): {20L: (0,
        None,
        1,
        0)},
                     loc('../../../../tkcolorpicker/colorpicker.py'): {78L: (0,
        None,
        1,
        0)}}
debug.err-values = {None: {},
                    loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'): {},
                    loc('../../../../MobaLedCheckColorst.py'): {},
                    loc('../CheckColors/MobaLedCheckColors.py'): {'stack[0:1'\
        '].locals': (-2,
                     None,
                     None,
                     u'error',
                     None,
                     1,
                     None,
                     1,
                     u'<locals dict; len=0>',
                     u'Runtime failure details:\nException: <class \'AttributeError\'>\nValue = \'scrolltabframe\' object has no attribute \'tk\'\nTraceback (innermost last):\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 3393, in PackValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2940, in _BuildValueWrapper\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2549, in _GetShortValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 793, in GetStr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 850, in GetRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1093, in BuildRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1140, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1203, in _TryAppendBuiltinRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1268, in _AppendBuiltinDictRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1136, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1009, in IsHugeValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 975, in IsHugeDict\n\n  File "C:\\Program Files\\Python37\\lib\\tkinter\\__init__.py", line 1495, in keys\n\n    splitlist = self.tk.splitlist\n',
                     None,
                     0,
                     None),
        'stack[0:3].locals': (-2,
                              None,
                              None,
                              u'error',
                              None,
                              1,
                              None,
                              1,
                              u'<locals dict; len=0>',
                              u'Runtime failure details:\nException: <class \'AttributeError\'>\nValue = \'Canvas_1\' object has no attribute \'tk\'\nTraceback (innermost last):\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 3393, in PackValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2940, in _BuildValueWrapper\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2549, in _GetShortValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 793, in GetStr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 850, in GetRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1093, in BuildRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1140, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1203, in _TryAppendBuiltinRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1268, in _AppendBuiltinDictRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1136, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1009, in IsHugeValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 975, in IsHugeDict\n\n  File "C:\\Program Files\\Python37\\lib\\tkinter\\__init__.py", line 1495, in keys\n\n    splitlist = self.tk.splitlist\n',
                              None,
                              0,
                              None),
        'stack[0:4].locals': (-2,
                              None,
                              None,
                              u'error',
                              None,
                              1,
                              None,
                              1,
                              u'<locals dict; len=0>',
                              u'Runtime failure details:\nException: <class \'AttributeError\'>\nValue = \'Canvas_1\' object has no attribute \'tk\'\nTraceback (innermost last):\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 3393, in PackValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2940, in _BuildValueWrapper\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2549, in _GetShortValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 793, in GetStr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 850, in GetRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1093, in BuildRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1140, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1203, in _TryAppendBuiltinRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1268, in _AppendBuiltinDictRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1136, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1009, in IsHugeValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 975, in IsHugeDict\n\n  File "C:\\Program Files\\Python37\\lib\\tkinter\\__init__.py", line 1495, in keys\n\n    splitlist = self.tk.splitlist\n',
                              None,
                              0,
                              None),
        'stack[0:4].locals.parent_frame': (-2,
        None,
        None,
        u'error',
        None,
        1,
        None,
        1,
        u'<error handling value>',
        u'Runtime failure details:\nException: <class \'_tkinter.TclError\'>\nValue = invalid command name ".!notebook.!effecttestpage.!frame.!frame2.!frame2"\nTraceback (innermost last):\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 3258, in _AddNameSpaceEntries\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2913, in _BuildValueWrapper\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1009, in IsHugeValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 975, in IsHugeDict\n\n  File "C:\\Program Files\\Python37\\lib\\tkinter\\__init__.py", line 1497, in keys\n\n    splitlist(self.tk.call(self._w, \'configure\'))]\n',
        None,
        0,
        None)},
                    loc('pyProg_Generator_MobaLedLib.py'): {},
                    loc('../../../../ledtest.py'): {},
                    loc('../../../../ledtest.pyw'): {'stack[0:3].locals': (-2,
        None,
        None,
        u'error',
        None,
        1,
        None,
        1,
        u'<locals dict; len=0>',
        u'Runtime failure details:\nException: <class \'_tkinter.TclError\'>\nValue = invalid command name ".!colorpicker.!frame3.!frame.!label"\nTraceback (innermost last):\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 3393, in PackValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2940, in _BuildValueWrapper\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbgutils.py", line 2549, in _GetShortValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 793, in GetStr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 850, in GetRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1093, in BuildRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1140, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1203, in _TryAppendBuiltinRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1268, in _AppendBuiltinDictRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1136, in _AppendRepr\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 1009, in IsHugeValue\n\n  File "C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\dbg\\src\\debug\\tserver\\dbginspect.py", line 975, in IsHugeDict\n\n  File "c:\\Users\\Harold\\Documents\\Vegas Application Extensions\\Python37\\Lib\\tkinter\\__init__.py", line 1497, in keys\n\n    splitlist(self.tk.call(self._w, \'configure\'))]\n',
        None,
        0,
        None)},
                    loc('../../../../mp4metadata/example.py'): {},
                    loc('../../../../scrolltest.py'): {},
                    loc('../../../../serial_monitor2/serialmon_Tkinter.py'): {}}
debug.show-args-dialog = {loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'): False,
                          loc('../../../../MobaLedCheckColorst.py'): False,
                          loc('../../../../Vegas Application Extensions/Python37/csv_test1.py'): False,
                          loc('../CheckColors/MobaLedCheckColors.py'): False,
                          loc('pyProg_Generator_MobaLedLib.py'): False,
                          loc('../../../../ledtest.py'): False,
                          loc('../../../../mobaledlib.py'): False,
                          loc('../../../../test5.py'): False,
                          loc('../../../../tk_test.py'): False,
                          loc('../../../../tk_test1.py'): False,
                          loc('../../../../tkcolorpicker/colorpicker.py'): False}
debug.var-col-widths = [0.33520809898762655,
                        0.6647919010123735]
edit.file-encoding = {loc('MobaLedTest_config.json'): 'utf_8',
                      loc('MobaLedTest_macroparamdef.json'): 'latin_1',
                      loc('scrolledFrame/ScrolledFrame.py'): 'cp1252',
                      loc('../../../../test_html.py'): 'utf_8'}
edit.multi-select-popup-size = (245,
                                102)
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': '8pedaORQGMYTsXYNJhsogHw6Wz'\
        'OLvC0s',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [1],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.16203522504892365,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': (0,)}},
        'tree-style': 'deep'}}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('browser',
                               'tall',
                               0,
                               {'all_tree_states': {loc('../../../../MobaLedCheckColors.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors.py'),
                             'app')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors.py'),
                      'app')]},
        loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'),
                             'CLOSE_FILENAME')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'),
                      'app')]},

        loc('../../../../MobaLedCheckColors/tkcolorpicker/colorwheel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../MobaLedCheckColors/tkcolorpicker/colorwheel.py'),
                      'ColorWheel')]},
        loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'),
                             'app')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'),
                      'app')]},
        loc('../../../../MobaLedCheckColors_coltab.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors_coltab.py'),
                             'app')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors_coltab.py'),
                      'app')]},
        loc('../../../../MobaLedCheckColorst.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../MobaLedCheckColorst.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColorst.py'),
                      'app')]},
        loc('MobaLedTest_macrodef.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('mlpyproggen/ARDUINOMonitorPage.py'): {'expanded-nodes': [[('cla'\
        'ss def',
        loc('mlpyproggen/ARDUINOMonitorPage.py'),
        'ARDUINOMonitorPage')]],
        'selected-nodes': [[('class def',
                             loc('mlpyproggen/ARDUINOMonitorPage.py'),
                             'ARDUINOMonitorPage')]],
        'top-node': [('class def',
                      loc('mlpyproggen/ARDUINOMonitorPage.py'),
                      'ARDUINOMonitorPage')]},
        loc('mlpyproggen/ConfigurationPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('mlpyproggen/ConfigurationPage.py'),
                      'ConfigurationPage')]},
        loc('mlpyproggen/DCC_KeyboardPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('mlpyproggen/DCC_KeyboardPage.py'),
                      'BUTTONLABELWIDTH')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},

        loc('../../../../MobaLedCheckColors/serial/serialwin32.py'): {'expan'\
        'ded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../MobaLedCheckColors/serial/serialwin32.py'),
                             'Serial')]],
        'top-node': [('class def',
                      loc('../../../../MobaLedCheckColors/serial/serialwin32.py'),
                      'Serial')]},

        loc('../../../../MobaLedCheckColors/tkcolorpicker/colorwheel.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../MobaLedCheckColors/tkcolorpicker/colorwheel.py'),
                      'ColorWheel')]},

        loc('../../../../MobaLedCheckColors/tkcolorpicker/functions.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../MobaLedCheckColors/tkcolorpicker/functions.py'),
                             'round2')]],
        'top-node': [('function def',
                      loc('../../../../MobaLedCheckColors/tkcolorpicker/functions.py'),
                      'col2hue')]},
        loc('../../../../MobaLedCheckColors/tkcolorpicker/lightgradientbar.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../MobaLedCheckColors/tkcolorpicker/lightgradientbar.py'),
                      'LightGradientBar')]},

        loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'),
                             'app')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors_V06/MobaLedCheckColorst.py'),
                      'app')]},
        loc('../../../../MobaLedCheckColorst.py'): {'expanded-nodes': [],
        'selected-nodes': [[('function def',
                             loc('../../../../MobaLedCheckColorst.py'),
                             '_')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColorst.py'),
                      'app')]},

        loc('../../../../MobaLedCheckColorst_with_LED_List.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColorst_with_LED_List.py'),
                      'app')]},
        loc('../../../../Program Files/Python37/Lib/argparse.py'): {'expande'\
        'd-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files/Python37/Lib/argparse.py'),
                      'Action')]},
        loc('../../../../Program Files/Python37/Lib/threading.py'): {'expand'\
        'ed-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Program Files/Python37/Lib/threading.py'),
                      'activeCount')]},
        loc('../../../../Program Files/Python37/Lib/tkinter/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../Program Files/Python37/Lib/tkinter/__init__.py'),
                      'BaseWidget')]},
        loc('../../../../Program Files/Python37/Lib/tty.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Program Files/Python37/Lib/tty.py'),
                      'CC')]},
        loc('../../../../UART-visualizer/serial/serialwin32.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../UART-visualizer/serial/serialwin32.py'),
                      'Serial')]},
        loc('../../../../Vegas Application Extensions/Python37/test4.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/Python37/test4.py'),
                      'main')]},
        loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'),
                      'FromVegas')]},
        loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'),
                             'XmlSettings')]],
        'top-node': [('class def',
                      loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'),
                      'AppChangeFlag')]},
        loc('MobaLedTest_config.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},
        loc('../../../../tk_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../tk_test.py'),
                      'app')]},
        u'By Module': {'expanded-nodes': [],
                       'selected-nodes': [None],
                       'top-node': None},
        loc('../../../../MobaLedCheckColors_coltab.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../MobaLedCheckColors_coltab.py'),
                             'app')]],
        'top-node': [('generic attribute',
                      loc('../../../../MobaLedCheckColors_coltab.py'),
                      'app')]},

        loc('../../../../Vegas Application Extensions/Python37/Lib/tkinter/__init__.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../Vegas Application Extensions/Python37/Lib/tkinter/commondialog.py'),
                             '')]],
        'top-node': [('class def',
                      loc('../../../../Vegas Application Extensions/Python37/Lib/tkinter/__init__.py'),
                      'BaseWidget')]},

        loc('../../../../Vegas Application Extensions/Python37/test4.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/Python37/test4.py'),
                      'main')]},

        loc('../../../../Vegas Application Extensions/Python37/untitled-1.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../Vegas Application Extensions/Python37/untitled-1.py'),
                      'child_thread')]},
        loc('../../../../Vegas Application Extensions/Python37/untitled-3.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../Vegas Application Extensions/Python37/untitled-3.py'),
                             'timestamp')]],
        'top-node': [('generic attribute',
                      loc('../../../../Vegas Application Extensions/Python37/untitled-3.py'),
                      'd')]},

        loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'),
                      'FromVegas')]},

        loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_At_Interval.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_At_Interval.py'),
                      'FromVegas')]},
        loc('../../../../Vegas Application Extensions/VEGASPython_PN/VegasSceneDetect.py'): {'e'\
        'xpanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../Vegas Application Extensions/VEGASPython_PN/VegasSceneDetect.py'),
                             'STATS_FILE_PATH')]],
        'top-node': [('function def',
                      loc('../../../../Vegas Application Extensions/VEGASPython_PN/VegasSceneDetect.py'),
                      'checkTLandMPselected')]},

        loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'),
                             'XmlSettings')]],
        'top-node': [('class def',
                      loc('../../../../Wing-pi/ScriptPortal/Vegas.pyi'),
                      'AppChangeFlag')]},

        loc('../../../../cx_freez_test/cx_freeze_test1.py'): {'expanded-node'\
        's': [],
        'selected-nodes': [None],
        'top-node': None},
        loc('../../../../d_share/Harold/python/scrollable_table1.py'): {'exp'\
        'anded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../d_share/Harold/python/scrollable_table1.py'),
                      'app')]},

        loc('MobaLedTest_macrodef.json'): {'expanded-nodes': [],

        'selected-nodes': [],
        'top-node': None},
        loc('MobaLedTest_macroparamdef.json'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},

        loc('mlpyproggen/ARDUINOMonitorPage.py'): {'expanded-nodes': [[('cla'\
        'ss def',
        loc('mlpyproggen/ARDUINOMonitorPage.py'),
        'ARDUINOMonitorPage')]],
        'selected-nodes': [[('class def',
                             loc('mlpyproggen/ARDUINOMonitorPage.py'),
                             'ARDUINOMonitorPage')]],
        'top-node': [('class def',
                      loc('mlpyproggen/ARDUINOMonitorPage.py'),
                      'ARDUINOMonitorPage')]},

        loc('mlpyproggen/ColorCheckPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('mlpyproggen/ColorCheckPage.py'),
                      'ColorCheckPage')]},

        loc('mlpyproggen/ConfigurationPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('mlpyproggen/ConfigurationPage.py'),
                      'ConfigurationPage')]},
        loc('mlpyproggen/DCC_KeyboardPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('mlpyproggen/DCC_KeyboardPage.py'),
                      'BUTTONLABELWIDTH')]},

        loc('mlpyproggen/DefaultConstants.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('mlpyproggen/DefaultConstants.py'),
                      'ARDUINO_LONG_WAITTIME')]},
        loc('mlpyproggen/EffectTestPage.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('mlpyproggen/EffectTestPage.py'),
                      'DE')]},
        loc('pyProg_Generator_MobaLedLib.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('pyProg_Generator_MobaLedLib.py'),
                      'app')]},
        loc('scrolledFrame/ScrolledFrame.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('scrolledFrame/ScrolledFrame.py'),
                      'app')]},
        loc('../../../../serial_monitor2/serial/serialwin32.py'): {'expanded'\
        '-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../serial_monitor2/serial/serialwin32.py'),
                      'Serial')]},
        loc('../../../../serial_monitor2/serialmon_Tkinter.py'): {'expanded-'\
        'nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../serial_monitor2/serialmon_Tkinter.py'),
                      'app')]},
        loc('../../../../serialmon3.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../serialmon3.py'),
                             'baudRate')]],
        'top-node': [('generic attribute',
                      loc('../../../../serialmon3.py'),
                      'baudRate')]},
        loc('../../../../test4.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../../../../test4.py'),
        'btn1')]},
        loc('../../../../test6.py'): {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': [('generic attribute',
        loc('../../../../test6.py'),
        'buttonCountdown')]},
        loc('../../../../test9.py'): {'expanded-nodes': [],
                                      'selected-nodes': [[('function def',
        loc('../../../../test9.py'),
        '_')]],
                                      'top-node': [('generic attribute',
        loc('../../../../test9.py'),
        'app')]},
        loc('../../../../test_html.py'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('../../../../test_html.py'),
                             '__tk_call__')]],
        'top-node': [('class def',
                      loc('../../../../test_html.py'),
                      'Html')]},
        loc('../../../../threading_test1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../threading_test1.py'),
                      'exitFlag')]},
        loc('../../../../threading_test2.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../threading_test2.py'),
                      'consumer')]},

        loc('../../../../tk_test.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../tk_test.py'),
                      'app')]},

        loc('../../../../tkcolorpicker/__init__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../tkcolorpicker/alphabar.py'),
                      '')]},
        loc('../../../../tkcolorpicker/__main__.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../tkcolorpicker/__main__.py'),
                      'root')]},
        loc('../../../../tkcolorpicker/alphabar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/alphabar.py'),
                      'AlphaBar')]},
        loc('../../../../tkcolorpicker/colorpicker.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../tkcolorpicker/colorpicker.py'),
                      'askcolor')]},
        loc('../../../../tkcolorpicker/colorsquare.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../tkcolorpicker/colorsquare.py'),
                             'ColorSquare')]],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/colorsquare.py'),
                      'ColorSquare')]},
        loc('../../../../tkcolorpicker/colorwheel.py'): {'expanded-nodes': [],
        'selected-nodes': [[('class def',
                             loc('../../../../tkcolorpicker/colorwheel.py'),
                             'ColorWheel')]],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/colorwheel.py'),
                      'ColorWheel')]},
        loc('../../../../tkcolorpicker/functions.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('function def',
                      loc('../../../../tkcolorpicker/functions.py'),
                      'col2hue')]},
        loc('../../../../tkcolorpicker/gradientbar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/gradientbar.py'),
                      'GradientBar')]},
        loc('../../../../tkcolorpicker/lightgradientbar.py'): {'expanded-nod'\
        'es': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/lightgradientbar.py'),
                      'LightGradientBar')]},
        loc('../../../../tkcolorpicker/limitvar.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/limitvar.py'),
                      'LimitVar')]},
        loc('../../../../tkcolorpicker/spinbox.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': [('class def',
                      loc('../../../../tkcolorpicker/spinbox.py'),
                      'Spinbox')]},
        loc('../../../../uart-visualizer/UART-visualizer.py'): {'expanded-no'\
        'des': [],
        'selected-nodes': [],
        'top-node': [('generic attribute',
                      loc('../../../../uart-visualizer/UART-visualizer.py'),
                      'baud')]},
        loc('../../../../webbrowsertest1.py'): {'expanded-nodes': [],
        'selected-nodes': [],
        'top-node': None},

        loc('unknown:<untitled> #9'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribu'\
        'te',
        loc('unknown:<untitled> #7'),
        'date_time')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #8'),
        'd')]},
        loc('unknown:<untitled> #12'): {'expanded-nodes': [],
        'selected-nodes': [[('generic attribute',
                             loc('unknown:<untitled> #10'),
                             'root')]],
        'top-node': [('generic attribute',
                      loc('unknown:<untitled> #11'),
                      'frame')]}},
=======
        loc('unknown:<untitled> #3'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribu'\
        'te',
        loc('unknown:<untitled> #1'),
        'date_time')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #2'),
        'd')]},
        loc('unknown:<untitled> #6'): {'expanded-nodes': [],
                                       'selected-nodes': [[('generic attribu'\
        'te',
        loc('unknown:<untitled> #4'),
        'root')]],
                                       'top-node': [('generic attribute',
        loc('unknown:<untitled> #5'),
        'frame')]}},

                                'browse_mode': u'Current Module',
                                'follow-selection': False,
                                'sort_mode': 'Alphabetically',
                                'visibility_options': {u'Derived Classes': False,
        u'Imported': False,
        u'Modules': True}}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [5,
                          3],
        'notebook_display': 'normal',
        'notebook_percent': 0.4774346793349169,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'Python Files',
                                  'fLocation': u'file:C:\\Program Files (x86)\\Wing Personal 7.1\\bin\\#define',
                                  'fRecursive': True,
                                  'fType': 'open-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': u'SwitchTypeStr',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 42,
                                       'fReplaceText': u'self.fonttitle',
                                       'fReverse': False,
                                       'fSearchText': u'dcc',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-stack',
                      'wide',
                      0,
                      {'codeline-mode': 'below'}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('versioncontrol.git',
                      'wide',
                      0,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'code-line': '',
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 2L,
                       'sel-line-start': 160L,
                       'selection_end': 160L,
                       'selection_start': 160L,
                       'zoom': 0L}),
                     ('messages',
                      'wide',
                      2,
                      {'current-domain': 0}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''}),
                     ('debug-io',
                      'wide',
                      1,
                      {})],

        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('unknown:<untitled> #13'),
        {'attrib-starts': [],
         'code-line': 'fdc1cb8f (Harold Linke      2020-12-28 19:45:04 +0100'\
                      '   1) # -*- coding: utf-8 -*-\n',
         'first-line': 0L,
         'folded-linenos': [],
         'sel-line': 0L,
         'sel-line-start': 0L,
         'selection_end': 0L,
         'selection_start': 0L,
         'zoom': 0L},
        1609238860.182],
        [loc('mlpyproggen/DefaultConstants.py'),
         {'attrib-starts': [],
          'code-line': '# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURP'\
                       'OSE.  See the\r\n',
          'first-line': 45L,
          'folded-linenos': [],
          'sel-line': 48L,
          'sel-line-start': 1966L,
          'selection_end': 2031L,
          'selection_start': 2031L,
          'zoom': 0L},
         1609240884.421],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.send_to_ARDUINO|0|',
                             972)],
          'code-line': '            arduino = self.arduino\r\n',
          'first-line': 2124L,
          'folded-linenos': [],
          'sel-line': 974L,
          'sel-line-start': 46909L,
          'selection_end': 46943L,
          'selection_start': 46943L,
          'zoom': 0L},
         1609240896.486],
        [loc('mlpyproggen/EffectTestPage.py'),
         {'attrib-starts': [('EffectTestPage|0|',
                             165),
                            ('EffectTestPage|0|.upload_to_ARDUINO|0|',
                             1897)],
          'code-line': '            #filedirname = os.path.join(h_filedir, f'\
                       'ilename)\r\n',
          'first-line': 1957L,
          'folded-linenos': [],
          'sel-line': 1981L,
          'sel-line-start': 94299L,
          'selection_end': 94359L,
          'selection_start': 94359L,
          'zoom': 0L},
         1609240937.843],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.send_to_ARDUINO|0|',
                             972)],
          'code-line': '            arduino = self.arduino\r\n',
          'first-line': 2124L,
          'folded-linenos': [],
          'sel-line': 974L,
          'sel-line-start': 46909L,
          'selection_end': 46943L,
          'selection_start': 46943L,
          'zoom': 0L},
         1609240952.829],
        [loc('mlpyproggen/EffectTestPage.py'),
         {'attrib-starts': [('EffectTestPage|0|',
                             165),
                            ('EffectTestPage|0|.upload_to_ARDUINO|0|',
                             1897)],
          'code-line': '            os.chdir(self.controller.mainfile_dir)\r'\
                       '\n',
          'first-line': 1957L,
          'folded-linenos': [],
          'sel-line': 1979L,
          'sel-line-start': 94233L,
          'selection_end': 94282L,
          'selection_start': 94270L,
          'zoom': 0L},
         1609240959.652],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.send_to_ARDUINO|0|',
                             972)],
          'code-line': '            arduino = self.arduino\r\n',
          'first-line': 2124L,
          'folded-linenos': [],
          'sel-line': 974L,
          'sel-line-start': 46909L,
          'selection_end': 46943L,
          'selection_start': 46943L,
          'zoom': 0L},
         1609240962.982],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.readConfigData|0|',
                             1106)],
          'code-line': '        filedir = self.mainfile_dir # os.path.dirnam'\
                       'e(os.path.realpath(__file__))\r\n',
          'first-line': 1091L,
          'folded-linenos': [],
          'sel-line': 1108L,
          'sel-line-start': 52944L,
          'selection_end': 52979L,
          'selection_start': 52967L,
          'zoom': 0L},
         1609240974.04],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.determine_filepath|0|',
                             2022)],
          'code-line': '        filedir = self.mainfile_dir\r\n',
          'first-line': 1997L,
          'folded-linenos': [],
          'sel-line': 2026L,
          'sel-line-start': 97924L,
          'selection_end': 97959L,
          'selection_start': 97947L,
          'zoom': 0L},
         1609240985.178],
        [loc('pyProg_Generator_MobaLedLib.py'),
         {'attrib-starts': [('LEDColorTest|0|',
                             158),
                            ('LEDColorTest|0|.__init__|0|',
                             163)],
          'code-line': '        self.mainfile_dir = os.path.dirname(os.path.'\
                       'realpath(__file__))\r\n',
          'first-line': 151L,
          'folded-linenos': [],
          'sel-line': 165L,
          'sel-line-start': 8246L,
          'selection_end': 8271L,
          'selection_start': 8259L,
          'zoom': 0L},
         1609241031.303],
        [loc('mlpyproggen/LedEffectTable.py'),
         {'attrib-starts': [('ledeffecttable_class|0|',
                             257),
                            ('ledeffecttable_class|0|.generate_macros|0|',
                             1122)],
          'code-line': '                                            import_t'\
                       'est=True\r\n',
          'first-line': 1311L,
          'folded-linenos': [],
          'sel-line': 1321L,
          'sel-line-start': 63881L,
          'selection_end': 63928L,
          'selection_start': 63928L,
          'zoom': 0L},
         1609241031.735],
        [loc('mlpyproggen/EffectTestPage.py'),
         {'attrib-starts': [('EffectTestPage|0|',
                             165),
                            ('EffectTestPage|0|.upload_to_ARDUINO|0|',
                             1897)],
          'code-line': '                ino_filename = self.controller.get_m'\
                       'acrodef_data("StartPage","InoName_LED") #"LEDs_AutoP'\
                       'rog.ino"\r\n',
          'first-line': 1975L,
          'folded-linenos': [],
          'sel-line': 1993L,
          'sel-line-start': 95023L,
          'selection_end': 95077L,
          'selection_start': 95077L,
          'zoom': 0L},
         1609241143.532],
        [loc('MobaLedTest_macrodef.json'),
         {'attrib-starts': [],
          'code-line': '        "InoName_LED": "../LEDs_AutoProg.ino",\r\n',
          'first-line': 3207L,
          'folded-linenos': [],
          'sel-line': 3226L,
          'sel-line-start': 120278L,
          'selection_end': 120313L,
          'selection_start': 120313L,
          'zoom': 0L},
         1609241276.428],
        [loc('mlpyproggen/EffectTestPage.py'),
         {'attrib-starts': [('EffectTestPage|0|',
                             165),
                            ('EffectTestPage|0|.addtoUndoList|0|',
                             1773)],
          'code-line': '\r\n',
          'first-line': 1711L,
          'folded-linenos': [],
          'sel-line': 1777L,
          'sel-line-start': 84001L,
          'selection_end': 84001L,
          'selection_start': 84001L,
          'zoom': 0L},
         1609241309.922],
        [loc('MobaLedTest_macrodef.json'),
         {'attrib-starts': [],
          'code-line': '        "InoName_LED": "../LEDs_AutoProg.ino",\r\n',
          'first-line': 3195L,
          'folded-linenos': [],
          'sel-line': 3226L,
          'sel-line-start': 120278L,
          'selection_end': 120313L,
          'selection_start': 120313L,
          'zoom': 0L},
         1609241597.574],
        [loc('mlpyproggen/EffectMacroPage.py'),
         {'attrib-starts': [('_|0|',
                             89)],
          'code-line': '    return TR.get(text, text)\r\n',
          'first-line': 124L,
          'folded-linenos': [],
          'sel-line': 91L,
          'sel-line-start': 3561L,
          'selection_end': 3590L,
          'selection_start': 3590L,
          'zoom': 0L},
         1609241607.25],
        [loc('mlpyproggen/EffectTestPage.py'),
         {'attrib-starts': [('EffectTestPage|0|',
                             165),
                            ('EffectTestPage|0|.upload_to_ARDUINO|0|',
                             1897)],
          'code-line': '                self.startfile = [filedirname,ino_fi'\
                       'lename,"--upload","--port",serport,"--board",Arduino'\
                       'Type,"--pref","programmer=arduino:arduinoisp","--pre'\
                       'f","build.path=../Arduino_Build_LEDs_AutoProg","--pr'\
                       'eserve-temp-files"]\r\n',
          'first-line': 1981L,
          'folded-linenos': [],
          'sel-line': 1998L,
          'sel-line-start': 95413L,
          'selection_end': 95587L,
          'selection_start': 95587L,
          'zoom': 0L},
         1609241768.602],
        [loc('MobaLedTest_macroparamdef.json'),
         {'attrib-starts': [],
          'code-line': '        "ParName": "MLL_DigitalSystem",\r\n',
          'first-line': 960L,
          'folded-linenos': [],
          'sel-line': 978L,
          'sel-line-start': 27918L,
          'selection_end': 27945L,
          'selection_start': 27942L,
          'zoom': 0L},
         1609241775.21],
        [loc('MobaLedTest_macroparamdef.json'),
         {'attrib-starts': [],
          'code-line': '        "ParName": "MLL_DigitalSystem",\r\n',
          'first-line': 960L,
          'folded-linenos': [],
          'sel-line': 978L,
          'sel-line-start': 27918L,
          'selection_end': 27944L,
          'selection_start': 27942L,
          'zoom': 0L},
         1609241775.382],
        [loc('MobaLedTest_macroparamdef.json'),
         {'attrib-starts': [],
          'code-line': '        "ParName": "MLL_DigitalSystem",\r\n',
          'first-line': 960L,
          'folded-linenos': [],
          'sel-line': 978L,
          'sel-line-start': 27918L,
          'selection_end': 27943L,
          'selection_start': 27942L,
          'zoom': 0L},
         1609241776.884]],
        20),
        'current-loc': loc('MobaLedTest_macroparamdef.json'),
        'editor-state-list': [(loc('mlpyproggen/ARDUINOConfigPage.py'),
                               {'attrib-starts': [('ARDUINOConfigPage|0|',
        91),
        ('ARDUINOConfigPage|0|.save_config|0|',
         626)],
                                'code-line': '        self.setConfigDataDict'\
        '(param_values_dict)\r\n',
                                'first-line': 619L,
                                'folded-linenos': [],
                                'sel-line': 653L,
                                'sel-line-start': 31002L,
                                'selection_end': 31002L,
                                'selection_start': 31002L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/ARDUINOMonitorPage.py'),
                               {'attrib-starts': [('ARDUINOMonitorPage|0|',
        72),
        ('ARDUINOMonitorPage|0|.tabselected|0|',
         137)],
                                'code-line': '        #self.controller.curre'\
        'ntTabClass = self.tabClassName\r\n',
                                'first-line': 22L,
                                'folded-linenos': [],
                                'sel-line': 138L,
                                'sel-line-start': 5991L,
                                'selection_end': 6000L,
                                'selection_start': 6000L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/ColorCheckPage.py'),
                               {'attrib-starts': [('ColorCheckPage|0|',
        272),
        ('ColorCheckPage|0|._get_color_from_ledtable|0|',
         1214)],
                                'code-line': "        lednum_str = '{:03}'.f"\
        "ormat(lednum)\r\n",
                                'first-line': 1200L,
                                'folded-linenos': [],
                                'sel-line': 1216L,
                                'sel-line-start': 55769L,
                                'selection_end': 55812L,
                                'selection_start': 55777L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/configfile.py'),
                               {'attrib-starts': [('ConfigFile|0|',
        63),
        ('ConfigFile|0|.__init__|0|',
         66)],
                                'code-line': '        if filedir == "":\r\n',
                                'first-line': 52L,
                                'folded-linenos': [],
                                'sel-line': 77L,
                                'sel-line-start': 2880L,
                                'selection_end': 2880L,
                                'selection_start': 2880L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/ConfigurationPage.py'),
                               {'attrib-starts': [('ConfigurationPage|0|',
        91),
        ('ConfigurationPage|0|.__init__|0|',
         93)],
                                'code-line': '        self.frame.grid_rowcon'\
        'figure(0,weight=1)        \r\n',
                                'first-line': 117L,
                                'folded-linenos': [],
                                'sel-line': 109L,
                                'sel-line-start': 4140L,
                                'selection_end': 4149L,
                                'selection_start': 4149L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/DCC_KeyboardPage.py'),
                               {'attrib-starts': [('DCCKeyboardPage|0|',
        107),
        ('DCCKeyboardPage|0|.__init__|0|',
         108)],
                                'code-line': '        \r\n',
                                'first-line': 99L,
                                'folded-linenos': [],
                                'sel-line': 115L,
                                'sel-line-start': 4226L,
                                'selection_end': 4234L,
                                'selection_start': 4234L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/DefaultConstants.py'),
                               {'attrib-starts': [],
                                'code-line': '# * MERCHANTABILITY or FITNESS'\
        ' FOR A PARTICULAR PURPOSE.  See the\r\n',
                                'first-line': 45L,
                                'folded-linenos': [],
                                'sel-line': 48L,
                                'sel-line-start': 1966L,
                                'selection_end': 2031L,
                                'selection_start': 2031L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/EffectMacroPage.py'),
                               {'attrib-starts': [('_|0|',
        89)],
                                'code-line': '    return TR.get(text, text)'\
        '\r\n',
                                'first-line': 124L,
                                'folded-linenos': [],
                                'sel-line': 91L,
                                'sel-line-start': 3561L,
                                'selection_end': 3590L,
                                'selection_start': 3590L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/EffectTestPage.py'),
                               {'attrib-starts': [('EffectTestPage|0|',
        165),
        ('EffectTestPage|0|.upload_to_ARDUINO|0|',
         1897)],
                                'code-line': '                self.startfile'\
        ' = [filedirname,ino_filename,"--upload","--port",serport,"--board",'\
        'ArduinoType,"--pref","programmer=arduino:arduinoisp","--pref","buil'\
        'd.path=../Arduino_Build_LEDs_AutoProg","--preserve-temp-files"]\r\n',
                                'first-line': 1981L,
                                'folded-linenos': [],
                                'sel-line': 1998L,
                                'sel-line-start': 95413L,
                                'selection_end': 95587L,
                                'selection_start': 95587L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/LedEffectTable.py'),
                               {'attrib-starts': [('ledeffecttable_class|0|',
        257),
        ('ledeffecttable_class|0|.generate_macros|0|',
         1122)],
                                'code-line': '                              '\
        '              import_test=True\r\n',
                                'first-line': 1311L,
                                'folded-linenos': [],
                                'sel-line': 1321L,
                                'sel-line-start': 63881L,
                                'selection_end': 63928L,
                                'selection_start': 63928L,
                                'zoom': 0L}),
                              (loc('../LEDs_AutoProg.h'),
                               {'attrib-starts': [],
                                'code-line': '',
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 1857L,
                                'selection_end': 1857L,
                                'selection_start': 1857L,
                                'zoom': 0L}),
                              (loc('MobaLedTest_macrodef.json'),
                               {'attrib-starts': [],
                                'code-line': '        "InoName_LED": "../LED'\
        's_AutoProg.ino",\r\n',
                                'first-line': 3195L,
                                'folded-linenos': [],
                                'sel-line': 3226L,
                                'sel-line-start': 120278L,
                                'selection_end': 120313L,
                                'selection_start': 120313L,
                                'zoom': 0L}),
                              (loc('MobaLedTest_macroparamdef.json'),
                               {'attrib-starts': [],
                                'code-line': '    },\r\n',
                                'first-line': 972L,
                                'folded-linenos': [],
                                'sel-line': 976L,
                                'sel-line-start': 27882L,
                                'selection_end': 27888L,
                                'selection_start': 27888L,
                                'zoom': 0L}),
                              (loc('pyProg_Generator_MobaLedLib.py'),
                               {'attrib-starts': [('LEDColorTest|0|',
        158),
        ('LEDColorTest|0|.__init__|0|',
         163)],
                                'code-line': '        self.mainfile_dir = os'\
        '.path.dirname(os.path.realpath(__file__))\r\n',
                                'first-line': 151L,
                                'folded-linenos': [],
                                'sel-line': 165L,
                                'sel-line-start': 8246L,
                                'selection_end': 8271L,
                                'selection_start': 8259L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/SerialMonitorPage.py'),
                               {'attrib-starts': [('ReadLine|0|',
        331),
        ('ReadLine|0|.readline|0|',
         336)],
                                'code-line': '                    #for j in '\
        'range(len(data)):\r\n',
                                'first-line': 277L,
                                'folded-linenos': [],
                                'sel-line': 354L,
                                'sel-line-start': 14013L,
                                'selection_end': 14060L,
                                'selection_start': 14060L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/ServoTestPage.py'),
                               {'attrib-starts': [('ServoTestPage|0|',
        89),
        ('ServoTestPage|0|.__init__|0|',
         95)],
                                'code-line': "        self.button_cancel_mm_"\
        "pos_speed=ttk.Button(servo_set_pos_speed_frame, text=\"Beende Progr"\
        "ammierung ohne Speichern\", command=self._cancel_set_min_max_pos,st"\
        "yle='my.TButton')\r\n",
                                'first-line': 339L,
                                'folded-linenos': [],
                                'sel-line': 208L,
                                'sel-line-start': 9378L,
                                'selection_end': 9556L,
                                'selection_start': 9538L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/StartPage.py'),
                               {'attrib-starts': [('StartPage|0|',
        86),
        ('StartPage|0|.__init__|0|',
         87)],
                                'code-line': '        self.tabClassName = "S'\
        'tartPage"\r\n',
                                'first-line': 78L,
                                'folded-linenos': [],
                                'sel-line': 88L,
                                'sel-line-start': 3168L,
                                'selection_end': 3168L,
                                'selection_start': 3168L,
                                'zoom': 0L}),
                              (loc('mlpyproggen/Z21MonitorPage.py'),
                               {'attrib-starts': [('Z21MonitorPage|0|',
        259),
        ('Z21MonitorPage|0|.__init__|0|',
         261)],
                                'code-line': '        button_frame = ttk.Fra'\
        'me(self.main_frame)\r\n',
                                'first-line': 274L,
                                'folded-linenos': [],
                                'sel-line': 283L,
                                'sel-line-start': 9446L,
                                'selection_end': 9487L,
                                'selection_start': 9487L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('mlpyproggen/ARDUINOConfigPage.py'),
         loc('mlpyproggen/ARDUINOMonitorPage.py'),
         loc('mlpyproggen/ColorCheckPage.py'),
         loc('mlpyproggen/configfile.py'),
         loc('mlpyproggen/ConfigurationPage.py'),
         loc('mlpyproggen/DCC_KeyboardPage.py'),
         loc('mlpyproggen/DefaultConstants.py'),
         loc('mlpyproggen/EffectMacroPage.py'),
         loc('mlpyproggen/EffectTestPage.py'),
         loc('mlpyproggen/LedEffectTable.py'),
         loc('../LEDs_AutoProg.h'),
         loc('MobaLedTest_macrodef.json'),
         loc('MobaLedTest_macroparamdef.json'),
         loc('pyProg_Generator_MobaLedLib.py'),
         loc('mlpyproggen/SerialMonitorPage.py'),
         loc('mlpyproggen/ServoTestPage.py'),
         loc('mlpyproggen/StartPage.py'),
         loc('mlpyproggen/Z21MonitorPage.py')]),
                               'open_files': [u'../LEDs_AutoProg.h',
        u'mlpyproggen/ARDUINOConfigPage.py',
        u'mlpyproggen/ARDUINOMonitorPage.py',
        u'mlpyproggen/ColorCheckPage.py',
        u'mlpyproggen/ConfigurationPage.py',
        u'mlpyproggen/DCC_KeyboardPage.py',
        u'mlpyproggen/DefaultConstants.py',
        u'mlpyproggen/LedEffectTable.py',
        u'mlpyproggen/SerialMonitorPage.py',
        u'mlpyproggen/ServoTestPage.py',
        u'mlpyproggen/StartPage.py',
        u'mlpyproggen/Z21MonitorPage.py',
        u'mlpyproggen/configfile.py',
        u'pyProg_Generator_MobaLedLib.py',
        u'MobaLedTest_macrodef.json',
        u'mlpyproggen/EffectMacroPage.py',
        u'mlpyproggen/EffectTestPage.py',
        u'MobaLedTest_macroparamdef.json']},

        'saved_notebook_display': None,
        'split_percents': {0: 0.47215722976134766},
        'splits': 2,
        'tab_location': 'top',
        'traversal_pos': ((0,
                           5),
                          1609243199.229),
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {},
                 'splits': 1,
                 'tab_location': 'left',
                 'traversal_pos': ((0,
                                    1),
                                   1588849390.454),
                 'user_data': {}},

        'window-alloc': (21,
                         -1,
                         2540,
                         1392)}]}
guimgr.recent-documents = [loc('MobaLedTest_macroparamdef.json'),
                           loc('mlpyproggen/EffectTestPage.py'),
                           loc('mlpyproggen/EffectMacroPage.py'),
                           loc('MobaLedTest_macrodef.json'),
                           loc('pyProg_Generator_MobaLedLib.py')]

guimgr.visual-state = {loc('file:C:/Program Files (x86)/Microsoft Visual Studio/Shared/Python37_64/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('BaseWidget|0|',
                          2250),
                         ('BaseWidget|0|.__init__|0|',
                          2285)],
        'code-line': '            (widgetName, self._w) + extra + self._opti'\
                     'ons(cnf))\r\n',
        'first-line': 2277L,
        'folded-linenos': [],
        'sel-line': 2298L,
        'sel-line-start': 95277L,
        'selection_end': 95277L,
        'selection_start': 95277L,
        'zoom': 0L},
                       loc('file:C:/Program Files/Python37/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('Wm|0|',
                          1753),
                         ('Wm|0|.wm_protocol|0|',
                          1955)],
        'code-line': '            command = self._register(func)\r\n',
        'first-line': 1939L,
        'folded-linenos': [],
        'sel-line': 1960L,
        'sel-line-start': 79752L,
        'selection_end': 79752L,
        'selection_start': 79752L,
        'zoom': 0L},
                       loc('../../../../Downloads/WikidPad-WikidPad-2-3-rc02/WikidPad-WikidPad-2-3-rc02/WikidPadStarter.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# from pwiki import srePersistent\r\n',
        'first-line': 123L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 2638L,
        'selection_end': 2663L,
        'selection_start': 2663L,
        'zoom': 0L},
                       loc('../../../../Downloads/recipe-577261-1.py'): {'at'\
        'trib-starts': [('demo|0|',
                         4)],
        'code-line': "    nb.add(page2, text='Two')\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 588L,
        'selection_end': 617L,
        'selection_start': 617L,
        'zoom': 0L},
                       loc('../../../../Downloads/zim-desktop-wiki-master/zim-desktop-wiki-master/zim.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '#!/usr/bin/python3\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Downloads/zim-desktop-wiki-master/zim-desktop-wiki-master/zim/signals.py'): {'a'\
        'ttrib-starts': [('DelayedCallback|0|',
                          467)],
        'code-line': '\tit called after a certain timeout. If the signal is '\
                     'emitted\n',
        'first-line': 297L,
        'folded-linenos': [],
        'sel-line': 471L,
        'sel-line-start': 14767L,
        'selection_end': 14782L,
        'selection_start': 14782L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors.py'): {'attrib-st'\
        'arts': [('ConfigFile|0|',
                  63),
                 ('ConfigFile|0|.__init__|0|',
                  66)],
        'code-line': '        self.palette = ("Kerze \\n 1500K", "Natriumlam'\
                     'pe \\n 2000K", "Gluehlampe \\n 2600K", "Hallogenlampe '\
                     '\\n 3000K", "Fotolampe \\n 3400K", "Neonroehre \\n 400'\
                     '0K", "Mondlicht \\n 4120K",\r\n',
        'first-line': 60L,
        'folded-linenos': [],
        'sel-line': 100L,
        'sel-line-start': 3188L,
        'selection_end': 3575L,
        'selection_start': 3188L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/MobaLedCheckColors.py'): {'a'\
        'ttrib-starts': [('LEDColorTest|0|',
                          259),
                         ('LEDColorTest|0|.ToolTip|0|',
                          779)],
        'code-line': '\r\n',
        'first-line': 761L,
        'folded-linenos': [],
        'sel-line': 787L,
        'sel-line-start': 37977L,
        'selection_end': 37977L,
        'selection_start': 37977L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/main_test.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/ColorCheckPage.py'): {'a'\
        'ttrib-starts': [('ColorCheckPage|0|',
                          274),
                         ('ColorCheckPage|0|._update_led_num|0|',
                          1006)],
        'code-line': '            ledcnt_max = int(self.controller.get_maxLE'\
                     'Dcnt())\r\n',
        'first-line': 984L,
        'folded-linenos': [],
        'sel-line': 1011L,
        'sel-line-start': 44708L,
        'selection_end': 44768L,
        'selection_start': 44737L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/ConfigurationPage.py'): {'a'\
        'ttrib-starts': [('ConfigurationPage|0|',
                          99),
                         ('ConfigurationPage|0|.__init__|0|',
                          101)],
        'code-line': '        self.ledmaxcount.set(self.getConfigData("maxLE'\
                     'Dcount"))\r\n',
        'first-line': 159L,
        'folded-linenos': [],
        'sel-line': 180L,
        'sel-line-start': 7457L,
        'selection_end': 7475L,
        'selection_start': 7475L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/DefaultConstants.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'HELPPAGE_FILENAME = "MobaLedCheckColorsHelp01.htm"\r\n',
        'first-line': 118L,
        'folded-linenos': [],
        'sel-line': 73L,
        'sel-line-start': 2835L,
        'selection_end': 2841L,
        'selection_start': 2841L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/EffectTestPage.py'): {'a'\
        'ttrib-starts': [('EffectTestPage|0|',
                          272),
                         ('EffectTestPage|0|.create_ARDUINO_CMD|0|',
                          752)],
        'code-line': '        max_led = int(ledcount)+1\r\n',
        'first-line': 487L,
        'folded-linenos': [],
        'sel-line': 763L,
        'sel-line-start': 31728L,
        'selection_end': 31755L,
        'selection_start': 31755L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/LEDListPage.py'): {'a'\
        'ttrib-starts': [('Frame_1|0|',
                          171),
                         ('Frame_1|0|.__init__|0|',
                          173)],
        'code-line': '            keyeffect = self.controller.ledeffecttable'\
                     '.get(key,"")\r\n',
        'first-line': 176L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 6969L,
        'selection_end': 7023L,
        'selection_start': 7009L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/SerialMonitorPage.py'): {'a'\
        'ttrib-starts': [('SerialThread|0|',
                          261),
                         ('SerialThread|0|.run|0|',
                          268)],
        'code-line': "                        self.queue.put(text.decode('ut"\
                     "f-8'))\r\n",
        'first-line': 238L,
        'folded-linenos': [],
        'sel-line': 284L,
        'sel-line-start': 9875L,
        'selection_end': 9875L,
        'selection_start': 9875L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/SoundCheckPage.py'): {'a'\
        'ttrib-starts': [('SoundCheckPage|0|',
                          119),
                         ('SoundCheckPage|0|._send_sound_to_ARDUINO|0|',
                          338)],
        'code-line': '        self.controller.send_to_ARDUINO(message)\r\n',
        'first-line': 305L,
        'folded-linenos': [],
        'sel-line': 345L,
        'sel-line-start': 14961L,
        'selection_end': 14961L,
        'selection_start': 14961L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/ToolTips.py'): {'a'\
        'ttrib-starts': [('ToolTips|0|',
                          15)],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 1298L,
        'selection_end': 1298L,
        'selection_start': 1298L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 2702L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/colorwheel.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from mlcolorcheck.DefaultConstants import COLORCOR_MAX'\
                     ', DELTA_H, INVERT_WHEEL\n',
        'first-line': 48L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 2477L,
        'selection_end': 2554L,
        'selection_start': 2542L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/configfile.py'): {'a'\
        'ttrib-starts': [('ConfigFile|0|',
                          62),
                         ('ConfigFile|0|.__init__|0|',
                          65)],
        'code-line': '        if filedir == "":\r\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2864L,
        'selection_end': 3643L,
        'selection_start': 2864L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/demo.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import ToolTips\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 77L,
        'selection_end': 86L,
        'selection_start': 86L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/dictFile.py'): {'a'\
        'ttrib-starts': [('saveDicttoFile|0|',
                          71)],
        'code-line': '    try:\r\n',
        'first-line': 31L,
        'folded-linenos': [],
        'sel-line': 73L,
        'sel-line-start': 2651L,
        'selection_end': 2651L,
        'selection_start': 2651L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/lightgradientbar.py'): {'a'\
        'ttrib-starts': [('LightGradientBar|0|',
                          61),
                         ('LightGradientBar|0|.__init__|0|',
                          64)],
        'code-line': '        self.gradient = tk.PhotoImage(master=self, wid'\
                     'th=width, height=height)\n',
        'first-line': 69L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 3617L,
        'selection_end': 3625L,
        'selection_start': 3625L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/mlcolorcheck/tooltip.py'): {'a'\
        'ttrib-starts': [('Tooltip|0|',
                          4),
                         ('Tooltip|0|.__init__|0|',
                          35)],
        'code-line': '        self.widget.bind("<Button-1>", self.onLeave, a'\
                     'dd="+")\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1700L,
        'selection_end': 1708L,
        'selection_start': 1708L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/popup.py'): {'att'\
        'rib-starts': [('RightClickMenu|0|',
                        3),
                       ('RightClickMenu|0|.reset_color|0|',
                        25)],
        'code-line': '',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 889L,
        'selection_end': 889L,
        'selection_start': 889L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Serial|0|',
                          20),
                         ('Serial|0|.write|0|',
                          300)],
        'code-line': '        if data:\n',
        'first-line': 272L,
        'folded-linenos': [],
        'sel-line': 308L,
        'sel-line-start': 13070L,
        'selection_end': 13070L,
        'selection_start': 13070L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/colorsquare.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from tkcolorpicker.functions import tk, round2, rgb_to'\
                     '_hexa, hue2col, rgb_to_hsv, hsv_to_rgb\n',
        'first-line': 33L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 2455L,
        'selection_end': 2455L,
        'selection_start': 2455L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/colorwheel.py'): {'a'\
        'ttrib-starts': [('ColorWheel|0|',
                          60)],
        'code-line': 'class ColorWheel(tk.Canvas):\n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 60L,
        'sel-line-start': 2557L,
        'selection_end': 2573L,
        'selection_start': 2563L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/functions.py'): {'a'\
        'ttrib-starts': [('hexa_to_rgb|0|',
                          109)],
        'code-line': '    r = int(color[1:3], 16)\n',
        'first-line': 87L,
        'folded-linenos': [],
        'sel-line': 111L,
        'sel-line-start': 4227L,
        'selection_end': 4227L,
        'selection_start': 4227L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/gradientbar.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from tkcolorpicker.functions import tk, round2, rgb_to'\
                     '_hexa, hue2col, rgb_to_hsv\n',
        'first-line': 53L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 797L,
        'selection_end': 797L,
        'selection_start': 797L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/lightgradientbar.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/limitvar.py'): {'a'\
        'ttrib-starts': [('LimitVar|0|',
                          25),
                         ('LimitVar|0|.get|0|',
                          40)],
        'code-line': '        val = tk.StringVar.get(self)\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 47L,
        'sel-line-start': 1652L,
        'selection_end': 1652L,
        'selection_start': 1652L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors/tkcolorpicker/spinbox.py'): {'a'\
        'ttrib-starts': [('Spinbox|0|',
                          25),
                         ('Spinbox|0|.__init__|0|',
                          28)],
        'code-line': '        tk.Spinbox.__init__(self, self.frame, **kwargs'\
                     ')\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 2615L,
        'selection_end': 2665L,
        'selection_start': 2665L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_V02.01/MobaLedCheckColors.py'): {'a'\
        'ttrib-starts': [('LEDColorTest|0|',
                          251),
                         ('LEDColorTest|0|.__init__|0|',
                          256)],
        'code-line': '        self.ledtable = {}\r\n',
        'first-line': 750L,
        'folded-linenos': [],
        'sel-line': 261L,
        'sel-line-start': 14768L,
        'selection_end': 14789L,
        'selection_start': 14781L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_V02.01/mlcolorcheck/ColorCheckPage.py'): {'a'\
        'ttrib-starts': [('ColorCheckPage|0|',
                          237),
                         ('ColorCheckPage|0|._update_ledtable|0|',
                          1030)],
        'code-line': '            self.controller.ledtable[lednum_str] =  di'\
                     'ct(color=rgb_hex,pkey=pkey)\r\n',
        'first-line': 987L,
        'folded-linenos': [],
        'sel-line': 1033L,
        'sel-line-start': 45929L,
        'selection_end': 45929L,
        'selection_start': 45929L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_V02.01/mlcolorcheck/DefaultConstants.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '                     "ROOM_D_RED" : "#320009"\r\n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 107L,
        'sel-line-start': 4249L,
        'selection_end': 4287L,
        'selection_start': 4287L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_V02.01/mlcolorcheck/LEDListPage.py'): {'a'\
        'ttrib-starts': [('Frame_1|0|',
                          171),
                         ('Frame_1|0|.__init__|0|',
                          173)],
        'code-line': "            text =  \"(\"+'{:03}'.format(r)+\",\"+'{:0"\
                     "3}'.format(g)+\",\"+'{:03}'.format(b)+\")\" + \"\\n\""\
                     " + brightness_text + \"\\n\" + pkey\r\n",
        'first-line': 180L,
        'folded-linenos': [],
        'sel-line': 205L,
        'sel-line-start': 7333L,
        'selection_end': 7456L,
        'selection_start': 7456L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_V02.01/mlcolorcheck/ScenarioTestPage.py'): {'a'\
        'ttrib-starts': [('House_row|0|',
                          414),
                         ('House_row|0|.__init__|0|',
                          416)],
        'code-line': '        keycolor = self.controller.ledtable.get(key,"#'\
                     '000000")\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 466L,
        'sel-line-start': 20597L,
        'selection_end': 20635L,
        'selection_start': 20634L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColors_coltab.py'): {'at'\
        'trib-starts': [('ColorCheckPage|0|',
                         588),
                        ('ColorCheckPage|0|.__init__|0|',
                         594)],
        'code-line': '            f.grid(row=i % 3, column=i // 3, padx=2, p'\
                     'ady=2)\r\n',
        'first-line': 695L,
        'folded-linenos': [],
        'sel-line': 699L,
        'sel-line-start': 28848L,
        'selection_end': 28891L,
        'selection_start': 28891L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColorst.py'): {'attrib-s'\
        'tarts': [],
        'code-line': '# \r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 28L,
        'selection_end': 30L,
        'selection_start': 30L,
        'zoom': 0L},
                       loc('../../../../MobaLedCheckColorst_with_LED_List.py'): {'a'\
        'ttrib-starts': [('PageTwo|0|',
                          1137),
                         ('PageTwo|0|.__init__|0|',
                          1139)],
        'code-line': '        led_palette = ttk.Frame(self)\r\n',
        'first-line': 1106L,
        'folded-linenos': [],
        'sel-line': 1153L,
        'sel-line-start': 49469L,
        'selection_end': 49482L,
        'selection_start': 49482L,
        'zoom': 0L},
                       loc('../../../../MobaLedLib_1.0.6/LEDs_AutoProg/pyProgGen_MobaLedLib/pyProg_Generator_MobaLedLib.exe'): {'a'\
        'ttrib-starts': [],
        'code-line': 'MZ\xc2\x90\0\x03\0\0\0\x04\0\0\0\xc3\xbf\xc3\xbf\0\0\xc2'\
                     '\xb8\0\0\0\0\0\0\0@\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0'\
                     '\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\x01\0\0\x0e\x1f'\
                     '\xc2\xba\x0e\0\xc2\xb4\t\xc3\x8d!\xc2\xb8\x01L\xc3\x8d'\
                     '!This program cannot be run in DOS mode.\r',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Program Files/OpenShot Video Editor/launch.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '#!/usr/bin/env python3\r\n',
        'first-line': 74L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Program Files/OpenShot Video Editor/windows/main_window.py'): {'a'\
        'ttrib-starts': [('MainWindow|0|',
                          71),
                         ('MainWindow|0|.closeEvent|0|',
                          101)],
        'code-line': '        self.destroy_lock_file()\r\n',
        'first-line': 150L,
        'folded-linenos': [],
        'sel-line': 164L,
        'sel-line-start': 6171L,
        'selection_end': 6202L,
        'selection_start': 6202L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/argparse.py'): {'a'\
        'ttrib-starts': [('_ActionsContainer|0|',
                          1244),
                         ('_ActionsContainer|0|.add_argument|0|',
                          1327)],
        'code-line': '        action = action_class(**kwargs)\r\n',
        'first-line': 1326L,
        'folded-linenos': [],
        'sel-line': 1358L,
        'sel-line-start': 49206L,
        'selection_end': 49206L,
        'selection_start': 49206L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/csv.py'): {'a'\
        'ttrib-starts': [('DictReader|0|',
                          80),
                         ('DictReader|0|.__next__|0|',
                          107)],
        'code-line': '            self.fieldnames\r\n',
        'first-line': 74L,
        'folded-linenos': [],
        'sel-line': 110L,
        'sel-line-start': 3348L,
        'selection_end': 3348L,
        'selection_start': 3348L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/encodings/cp1252.py'): {'a'\
        'ttrib-starts': [('IncrementalDecoder|0|',
                          20),
                         ('IncrementalDecoder|0|.decode|0|',
                          21)],
        'code-line': '        return codecs.charmap_decode(input,self.errors'\
                     ',decoding_table)[0]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 696L,
        'selection_end': 696L,
        'selection_start': 696L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/json/__init__.py'): {'a'\
        'ttrib-starts': [('load|0|',
                          273)],
        'code-line': '    return loads(fp.read(),\r\n',
        'first-line': 277L,
        'folded-linenos': [],
        'sel-line': 292L,
        'sel-line-start': 11206L,
        'selection_end': 11206L,
        'selection_start': 11206L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/logging/__init__.py'): {'a'\
        'ttrib-starts': [('debug|0|',
                          1990)],
        'code-line': '    root.debug(msg, *args, **kwargs)\r\n',
        'first-line': 1978L,
        'folded-linenos': [],
        'sel-line': 1998L,
        'sel-line-start': 72660L,
        'selection_end': 72660L,
        'selection_start': 72660L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/sre_parse.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/threading.py'): {'a'\
        'ttrib-starts': [('Thread|0|',
                          743),
                         ('Thread|0|._bootstrap_inner|0|',
                          910)],
        'code-line': '            except SystemExit:\r\n',
        'first-line': 921L,
        'folded-linenos': [],
        'sel-line': 926L,
        'sel-line-start': 33450L,
        'selection_end': 33450L,
        'selection_start': 33450L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/tkinter/font.py'): {'a'\
        'ttrib-starts': [('Font|0|',
                          24),
                         ('Font|0|.__init__|0|',
                          67)],
        'code-line': '            tk.call("font", "create", self.name, *font'\
                     ')\r\n',
        'first-line': 56L,
        'folded-linenos': [],
        'sel-line': 92L,
        'sel-line-start': 2738L,
        'selection_end': 2738L,
        'selection_start': 2738L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/tkinter/ttk.py'): {'a'\
        'ttrib-starts': [('Combobox|0|',
                          692),
                         ('Combobox|0|.current|0|',
                          711)],
        'code-line': '        return self.tk.call(self._w, "current", newind'\
                     'ex)\r\n',
        'first-line': 711L,
        'folded-linenos': [],
        'sel-line': 718L,
        'sel-line-start': 26231L,
        'selection_end': 26231L,
        'selection_start': 26231L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/tty.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from termios import *\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 57L,
        'selection_end': 57L,
        'selection_start': 57L,
        'zoom': 0L},
                       loc('../../../../Program Files/Python37/Lib/webbrowser.py'): {'a'\
        'ttrib-starts': [('WindowsDefault|0|',
                          85),
                         ('WindowsDefault|0|.open|0|',
                          578)],
        'code-line': '            except OSError:\r\n',
        'first-line': 547L,
        'folded-linenos': [],
        'sel-line': 581L,
        'sel-line-start': 20039L,
        'selection_end': 20039L,
        'selection_start': 20039L,
        'zoom': 0L},
                       loc('../../../../UART-visualizer/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from serial import win32\n',
        'first-line': 300L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 384L,
        'selection_end': 384L,
        'selection_start': 384L,
        'zoom': 0L},
                       loc('../../../../VEGAS/releases/Release 1.02/vegaspython_v01.02/VEGASPython_PN/Add_SlowMotion_to_selected_clips.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../VEGAS/releases/Release 1.02/vegaspython_v01.02/VEGASPython_PN/Add_Transition_To_Selected_Events.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/Lib/importlib/_bootstrap.py'): {'a'\
        'ttrib-starts': [('_gcd_import|0|',
                          993)],
        'code-line': '    between import_module and __import__. This include'\
                     's setting __package__ if\r\n',
        'first-line': 988L,
        'folded-linenos': [],
        'sel-line': 998L,
        'sel-line-start': 33946L,
        'selection_end': 33961L,
        'selection_start': 33961L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/Lib/tkinter/__init__.py'): {'a'\
        'ttrib-starts': [('Misc|0|',
                          573),
                         ('Misc|0|._configure|0|',
                          1465)],
        'code-line': '        self.tk.call(_flatten((self._w, cmd)) + self._'\
                     'options(cnf))\r\n',
        'first-line': 1470L,
        'folded-linenos': [],
        'sel-line': 1475L,
        'sel-line-start': 58481L,
        'selection_end': 58481L,
        'selection_start': 58481L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/Lib/tkinter/ttk.py'): {'a'\
        'ttrib-starts': [('Label|0|',
                          744)],
        'code-line': 'class Label(Widget):\r\n',
        'first-line': 717L,
        'folded-linenos': [],
        'sel-line': 744L,
        'sel-line-start': 26878L,
        'selection_end': 26889L,
        'selection_start': 26884L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/csv_test1.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '            print(dict_list[macro],"\\n")\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 404L,
        'selection_end': 416L,
        'selection_start': 416L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/scrolltest4.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'canvasFrame.bind("<Configure>", update_scrollregion)\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 28L,
        'sel-line-start': 905L,
        'selection_end': 913L,
        'selection_start': 913L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/table_test1.py'): {'a'\
        'ttrib-starts': [('Frame_1|0|',
                          45),
                         ('Frame_1|0|.__init__|0|',
                          47)],
        'code-line': "        tk.Label(self,text='Config des Canvas',font='H"\
                     "elvetica 30').grid(row=0,columnspan=2)\r\n",
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1685L,
        'selection_end': 1751L,
        'selection_start': 1738L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/test4.py'): {'a'\
        'ttrib-starts': [('scrollTxtArea|0|',
                          1),
                         ('scrollTxtArea|0|.textPad|0|',
                          8)],
        'code-line': '        # add a vertical scroll bar to the text area\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 335L,
        'selection_end': 337L,
        'selection_start': 337L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/untitled-1.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'from tkinter import *\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 761L,
        'selection_end': 767L,
        'selection_start': 767L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/untitled-2.py'): {'a'\
        'ttrib-starts': [('NotebookDemo|0|',
                          3),
                         ('NotebookDemo|0|.__init__|0|',
                          5)],
        'code-line': '\r\n',
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 325L,
        'selection_end': 325L,
        'selection_start': 325L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/Python37/untitled-3.py'): {'a'\
        'ttrib-starts': [('Root|0|',
                          6),
                         ('Root|0|.submit|0|',
                          72)],
        'code-line': '        btnResult = Button(newTop, text="Tab 7",comman'\
                     'd=self.result1).pack()\r\n',
        'first-line': 32L,
        'folded-linenos': [],
        'sel-line': 79L,
        'sel-line-start': 2443L,
        'selection_end': 2455L,
        'selection_start': 2455L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'if __name__ == "__main__":\r\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 40L,
        'sel-line-start': 1129L,
        'selection_end': 1179L,
        'selection_start': 1129L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_2_Second_Gap_after_Selected_Events.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          24)],
        'code-line': '    Gap = Timecode.FromString("00:00:02.00")\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 26L,
        'sel-line-start': 663L,
        'selection_end': 663L,
        'selection_start': 663L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_At_Interval.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          23)],
        'code-line': '      EndTime = myVEGAS.Project.Length\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 931L,
        'selection_end': 969L,
        'selection_start': 969L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_At_Interval_UI.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          93)],
        'code-line': '            while CurrTime < EndTime:\r\n',
        'first-line': 94L,
        'folded-linenos': [],
        'sel-line': 109L,
        'sel-line-start': 3969L,
        'selection_end': 3969L,
        'selection_start': 3969L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Markers_To_Events.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# This script will add markers between all events on t'\
                     'he selected track\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Regions_To_Event.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# This script will add regions for all events on the s'\
                     'elected track\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_SlowMotion_to_selected_clips.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Adds slow motion effect to the selected clips, adj'\
                     'usts the length of the clip to the slomo rate\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Add_Transition_To_Selected_Events.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# add a selected transition between all selected event'\
                     's\r\n',
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Audit_Event_Levels.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Find all events where opacity or audio level are s'\
                     'ligthly changed\r\n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_Begin_and_End_of_Event.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import System.Windows.Forms\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 587L,
        'selection_end': 650L,
        'selection_start': 587L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_Begin_and_End_of_Event_group.py'): {'a'\
        'ttrib-starts': [('StringDialog|0|',
                          28),
                         ('StringDialog|0|.addTextControl|0|',
                          30)],
        'code-line': '        self.label.Left = left\r\n',
        'first-line': 106L,
        'folded-linenos': [],
        'sel-line': 34L,
        'sel-line-start': 1121L,
        'selection_end': 1121L,
        'selection_start': 1121L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_Begin_of_Event.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          93)],
        'code-line': '        for track in pyVEGAS.Project.Tracks:\r\n',
        'first-line': 99L,
        'folded-linenos': [],
        'sel-line': 108L,
        'sel-line-start': 3700L,
        'selection_end': 4178L,
        'selection_start': 3700L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_Begin_of_Event_group.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Chop off the front of a clip including grouped cli'\
                     'ps by a specified length\r\n',
        'first-line': 105L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_End_of_Event.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          84)],
        'code-line': '        \r\n',
        'first-line': 63L,
        'folded-linenos': [],
        'sel-line': 95L,
        'sel-line-start': 3277L,
        'selection_end': 3285L,
        'selection_start': 3285L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Chopoff_End_of_Event_group.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Chop off the end of a clip including grouped clips'\
                     ' by a specified length\r\n',
        'first-line': 108L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Delete_Empty_Space_Between_Events.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          20)],
        'code-line': '    for track in myVEGAS.Project.Tracks:\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 22L,
        'sel-line-start': 601L,
        'selection_end': 601L,
        'selection_start': 601L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Import_MagixVPX_EDL_02.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'if __name__ == "__main__":\r\n',
        'first-line': 554L,
        'folded-linenos': [],
        'sel-line': 580L,
        'sel-line-start': 21726L,
        'selection_end': 21782L,
        'selection_start': 21726L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Import_PinnacleStudio_SceneDetectFile.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Imports a Pinnacle Studio Scenefile into the Vegas'\
                     ' Mediabin\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Invert_Copy_Motion_Track_to_PiP_Values.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import System.Windows.Forms as WinForms\r\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 36L,
        'sel-line-start': 1262L,
        'selection_end': 1301L,
        'selection_start': 1262L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Limit_Selected_Event_Length.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Limit the length of all selected clips to a specif'\
                     'ied length\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Limit_Selected_Event_Length_group.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Limit the length of all selected clips to a specif'\
                     'ied length including groups\r\n',
        'first-line': 111L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Limit_Selected_Event_Length_to_4_Seconds.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Limit the length of all selected clips to 4 Second'\
                     's\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/Limit_Selected_Event_Length_to_4_seconds_group.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Limit the length of all selected clips to 4 second'\
                     's including groups\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/VegasSceneDetect.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '#\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 25L,
        'selection_end': 1743L,
        'selection_start': 25L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/abc\xc3\x9c\xc3\xa4\xc3\xb6abcd_imp.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# coding: iso-8859-1\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 20L,
        'selection_start': 20L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/abc\xc3\x9c\xc3\xa4\xc3\xb6abcd_ui.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          96)],
        'code-line': '            IncTime=Timecode.FromString(Interval)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 3978L,
        'selection_end': 3994L,
        'selection_start': 3994L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/wingdbstub.py'): {'a'\
        'ttrib-starts': [('NP_LoadModuleFromBootstrap|0|',
                          162)],
        'code-line': "  imports don't change sys.path.  The modules are unlo"\
                     "aded from sys.modules\r\n",
        'first-line': 129L,
        'folded-linenos': [],
        'sel-line': 164L,
        'sel-line-start': 6664L,
        'selection_end': 6678L,
        'selection_start': 6678L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\x89\xaa\xe5\x8e\xbb\xe4\xba\x8b\xe4\xbb\xb6\xe7\x9a\x84\xe5\xa4\xb4\xe9\x83\xa8.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    FromVegas(pyVEGAS)',
        'first-line': 99L,
        'folded-linenos': [],
        'sel-line': 121L,
        'sel-line-start': 4186L,
        'selection_end': 4208L,
        'selection_start': 4208L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\x89\xaa\xe5\x8e\xbb\xe4\xba\x8b\xe4\xbb\xb6\xe7\x9a\x84\xe5\xb0\xbe\xe9\x83\xa8.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    FromVegas(pyVEGAS)',
        'first-line': 90L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 3862L,
        'selection_end': 3884L,
        'selection_start': 3884L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\x8f\x8d\xe8\xbd\xac\xe2\x80\x9c\xe5\xa4\x8d\xe5\x88\xb6\xe8\xbf\x90\xe5\x8a\xa8\xe8\xb7\x9f\xe8\xb8\xaa\xe8\x87\xb3\xe7\x94\xbb\xe4\xb8\xad\xe7\x94\xbbFX\xe2\x80\x9d\xe7\x9a\x84\xe5\x80\xbc\xef\xbc\x88\xe7\x94\xa8\xe4\xba\x8e\xe7\xa8\xb3\xe5\xae\x9a\xef\xbc\x89.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'if __name__ == "__main__":\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 126L,
        'sel-line-start': 6536L,
        'selection_end': 6588L,
        'selection_start': 6536L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\x9c\xba\xe6\x99\xaf\xe6\xa3\x80\xe6\xb5\x8b\xe5\x8f\x8a\xe5\x88\x86\xe5\x89\xb2.py'): {'a'\
        'ttrib-starts': [('SD_Config|0|',
                          67)],
        'code-line': '    """ Configuration of VEGASScenDetect """\r\n',
        'first-line': 141L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2664L,
        'selection_end': 2692L,
        'selection_start': 2692L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\xaf\xbc\xe5\x85\xa5 Magix Video Pro X \xe7\x9a\x84EDL\xe9\xa1\xb9\xe7\x9b\xae.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Imports a Magix VPX Edl into the Vegas Timeline\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe5\xaf\xbc\xe5\x85\xa5 Pinnacle Studio \xe7\x9a\x84AXP\xe9\xa1\xb9\xe7\x9b\xae.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '# * Imports a Pinnacle Studio Project into the Vegas T'\
                     'imeline\r\n',
        'first-line': 618L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../Vegas Application Extensions/VEGASPython_PN/\xe6\x8c\x89\xe5\x9b\xba\xe5\xae\x9a\xe9\x97\xb4\xe9\x9a\x94\xe6\xb7\xbb\xe5\x8a\xa0\xe6\xa0\x87\xe8\xae\xb0_ui.py'): {'a'\
        'ttrib-starts': [('FromVegas|0|',
                          93)],
        'code-line': '            \r\n',
        'first-line': 108L,
        'folded-linenos': [],
        'sel-line': 116L,
        'sel-line-start': 4283L,
        'selection_end': 4349L,
        'selection_start': 4283L,
        'zoom': 0L},
                       loc('../../../../_old/MobaLedCheckColors_V03/MobaLedCheckColorst.py'): {'a'\
        'ttrib-starts': [('ColorCheckPage|0|',
                          377)],
        'code-line': '#        self.focus_set()\r\n',
        'first-line': 717L,
        'folded-linenos': [],
        'sel-line': 744L,
        'sel-line-start': 34862L,
        'selection_end': 34978L,
        'selection_start': 34862L,
        'zoom': 0L},
                       loc('../../../../_old/imagesbyday.py'): {'attrib-star'\
        'ts': [],
        'code-line': 'image_folder = "/home/pina/Bilder/20190906-Toskana/"\r'\
                     '\n',
        'first-line': 30L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../_old/ledtest.py'): {'attrib-starts': [],
        'code-line': 'import tkinter as tk\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../_old/tab_test3.py'): {'attrib-starts': [],
        'code-line': '#!/usr/local/bin/python3\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../_old/test9.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 156L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../_old/tk_test.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../_old/tk_test1.py'): {'attrib-starts': [],
        'code-line': 'from tkinter import *\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../cx_freez_test/cx_freeze_test1.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '      executables = [Executable(r"C:\\Users\\Harold\\'\
                     'Documents\\python\\MobaLedCheckColorst.py")]\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 119L,
        'selection_end': 153L,
        'selection_start': 153L,
        'zoom': 0L},
                       loc('../../../../d_share/Harold/python/scrollable_table1.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'LABEL_BG = "#ccc"  # Light gray.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 24L,
        'selection_end': 189L,
        'selection_start': 24L,
        'zoom': 0L},
                       loc('../../../MobaLedLib_1.0.1h/LEDs_AutoProg/CheckColors/mlcolorcheck/EffectMacroPage.py'): {'a'\
        'ttrib-starts': [('EffectMacroPage|0|',
                          93),
                         ('EffectMacroPage|0|.__init__|0|',
                          94)],
        'code-line': '        scroll=tk.Scrollbar(frameLabel)\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 4311L,
        'selection_end': 4331L,
        'selection_start': 4331L,
        'zoom': 0L},
                       loc('../../../MobaLedLib_1.0.1h/LEDs_AutoProg/CheckColors/mlcolorcheck/EffectTestPage.py'): {'a'\
        'ttrib-starts': [('EffectTestPage|0|',
                          174),
                         ('EffectTestPage|0|.generate_macros|0|',
                          859)],
        'code-line': '                        macroparams = led_param_dict.g'\
                     'et("params",{})\r\n',
        'first-line': 872L,
        'folded-linenos': [],
        'sel-line': 899L,
        'sel-line-start': 39700L,
        'selection_end': 39769L,
        'selection_start': 39724L,
        'zoom': 0L},
                       loc('../CheckColors/MobaLedCheckColors.py'): {'attrib'\
        '-starts': [('LEDColorTest|0|',
                     271),
                    ('LEDColorTest|0|.call_helppage|0|',
                     809)],
        'code-line': '    def call_helppage(self,event=None):\r\n',
        'first-line': 785L,
        'folded-linenos': [],
        'sel-line': 809L,
        'sel-line-start': 39872L,
        'selection_end': 39893L,
        'selection_start': 39880L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/ColorCheckPage.py'): {'a'\
        'ttrib-starts': [('ColorCheckPage|0|',
                          269),
                         ('ColorCheckPage|0|.tabunselected|0|',
                          676)],
        'code-line': '        self.ledhighlight = False\r\n',
        'first-line': 643L,
        'folded-linenos': [],
        'sel-line': 677L,
        'sel-line-start': 33128L,
        'selection_end': 33128L,
        'selection_start': 33128L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/ConfigurationPage.py'): {'a'\
        'ttrib-starts': [('ConfigurationPage|0|',
                          100),
                         ('ConfigurationPage|0|.__init__|0|',
                          102)],
        'code-line': '        self.startcmd_label = tk.Label(startcmd_frame,'\
                     ' text=self.startcmd_filename,width=120,height=2,wraple'\
                     'ngth=700)\r\n',
        'first-line': 94L,
        'folded-linenos': [],
        'sel-line': 136L,
        'sel-line-start': 5543L,
        'selection_end': 5657L,
        'selection_start': 5657L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/DCC_KeyboardPage.py'): {'a'\
        'ttrib-starts': [('DCCKeyboardPage|0|',
                          124),
                         ('DCCKeyboardPage|0|.__init__|0|',
                          125)],
        'code-line': '        self.main_frame.pack(expand=1,fill="both")\r\n',
        'first-line': 118L,
        'folded-linenos': [],
        'sel-line': 132L,
        'sel-line-start': 4694L,
        'selection_end': 4708L,
        'selection_start': 4708L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/DefaultConstants.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'HELPPAGE_FILENAME = "anleitungen spezial farbtestprogr'\
                     'amm [MobaLedLib Wiki].html" # "file:///C:/Users/Harold'\
                     '/Documents/python/ARDUINO/MobaLedLib_1.0.1/LEDs_AutoPr'\
                     'og/CheckColors/MobaLedCheckColorsHelp01.htm"\r\n',
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2976L,
        'selection_end': 3056L,
        'selection_start': 3056L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/EffectTestPage.py'): {'a'\
        'ttrib-starts': [('EffectTestPage|0|',
                          171),
                         ('EffectTestPage|0|.create_macroparam_frame|0|',
                          827)],
        'code-line': '        macrolabel = tk.Button(macroparam_frame, text='\
                     'Macrotitle, width=MACROLABELWIDTH, height=3, wraplengt'\
                     'h=110,relief="raised", background="white",borderwidth='\
                     '1,command=lambda: self._macro_cmd(macrokey=macro))\r\n',
        'first-line': 823L,
        'folded-linenos': [],
        'sel-line': 861L,
        'sel-line-start': 38033L,
        'selection_end': 38130L,
        'selection_start': 38130L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/Generaltools.py'): {'a'\
        'ttrib-starts': [('create_macroparam_frame|0|',
                          361)],
        'code-line': '            inbuttonlabel1.button=i*2\r\n',
        'first-line': 426L,
        'folded-linenos': [],
        'sel-line': 422L,
        'sel-line-start': 18881L,
        'selection_end': 18906L,
        'selection_start': 18906L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/LEDListPage.py'): {'a'\
        'ttrib-starts': [('LEDListPage|0|',
                          96),
                         ('LEDListPage|0|.tabunselected|0|',
                          130)],
        'code-line': '        pass    \r\n',
        'first-line': 109L,
        'folded-linenos': [],
        'sel-line': 131L,
        'sel-line-start': 4847L,
        'selection_end': 4859L,
        'selection_start': 4859L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/LedEffectTable.py'): {'a'\
        'ttrib-starts': [('ledeffecttable_class|0|',
                          248),
                         ('ledeffecttable_class|0|.setLEDtype|0|',
                          290)],
        'code-line': '        if lednum_dict != {}:\r\n',
        'first-line': 336L,
        'folded-linenos': [],
        'sel-line': 292L,
        'sel-line-start': 10030L,
        'selection_end': 10059L,
        'selection_start': 10059L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/Neuer Ordner/csv_to_json_test1.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '    data = []\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 7L,
        'sel-line-start': 278L,
        'selection_end': 593L,
        'selection_start': 278L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/SerialMonitorPage.py'): {'a'\
        'ttrib-starts': [('SerialMonitorPage|0|',
                          122),
                         ('SerialMonitorPage|0|.tabunselected|0|',
                          176)],
        'code-line': '        pass    \r\n',
        'first-line': 144L,
        'folded-linenos': [],
        'sel-line': 177L,
        'sel-line-start': 6372L,
        'selection_end': 6384L,
        'selection_start': 6384L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/SoundCheckPage.py'): {'a'\
        'ttrib-starts': [('SoundCheckPage|0|',
                          119),
                         ('SoundCheckPage|0|.tabunselected|0|',
                          271)],
        'code-line': '        pass        \r\n',
        'first-line': 189L,
        'folded-linenos': [],
        'sel-line': 272L,
        'sel-line-start': 12087L,
        'selection_end': 12099L,
        'selection_start': 12099L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/configfile.py'): {'a'\
        'ttrib-starts': [('ConfigFile|0|',
                          62),
                         ('ConfigFile|0|.__init__|0|',
                          65)],
        'code-line': '        if filedir == "":\r\n',
        'first-line': 54L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2864L,
        'selection_end': 2864L,
        'selection_start': 2864L,
        'zoom': 0L},
                       loc('../CheckColors/mlcolorcheck/tooltip.py'): {'attr'\
        'ib-starts': [('Tooltip|0|',
                       4),
                      ('Tooltip|0|.hide|0|',
                       151)],
        'code-line': '            tw.destroy()\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 154L,
        'sel-line-start': 4691L,
        'selection_end': 4715L,
        'selection_start': 4715L,
        'zoom': 0L},
                       loc('../CheckColors/scrolledFrame/ScrolledFrame.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../CheckColors/scrolledFrame/VerticalScrolledFrame.py'): {'a'\
        'ttrib-starts': [('VerticalScrolledFrame|0|',
                          5),
                         ('VerticalScrolledFrame|0|.move_canvas|0|',
                          65)],
        'code-line': '        self.canvas.yview_moveto(value)    \r\n',
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 66L,
        'sel-line-start': 2973L,
        'selection_end': 2973L,
        'selection_start': 2973L,
        'zoom': 0L},
                       loc('../CheckColors/tkcolorpicker/functions.py'): {'a'\
        'ttrib-starts': [('hexa_to_rgb|0|',
                          109)],
        'code-line': '        return r, g, b\n',
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 115L,
        'sel-line-start': 4335L,
        'selection_end': 4335L,
        'selection_start': 4335L,
        'zoom': 0L},
                       loc('../CheckColors/tkcolorpicker/limitvar.py'): {'at'\
        'trib-starts': [('LimitVar|0|',
                         25),
                        ('LimitVar|0|.__init__|0|',
                         26)],
        'code-line': '            raise ValueError("from_ should be smaller '\
                     'than to.")\n',
        'first-line': 25L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1245L,
        'selection_end': 1245L,
        'selection_start': 1245L,
        'zoom': 0L},
                       loc('../CheckColors/tools/csv_to_json_macro.py'): {'a'\
        'ttrib-starts': [('replace_chars|0|',
                          6)],
        'code-line': '    csvdict[key] = value\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 356L,
        'selection_end': 380L,
        'selection_start': 380L,
        'zoom': 0L},
                       loc('../CheckColors/tools/csv_to_json_param.py'): {'a'\
        'ttrib-starts': [],
        'code-line': 'import csv\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../LEDs_AutoProg.h'): {'attrib-starts': [],
        'code-line': '//****************************************************'\
                     '***************\r\n',
        'first-line': 21L,
        'folded-linenos': [],
        'sel-line': 33L,
        'sel-line-start': 1716L,
        'selection_end': 1749L,
        'selection_start': 1749L,
        'zoom': 0L},
                       loc('MobaLedTest_config.json'): {'attrib-starts': [],
        'code-line': '{\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('MobaLedTest_macrodef.json'): {'attrib-starts': [],

        'code-line': '\t"HelpPageURL" : "https://wiki.mobaledlib.de/anleitun'\
                     'gen/spezial/testseite"\r\n',
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 3426L,
        'selection_end': 3426L,
        'selection_start': 3426L,
        'zoom': 0L},
                       loc('MobaLedTest_macroparamdef.json'): {'attrib-start'\
        's': [],
        'code-line': '\t"AllowValueEntry": "True",\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 43L,
        'sel-line-start': 2556L,
        'selection_end': 2583L,
        'selection_start': 2583L,

        'zoom': 0L},
                       loc('mlcolorcheck/ColorCheckPage.py'): {'attrib-start'\
        's': [('ColorCheckPage|0|',
               269),
              ('ColorCheckPage|0|.cancel|0|',
               629)],
        'code-line': '        self.setConfigData("lastLed"     , self.lednum'\
                     '.get())\r\n',
        'first-line': 609L,
        'folded-linenos': [],
        'sel-line': 635L,
        'sel-line-start': 30570L,
        'selection_end': 30570L,
        'selection_start': 30570L,
        'zoom': 0L},
                       loc('mlcolorcheck/DefaultConstants.py'): {'attrib-sta'\
        'rts': [],
        'code-line': '# * along with this program.  If not, see <http://www.'\
                     'gnu.org/licenses/>.\r\n',
        'first-line': 303L,
        'folded-linenos': [],
        'sel-line': 52L,
        'sel-line-start': 2159L,
        'selection_end': 2171L,
        'selection_start': 2171L,
        'zoom': 0L},

                       loc('mlpyproggen/ARDUINOMonitorPage.py'): {'attrib-st'\
        'arts': [('ARDUINOMonitorPage|0|',
                  71),
                 ('ARDUINOMonitorPage|0|.__init__|0|',
                  73)],
        'code-line': '        \r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 118L,
        'sel-line-start': 5136L,
        'selection_end': 5136L,
        'selection_start': 5136L,
        'zoom': 0L},
                       loc('mlpyproggen/ColorCheckPage.py'): {'attrib-starts': [],
        'code-line': '\r\n',
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 73L,
        'sel-line-start': 3379L,
        'selection_end': 3379L,
        'selection_start': 3379L,
        'zoom': 0L},
                       loc('mlpyproggen/ConfigurationPage.py'): {'attrib-sta'\
        'rts': [('ConfigurationPage|0|',
                 90),
                ('ConfigurationPage|0|.transact|0|',
                 303)],
        'code-line': '        nbytes_written = self.controller.arduino.write'\
                     '(bytemessage)\r\n',
        'first-line': 283L,
        'folded-linenos': [],
        'sel-line': 313L,
        'sel-line-start': 13119L,
        'selection_end': 13159L,
        'selection_start': 13159L,

        'zoom': 0L},
                       loc('mlpyproggen/ConfigurationPage_old.py'): {'attrib'\
        '-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/DCC_KeyboardPage.py'): {'attrib-star'\

        'ts': [('DCCKeyboardPage|0|',
                107),
               ('DCCKeyboardPage|0|.__init__|0|',
                108)],
        'code-line': '        title_frame.grid(row=0, column=0, columnspan=2'\
                     ', pady=(4, 10), padx=10)\r\n',
        'first-line': 135L,
        'folded-linenos': [],
        'sel-line': 160L,
        'sel-line-start': 6189L,
        'selection_end': 6197L,
        'selection_start': 6197L,
        'zoom': 0L},
                       loc('mlpyproggen/DefaultConstants.py'): {'attrib-star'\
        'ts': [],
        'code-line': 'PROG_VERSION ="V02.34 - 03.05.2020"\r\n',
        'first-line': 35L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 2512L,
        'selection_end': 2533L,
        'selection_start': 2533L,

        'zoom': 0L},
                       loc('mlpyproggen/DefaultData.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/EffectMacroPage.py'): {'attrib-start'\

        's': [('EffectMacroPage|0|',
               95),
              ('EffectMacroPage|0|.__init__|0|',
               96)],
        'code-line': '        self.main_frame.grid_rowconfigure(3,weight=1) '\
                     '\r\n',
        'first-line': 102L,
        'folded-linenos': [],
        'sel-line': 120L,
        'sel-line-start': 4840L,
        'selection_end': 4883L,
        'selection_start': 4883L,
        'zoom': 0L},
                       loc('mlpyproggen/EffectTestPage.py'): {'attrib-starts': [('E'\
        'ffectTestPage|0|',
        165),
        ('EffectTestPage|0|.addtoUndoList|0|',
         1773)],
        'code-line': '\r\n',
        'first-line': 1711L,
        'folded-linenos': [],
        'sel-line': 1777L,
        'sel-line-start': 84001L,
        'selection_end': 84001L,
        'selection_start': 84001L,

        'zoom': 0L},
                       loc('mlpyproggen/Generaltools.py'): {'attrib-starts': [('c'\
        'reate_macroparam_content|0|',
        66)],
        'code-line': '            combo_value_list = list(self.controller.le'\
                     'dgrouptable.keys())\r\n',
        'first-line': 231L,
        'folded-linenos': [],
        'sel-line': 251L,
        'sel-line-start': 10650L,
        'selection_end': 10715L,
        'selection_start': 10702L,
        'zoom': 0L},
                       loc('mlpyproggen/LEDListPage.py'): {'attrib-starts': [('L'\
        'EDListPage|0|',
        96),
        ('LEDListPage|0|.tabselected|0|',
         123)],
        'code-line': '        #self.controller.currentTabClass = self.tabCla'\
                     'ssName\r\n',
        'first-line': 104L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4621L,
        'selection_end': 4660L,
        'selection_start': 4629L,
        'zoom': 0L},

                       loc('mlpyproggen/LedEffectTable.py'): {'attrib-starts': [('l'\
        'edeffecttable_class|0|',
        249),
        ('ledeffecttable_class|0|.update_ledtable_view_key|0|',
         681)],
        'code-line': '                \r\n',
        'first-line': 671L,
        'folded-linenos': [],
        'sel-line': 700L,
        'sel-line-start': 28485L,
        'selection_end': 28501L,
        'selection_start': 28501L,
        'zoom': 0L},
                       loc('mlpyproggen/SerialMonitorPage.py'): {'attrib-sta'\
        'rts': [],
        'code-line': '\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 72L,
        'sel-line-start': 3222L,
        'selection_end': 3222L,
        'selection_start': 3222L,
        'zoom': 0L},
                       loc('mlpyproggen/ServoTestPage.py'): {'attrib-starts': [('S'\
        'ervoTestPage|0|',
        81),
        ('ServoTestPage|0|.__init__|0|',
         87)],
        'code-line': '        # main_frame\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 327L,
        'sel-line-start': 18077L,
        'selection_end': 18084L,
        'selection_start': 18084L,

        'zoom': 0L},
                       loc('mlpyproggen/SoundCheckPage.py'): {'attrib-starts': [('S'\
        'oundCheckPage|0|',
        91),
        ('SoundCheckPage|0|.tabselected|0|',
         146)],
        'code-line': '        #self.controller.currentTabClass = self.tabCla'\
                     'ssName\r\n',
        'first-line': 131L,
        'folded-linenos': [],
        'sel-line': 148L,
        'sel-line-start': 6174L,
        'selection_end': 6183L,
        'selection_start': 6183L,
        'zoom': 0L},

                       loc('mlpyproggen/StartPage.py'): {'attrib-starts': [('S'\
        'tartPage|0|',
        84),
        ('StartPage|0|.__init__|0|',
         85)],
        'code-line': '        config_frame = self.controller.create_macropar'\
                     'am_frame(self.main_frame,self.tabClassName, maxcolumns'\
                     '=4,startrow =1,style="CONFIGPage")        \r\n',
        'first-line': 76L,
        'folded-linenos': [],
        'sel-line': 101L,
        'sel-line-start': 3729L,
        'selection_end': 3747L,
        'selection_start': 3747L,

        'zoom': 0L},
                       loc('mlpyproggen/ToolTips.py'): {'attrib-starts': [],
        'code-line': '# # # # # # # # # # # # # # # # # # # # # # # # # # # '\
                     '# # # #\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},

                       loc('mlpyproggen/Z21MonitorPage.py'): {'attrib-starts': [('Z'\
        '21MonitorPage|0|',
        258),
        ('Z21MonitorPage|0|.connect_all_serial_interfaces|0|',
         410)],
        'code-line': '            paramconfig_dict = self.controller.MacroPa'\
                     'ramDef.data.get("Z21Data",{})\r\n',
        'first-line': 381L,
        'folded-linenos': [],
        'sel-line': 415L,
        'sel-line-start': 14709L,
        'selection_end': 14709L,
        'selection_start': 14709L,

        'zoom': 0L},
                       loc('mlpyproggen/__init__.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/colorwheel.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/configfile.py'): {'attrib-starts': [],

        'code-line': 'import json\r\n',
        'first-line': 42L,
        'folded-linenos': [],
        'sel-line': 57L,
        'sel-line-start': 2388L,
        'selection_end': 2399L,
        'selection_start': 2388L,

        'zoom': 0L},
                       loc('mlpyproggen/demo.py'): {'attrib-starts': [],
        'code-line': 'import traceback, tkinter as tk, tkinter.ttk as ttk, t'\
                     'kinter.font as tkFont\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/dictFile.py'): {'attrib-starts': [],
        'code-line': '# * the Free Software Foundation, either version 3 of '\
                     'the License, or\r\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 636L,
        'selection_end': 669L,
        'selection_start': 669L,
        'zoom': 0L},
                       loc('mlpyproggen/dummy.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/lightgradientbar.py'): {'attrib-star'\
        'ts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('mlpyproggen/tooltip.py'): {'attrib-starts': [('T'\
        'ooltip|0|',
        4),
        ('Tooltip|0|.__init__|0|',
         35)],
        'code-line': '        self.widget.bind("<Button-1>", self.onLeave, a'\
                     'dd="+")\r\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 51L,
        'sel-line-start': 1700L,
        'selection_end': 1760L,
        'selection_start': 1708L,
        'zoom': 0L},
                       loc('mlpyproggen/z2sim.py'): {'attrib-starts': [('sen'\
        'd_data_to_ETH|0|',
        447)],
        'code-line': '\r\n',
        'first-line': 442L,
        'folded-linenos': [],
        'sel-line': 456L,
        'sel-line-start': 16051L,
        'selection_end': 16314L,
        'selection_start': 16051L,
        'zoom': 0L},
                       loc('pyProg_Generator_MobaLedLib.py'): {'attrib-start'\

        's': [('LEDColorTest|0|',
               158),
              ('LEDColorTest|0|.process_serialx|0|',
               2175)],
        'code-line': '\r\n',
        'first-line': 2160L,
        'folded-linenos': [],
        'sel-line': 2176L,
        'sel-line-start': 103622L,
        'selection_end': 103622L,
        'selection_start': 103622L,

        'zoom': 0L},
                       loc('scrolledFrame/ScrolledFrame.py'): {'attrib-start'\
        's': [('ScrolledFrame|0|',
               139),
              ('ScrolledFrame|0|._configure_canvas|0|',
               204)],
        'code-line': '        pass\r\n',
        'first-line': 186L,
        'folded-linenos': [],
        'sel-line': 216L,
        'sel-line-start': 10170L,
        'selection_end': 10182L,
        'selection_start': 10182L,
        'zoom': 0L},
                       loc('scrolledFrame/VerticalScrolledFrame.py'): {'attr'\
        'ib-starts': [('VerticalScrolledFrame|0|',
                       5)],
        'code-line': '    * This frame only allows vertical scrolling\r\n',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 373L,
        'selection_end': 420L,
        'selection_start': 420L,
        'zoom': 0L},
                       loc('serial/serialcli.py'): {'attrib-starts': [('Seri'\
        'al|0|',
        22),
        ('Serial|0|._update_rts_state|0|',
         208)],
        'code-line': '        """Set terminal status line: Request To Send""'\
                     '"\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 209L,
        'sel-line-start': 7821L,
        'selection_end': 7860L,
        'selection_start': 7860L,
        'zoom': 0L},
                       loc('serial/serialjava.py'): {'attrib-starts': [('Ser'\
        'ial|0|',
        52),
        ('Serial|0|.reset_output_buffer|0|',
         189)],
        'code-line': '        Clear output buffer, aborting the current outp'\
                     'ut and\n',
        'first-line': 173L,
        'folded-linenos': [],
        'sel-line': 191L,
        'sel-line-start': 6585L,
        'selection_end': 6601L,
        'selection_start': 6601L,
        'zoom': 0L},
                       loc('serial/serialutil.py'): {'attrib-starts': [('Ser'\
        'ialBase|0|',
        160)],
        'code-line': 'class SerialBase(io.RawIOBase):\n',
        'first-line': 444L,
        'folded-linenos': [],
        'sel-line': 160L,
        'sel-line-start': 5113L,
        'selection_end': 5129L,
        'selection_start': 5119L,
        'zoom': 0L},
                       loc('serial/serialwin32.py'): {'attrib-starts': [('Se'\
        'rial|0|',
        20),
        ('Serial|0|.read|0|',
         259)],
        'code-line': '                    ctypes.byref(self._overlapped_read'\
                     '))\n',
        'first-line': 265L,
        'folded-linenos': [],
        'sel-line': 282L,
        'sel-line-start': 11772L,
        'selection_end': 11772L,
        'selection_start': 11772L,
        'zoom': 0L},
                       loc('serial/tools/list_ports_common.py'): {'attrib-st'\
        'arts': [('ListPortInfo|0|',
                  30),
                 ('ListPortInfo|0|.usb_info|0|',
                  59)],
        'code-line': '            self.vid or 0,\n',
        'first-line': 16L,
        'folded-linenos': [],
        'sel-line': 62L,
        'sel-line-start': 1774L,
        'selection_end': 1800L,
        'selection_start': 1800L,
        'zoom': 0L},
                       loc('tkcolorpicker/colorpicker.py'): {'attrib-starts': [('C'\
        'olorPicker|0|',
        62),
        ('ColorPicker|0|._update_preview|0|',
         360)],
        'code-line': '        if ledcount >0:\n',
        'first-line': 633L,
        'folded-linenos': [],
        'sel-line': 367L,
        'sel-line-start': 16470L,
        'selection_end': 16485L,
        'selection_start': 16485L,
        'zoom': 0L},
                       loc('tkcolorpicker/functions.py'): {'attrib-starts': [('h'\
        'exa_to_rgb|0|',
        109)],
        'code-line': 'def hexa_to_rgb(color):\n',
        'first-line': 89L,
        'folded-linenos': [],
        'sel-line': 109L,
        'sel-line-start': 4159L,
        'selection_end': 4496L,
        'selection_start': 4159L,
        'zoom': 0L},
                       loc('tkcolorpicker/limitvar.py'): {'attrib-starts': [('L'\
        'imitVar|0|',
        25),
        ('LimitVar|0|.get|0|',
         40)],
        'code-line': '        if val != "":\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 48L,
        'sel-line-start': 1689L,
        'selection_end': 1689L,
        'selection_start': 1689L,
        'zoom': 0L},
                       loc('tkcolorpicker/spinbox.py'): {'attrib-starts': [('S'\
        'pinbox|0|',
        25),
        ('Spinbox|0|.focusout|0|',
         98)],
        'code-line': '        bc = self.style.lookup("TEntry", "bordercolor"'\
                     ', ("!focus",))\n',
        'first-line': 18L,
        'folded-linenos': [],
        'sel-line': 100L,
        'sel-line-start': 4304L,
        'selection_end': 4305L,
        'selection_start': 4305L,
        'zoom': 0L},
                       loc('../../csv_to_json_macro2.py'): {'attrib-starts': [('s'\
        'aveDicttoFile|0|',
        5)],
        'code-line': '        pass\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 11L,
        'sel-line-start': 278L,
        'selection_end': 290L,
        'selection_start': 290L,
        'zoom': 0L},
                       loc('../../../../exiftooltest/exiftooltest.py'): {'at'\
        'trib-starts': [],
        'code-line': 'text1 = Text(root, height=20, width=30)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 40L,
        'selection_end': 1075L,
        'selection_start': 40L,
        'zoom': 0L},
                       loc('../../../../ledtest.py'): {'attrib-starts': [],
        'code-line': 'label2text = tk.Label(root, text="Bitte den ARDUINO Po'\
                     'rt hier eintragen")\r\n',
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 442L,
        'selection_end': 745L,
        'selection_start': 442L,
        'zoom': 0L},
                       loc('../../../../ledtest.pyw'): {'attrib-starts': [],
        'code-line': '',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../ledtest_Hardi/ledtest.py'): {'attrib'\
        '-starts': [],
        'code-line': "        message = \"#L\" + '{:02x}'.format(old_led) + "\
                     "\" \" + '{:02x}'.format(test_color[0]) + \" \" + '{:02"\
                     "x}'.format(test_color[1]) + \" \" + '{:02x}'.format(te"\
                     "st_color[2]) + \"\\n\"\r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 49L,
        'sel-line-start': 1630L,
        'selection_end': 1803L,
        'selection_start': 1630L,
        'zoom': 0L},
                       loc('../../../../mm_test.py'): {'attrib-starts': [],
        'code-line': '            print(filepathname," ",path," ",filename)'\
                     '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 427L,
        'selection_end': 479L,
        'selection_start': 479L,
        'zoom': 0L},
                       loc('../../../../mobaledlib.py'): {'attrib-starts': [],
        'code-line': '\tbut WITHOUT ANY WARRANTY; without even the implied w'\
                     'arranty of\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 416L,
        'selection_end': 421L,
        'selection_start': 421L,
        'zoom': 0L},
                       loc('../../../../mp4metadata/example.py'): {'attrib-s'\
        'tarts': [],
        'code-line': "    tvepisodenum = find_metadata_atom(file, 'tvepisode"\
                     "')\r\n",
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 849L,
        'selection_end': 859L,
        'selection_start': 859L,
        'zoom': 0L},
                       loc('../../../../mp4metadata/mp4file/__init__.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 25L,
        'selection_end': 25L,
        'selection_start': 25L,
        'zoom': 0L},
                       loc('../../../../mp4metadata/mp4file/atom.py'): {'att'\
        'rib-starts': [('parse_atom|0|',
                        43)],
        'code-line': '        offset = file.tell()\r\n',
        'first-line': 40L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 962L,
        'selection_end': 962L,
        'selection_start': 962L,
        'zoom': 0L},
                       loc('../../../../mp4metadata/mp4file/atomsearch.py'): {'a'\
        'ttrib-starts': [('findall_path|0|',
                          50)],
        'code-line': '    return all_res',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 58L,
        'sel-line-start': 1608L,
        'selection_end': 1626L,
        'selection_start': 1626L,
        'zoom': 0L},
                       loc('../../../../mp4metadata/mp4file/mp4file.py'): {'a'\
        'ttrib-starts': [('Mp4File|0|',
                          17),
                         ('Mp4File|0|.__init__|0|',
                          18)],
        'code-line': '        file = open(filename, "rb")\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 380L,
        'selection_end': 380L,
        'selection_start': 380L,
        'zoom': 0L},
                       loc('../../../../scrolltest.py'): {'attrib-starts': [],
        'code-line': 'canvas.yview_moveto(1.0)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 27L,
        'sel-line-start': 709L,
        'selection_end': 722L,
        'selection_start': 722L,
        'zoom': 0L},
                       loc('../../../../serial/serialwin32.py'): {'attrib-st'\
        'arts': [('Serial|0|',
                  20),
                 ('Serial|0|.open|0|',
                  32)],
        'code-line': '            raise SerialException("could not open port'\
                     ' {!r}: {!r}".format(self.portstr, ctypes.WinError()))'\
                     '\n',
        'first-line': 43L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2197L,
        'selection_end': 2197L,
        'selection_start': 2197L,
        'zoom': 0L},
                       loc('../../../../serial_monitor2/serial/serialwin32.py'): {'a'\
        'ttrib-starts': [('Serial|0|',
                          20),
                         ('Serial|0|.open|0|',
                          32)],
        'code-line': '            raise SerialException("could not open port'\
                     ' {!r}: {!r}".format(self.portstr, ctypes.WinError()))'\
                     '\n',
        'first-line': 13L,
        'folded-linenos': [],
        'sel-line': 61L,
        'sel-line-start': 2197L,
        'selection_end': 2197L,
        'selection_start': 2197L,
        'zoom': 0L},
                       loc('../../../../serial_monitor2/serialmon_Tkinter.py'): {'a'\
        'ttrib-starts': [('SerialThread|0|',
                          6),
                         ('SerialThread|0|.run|0|',
                          10)],
        'code-line': '                self.queue.put(text)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 477L,
        'selection_end': 513L,
        'selection_start': 513L,
        'zoom': 0L},
                       loc('../../../../serialmon3.py'): {'attrib-starts': [('r'\
        'eadSerial|0|',
        28)],
        'code-line': '    while True:\r\n',
        'first-line': 9L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 695L,
        'selection_end': 695L,
        'selection_start': 695L,
        'zoom': 0L},
                       loc('../../../../tab_test3.py'): {'attrib-starts': [('N'\
        'oteBook|0|',
        21),
        ('NoteBook|0|.switch_tab1|0|',
         34)],
        'code-line': '        new_frame = frame_class(self.notebook)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 1186L,
        'selection_end': 1200L,
        'selection_start': 1200L,
        'zoom': 0L},
                       loc('../../../../tab_test4.py'): {'attrib-starts': [('M'\
        'ainWdw|0|',
        23),
        ('MainWdw|0|.__init__|0|',
         28)],
        'code-line': '        self._nb = ttk.Notebook(self)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 30L,
        'sel-line-start': 859L,
        'selection_end': 1187L,
        'selection_start': 859L,
        'zoom': 0L},
                       loc('../../../../test/test01.py'): {'attrib-starts': [],
        'code-line': 'root.mainloop()',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 439L,
        'selection_end': 454L,
        'selection_start': 454L,
        'zoom': 0L},
                       loc('../../../../test2.py'): {'attrib-starts': [],
        'code-line': '    app.mainloop()',
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2842L,
        'selection_end': 2852L,
        'selection_start': 2852L,
        'zoom': 0L},
                       loc('../../../../test4.py'): {'attrib-starts': [],
        'code-line': "btn2 = Button(root, text = 'Click me !', command = Non"\
                     "e) \r\n",
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 564L,
        'selection_end': 621L,
        'selection_start': 621L,
        'zoom': 0L},
                       loc('../../../../test5.py'): {'attrib-starts': [],
        'code-line': 'for key in a_dict.keys():\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 70L,
        'selection_end': 94L,
        'selection_start': 94L,
        'zoom': 0L},
                       loc('../../../../test6.py'): {'attrib-starts': [('but'\
        'tonCountdownClick|0|',
        3)],
        'code-line': '        tkFenster.after(1000, buttonCountdownClick)\r'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 239L,
        'selection_end': 290L,
        'selection_start': 290L,
        'zoom': 0L},
                       loc('../../../../test9.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../test_html.py'): {'attrib-starts': [],
        'code-line': 'Wrapper for the TkHtml widget from http://www.hwaci.co'\
                     'm.\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 4L,
        'sel-line-start': 17L,
        'selection_end': 73L,
        'selection_start': 52L,
        'zoom': 0L},
                       loc('../../../../threading_test1.py'): {'attrib-start'\
        's': [],
        'code-line': '\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../threading_test2.py'): {'attrib-start'\
        's': [('consumer|0|',
               17)],
        'code-line': '        message = queue.get()\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 575L,
        'selection_end': 604L,
        'selection_start': 604L,
        'zoom': 0L},
                       loc('../../../../tk_test.py'): {'attrib-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../tk_test1.py'): {'attrib-starts': [],
        'code-line': 'app = App(root)\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 545L,
        'selection_end': 560L,
        'selection_start': 560L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/__init__.py'): {'attri'\
        'b-starts': [],
        'code-line': '\n',
        'first-line': 36L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/__main__.py'): {'attri'\
        'b-starts': [],
        'code-line': '\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/alphabar.py'): {'attri'\
        'b-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/colorpicker.py'): {'at'\
        'trib-starts': [],
        'code-line': 'Copyright 2017 Juliette Monsel <j_4321@protonmail.com>'\
                     '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 85L,
        'selection_end': 110L,
        'selection_start': 110L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/colorsquare.py'): {'at'\
        'trib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/colorwheel.py'): {'att'\
        'rib-starts': [],
        'code-line': '\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/functions.py'): {'attr'\
        'ib-starts': [],
        'code-line': '\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/gradientbar.py'): {'at'\
        'trib-starts': [('GradientBar|0|',
                         25),
                        ('GradientBar|0|.set|0|',
                         114)],
        'code-line': '        x = hue / 360. * self.winfo_width()\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 116L,
        'sel-line-start': 4009L,
        'selection_end': 4009L,
        'selection_start': 4009L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/lightgradientbar.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 54L,
        'sel-line-start': 2371L,
        'selection_end': 2371L,
        'selection_start': 2371L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/limitvar.py'): {'attri'\
        'b-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../tkcolorpicker/spinbox.py'): {'attrib'\
        '-starts': [],
        'code-line': '# -*- coding: utf-8 -*-\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../tkintertable/TableModels.py'): {'att'\
        'rib-starts': [],
        'code-line': '\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 1005L,
        'selection_end': 1005L,
        'selection_start': 1005L,
        'zoom': 0L},
                       loc('../../../../tkintertable/Tables.py'): {'attrib-s'\
        'tarts': [('TableCanvas|0|',
                   49),
                  ('TableCanvas|0|.__init__|0|',
                   52)],
        'code-line': '        self.parentframe = parent\n',
        'first-line': 2571L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 2012L,
        'selection_end': 2038L,
        'selection_start': 2038L,
        'zoom': 0L},
                       loc('../../../../tkintertable/Testing.py'): {'attrib-'\
        'starts': [],
        'code-line': 'from .Tables import TableCanvas\n',
        'first-line': 24L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 982L,
        'selection_end': 982L,
        'selection_start': 982L,
        'zoom': 0L},
                       loc('../../../../uart-visualizer/UART-visualizer.py'): {'a'\
        'ttrib-starts': [('update_gui|0|',
                          91)],
        'code-line': '            text.insert(END, filter_data)\r\n',
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 111L,
        'sel-line-start': 3572L,
        'selection_end': 3613L,
        'selection_start': 3584L,
        'zoom': 0L},
                       loc('../../../../usb_test.py'): {'attrib-starts': [],
        'code-line': 'import serial.tools.list_ports as portlist\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 1L,
        'sel-line-start': 22L,
        'selection_end': 64L,
        'selection_start': 22L,
        'zoom': 0L},
                       loc('../../../../webbrowsertest1.py'): {'attrib-start'\
        's': [],
        'code-line': 'import webbrowser\r\n',
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 2L,
        'sel-line-start': 29L,
        'selection_end': 46L,
        'selection_start': 29L,
        'zoom': 0L},
                       loc('../../../../zim-desktop-wiki-master/zim-desktop-wiki-master/zim/gui/templateeditordialog.py'): {'a'\
        'ttrib-starts': [('TemplateEditorDialog|0|',
                          14),
                         ('TemplateEditorDialog|0|.__init__|0|',
                          19)],
        'code-line': '\t\t\tvbbox.add(b)\n',
        'first-line': 183L,
        'folded-linenos': [],
        'sel-line': 56L,
        'sel-line-start': 1946L,
        'selection_end': 1961L,
        'selection_start': 1961L,
        'zoom': 0L},
                       loc('../../../../zim-desktop-wiki-master/zim-desktop-wiki-master/zim/main/command.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 3L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../zim-desktop-wiki-master/zim-desktop-wiki-master/zim/notebook/notebook.py'): {'a'\
        'ttrib-starts': [],
        'code-line': '\n',
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../../../zim-desktop-wiki-master/zim-desktop-wiki-master/zim/notebook/page.py'): {'a'\
        'ttrib-starts': [('Page|0|',
                          394)],
        'code-line': '\tPage objects inherit from L{Path} but have internal '\
                     'state reflecting\n',
        'first-line': 696L,
        'folded-linenos': [],
        'sel-line': 397L,
        'sel-line-start': 11021L,
        'selection_end': 11090L,
        'selection_start': 11090L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.default-encoding = 'utf_8'
proj.env-vars = {None: ('default',
                        [u''])}
proj.initial-dir = {None: ('custom',
                           u'c:\\Users\\Harold\\Documents\\Arduino\\MobaLedLib_1.0.1')}
proj.matplotlib-event-loop = False
proj.pyexec = {None: ('default',
                      u'C:\\Program Files\\Python37\\python.exe')}
proj.pypath = {None: ('default',
                      [u'c:\\Users\\Harold\\Documents\\Vegas Application Extensions\\VEGASPython_PN',
                       u'c:\\Users\\Harold\\Documents\\Vegas Application Extensions\\Python37\\Lib'])}
proj.template-debugging = False
search.replace-history = [u'self.fonttitle',
                          u'self.fontbutton',
                          u'self.fontentry',
                          u'self.fonttext',
                          u'self.fontlabel',
                          u'upload_to_ARDUINO',
                          u'ARDUINOConfigPage',
                          u'LocInCh',
                          u'mledgrouptable',
                          u'mledeffecttable',
                          u'logging.info',
                          u'self.EthSend',
                          u'master',
                          u'sticky=STICKY',
                          u'controller',
                          u')',
                          u'}',
                          u'self.setConfigData(',
                          u'self.getConfigData(']
search.search-history = [u'mainfile_dir',
                         u'SwitchTypeStr',
                         u'm',
                         u'mll',
                         u'configpage',
                         u'config',
                         u'CAN-switch',
                         u'USE_CAN_AS_INPUT',
                         u'?*',
                         u'?+',
                         u'?* result',
                         u'rmbus',
                         u'rmbust',
                         u'#define',
                         u'#',
                         u'USE_RS232_AS_INPUT',
                         u'send_data_to_ETH',
                         u'USE_EXT_ADDR',
                         u'can',
                         u'an Excel']
search.search-scope-history = [loc('file:C:/Program Files (x86)/Wing Personal 7.1/bin/#define'),
                               loc('file:C:/Program Files (x86)/Wing Personal 7.1/bin/#'),
                               loc('../../../../Program Files (x86)/Wing Personal 7.1/bin/set_coltab'),
                               loc('../../../../Program Files (x86)/Wing Personal 7.1/bin/set')]
testing.stored-results = (1,
                          [],
                          {})
